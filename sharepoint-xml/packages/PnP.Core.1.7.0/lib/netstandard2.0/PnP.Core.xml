<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PnP.Core</name>
    </assembly>
    <members>
        <member name="T:PnP.Core.AuthenticationError">
            <summary>
            Error class for authentication errors
            </summary>
        </member>
        <member name="M:PnP.Core.AuthenticationError.#ctor(PnP.Core.ErrorType,System.Text.Json.JsonElement)">
            <summary>
            Constructs an <see cref="T:PnP.Core.AuthenticationError"/> instance
            </summary>
            <param name="type">Type of the error</param>
            <param name="error">Error content as <see cref="T:System.Text.Json.JsonElement"/></param>
        </member>
        <member name="M:PnP.Core.AuthenticationError.#ctor(PnP.Core.ErrorType,System.String)">
            <summary>
            Constructs an <see cref="T:PnP.Core.AuthenticationError"/> instance
            </summary>
            <param name="type">Type of the error</param>
            <param name="error">Error content as <see cref="T:System.String"/></param>
        </member>
        <member name="P:PnP.Core.AuthenticationError.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:PnP.Core.AuthenticationError.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:PnP.Core.AuthenticationError.ErrorCodes">
            <summary>
            List of returned error codes
            </summary>
        </member>
        <member name="P:PnP.Core.AuthenticationError.TimeStamp">
            <summary>
            Time the error happened
            </summary>
        </member>
        <member name="P:PnP.Core.AuthenticationError.TraceId">
            <summary>
            Trace id
            </summary>
        </member>
        <member name="P:PnP.Core.AuthenticationError.CorrelationId">
            <summary>
            Correlation id
            </summary>
        </member>
        <member name="M:PnP.Core.AuthenticationError.ToString">
            <summary>
            Outputs a <see cref="T:PnP.Core.AuthenticationError"/> to a string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:PnP.Core.AuthenticationException">
            <summary>
            Authentication exception
            </summary>
        </member>
        <member name="M:PnP.Core.AuthenticationException.#ctor(PnP.Core.ErrorType,System.String)">
            <summary>
            <see cref="T:PnP.Core.AuthenticationException"/> constructor
            </summary>
            <param name="type">Type of error</param>
            <param name="message">Error message</param>
        </member>
        <member name="M:PnP.Core.AuthenticationException.#ctor(PnP.Core.ErrorType,System.String,System.Exception)">
            <summary>
            <see cref="T:PnP.Core.AuthenticationException"/> constructor
            </summary>
            <param name="type">Type of error</param>
            <param name="message">Error message</param>
            <param name="innerException">Inner exception (if any)</param>
        </member>
        <member name="M:PnP.Core.AuthenticationException.ToString">
            <summary>
            Outputs a <see cref="T:PnP.Core.AuthenticationException"/> to a string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:PnP.Core.BaseError">
            <summary>
            Base error information
            </summary>
        </member>
        <member name="M:PnP.Core.BaseError.#ctor(PnP.Core.ErrorType)">
            <summary>
            Default base constructor/>
            </summary>
            <param name="type">Type of the error</param>
        </member>
        <member name="P:PnP.Core.BaseError.Type">
            <summary>
            <see cref="T:PnP.Core.ErrorType"/> of the error
            </summary>
        </member>
        <member name="P:PnP.Core.BaseError.PnPCorrelationId">
            <summary>
            Correlation for a PnP Core SDK operation
            </summary>
        </member>
        <member name="P:PnP.Core.BaseError.AdditionalData">
            <summary>
            Additional data linked to an error
            </summary>
        </member>
        <member name="M:PnP.Core.BaseError.AddAdditionalData(System.String,System.Object)">
            <summary>
            Adds additional error data to this error as property/value pairs
            </summary>
            <param name="propertyName">Property to add</param>
            <param name="propertyValue">Value to add</param>
        </member>
        <member name="T:PnP.Core.ClientError">
            <summary>
            Information about the client error
            </summary>
        </member>
        <member name="M:PnP.Core.ClientError.#ctor(PnP.Core.ErrorType,System.String)">
            <summary>
            ClientError constructor, creates a <see cref="T:PnP.Core.ClientError"/> for the provided error type and message
            </summary>
            <param name="type">Type of the error</param>
            <param name="message">Error message</param>
        </member>
        <member name="P:PnP.Core.ClientError.Message">
            <summary>
            Error message that was linked to the client error
            </summary>
        </member>
        <member name="T:PnP.Core.ClientException">
            <summary>
            PnP Client exception
            </summary>
        </member>
        <member name="M:PnP.Core.ClientException.#ctor">
            <summary>
            Default constructor for ClientException
            </summary>
        </member>
        <member name="M:PnP.Core.ClientException.#ctor(System.String)">
            <summary>
            Constructor for ClientException
            </summary>
            <param name="message">The message of the exception</param>
        </member>
        <member name="M:PnP.Core.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor for ClientException
            </summary>
            <param name="message">The message of the exception</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:PnP.Core.ClientException.#ctor(PnP.Core.ErrorType,System.String)">
            <summary>
            <see cref="T:PnP.Core.ClientException"/> constructor 
            </summary>
            <param name="type">Type of the error</param>
            <param name="message">Error message</param>
        </member>
        <member name="M:PnP.Core.ClientException.#ctor(PnP.Core.ErrorType,System.String,System.Exception)">
            <summary>
            <see cref="T:PnP.Core.ClientException"/> constructor 
            </summary>
            <param name="type">Type of the error</param>
            <param name="message">Error message</param>
            <param name="innerException">Inner exception to link to this exception</param>
        </member>
        <member name="M:PnP.Core.ClientException.ToString">
            <summary>
            Outputs a <see cref="T:PnP.Core.ClientException"/> to a string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:PnP.Core.CsomError">
            <summary>
            Csom service error
            </summary>
        </member>
        <member name="M:PnP.Core.CsomError.#ctor(PnP.Core.ErrorType,System.Int32,System.Text.Json.JsonElement)">
            <summary>
            Default constructor for the <see cref="T:PnP.Core.SharePointRestError"/> error
            </summary>
            <param name="type"><see cref="T:PnP.Core.ErrorType"/> type of the error</param>
            <param name="httpResponseCode">Http response code of the service request that failed</param>
            <param name="errorJson">Json containing the error information</param>
        </member>
        <member name="P:PnP.Core.CsomError.ServerErrorCode">
            <summary>
            SharePoint server error code
            </summary>
        </member>
        <member name="M:PnP.Core.CsomError.ToString">
            <summary>
            Outputs a <see cref="T:PnP.Core.CsomError"/> to a string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:PnP.Core.CsomServiceException">
            <summary>
            CSOM Service exception
            </summary>
        </member>
        <member name="M:PnP.Core.CsomServiceException.#ctor(PnP.Core.ErrorType,System.Int32,System.Text.Json.JsonElement)">
            <summary>
            Creates a <see cref="T:PnP.Core.CsomServiceException"/> using the provided error type, http response code and CSOM request response
            </summary>
            <param name="type">Type of the error</param>
            <param name="httpResponseCode">Http response code of the executed CSOM request</param>
            <param name="response">JSON response of the executed CSOM request</param>
        </member>
        <member name="M:PnP.Core.CsomServiceException.ToString">
            <summary>
            Outputs a <see cref="T:PnP.Core.CsomServiceException"/> to a string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:PnP.Core.ErrorType">
            <summary>
            List of possible errors that can be thrown 
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.GraphServiceError">
            <summary>
            Graph service request returned an error
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.SharePointRestServiceError">
            <summary>
            SharePoint REST request returned an error
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.CsomServiceError">
            <summary>
            CSOM request returned an error
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.AzureADError">
            <summary>
            Authentication call to Azure AD failed
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.MissingAddApiHandler">
            <summary>
            Adding an item to Microsoft 365 using 'AddAsync' requires that the added model class has an AddApiHandler configured. See contribution docs to learn more
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.ModelMetadataIncorrect">
            <summary>
            There's incomplete model metadata configured. See contribution docs to learn more.
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.GraphBetaNotAllowed">
            <summary>
            Making a Graph Beta call is not allowed. See usage docs to learn more
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.Unsupported">
            <summary>
            Unsupported action
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.CollectionNotLoaded">
            <summary>
            Collection needs to be loaded once before you can use the paging methods for paged data retrieval
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.PropertyNotLoaded">
            <summary>
            The property you want to use was not yet loaded, first request it before using it
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.InstanceWasDeleted">
            <summary>
            This model instance was deleted, you can't use it anymore
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.LinqError">
            <summary>
            Something went wrong with issuing a linq query
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.ConfigurationError">
            <summary>
            There's an issue in the provided configuration data
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.InvalidParameters">
            <summary>
            Invalid parameters are sent it for a request
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.UnresolvedTokens">
            <summary>
            The API call still contains unresolved tokens
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.UnsupportedViaBatch">
            <summary>
            The requests in this batch are not vald
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.UnexpectedMappingType">
            <summary>
            The payload to map to object has an unexpected type
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.OfflineDataError">
            <summary>
            There's an issue with the available offline test data
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.TeamsAsyncOperationError">
            <summary>
            Something went wrong when doing an Teams async operation
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.TooManyRetries">
            <summary>
            Too many retries of an http request happened
            </summary>
        </member>
        <member name="F:PnP.Core.ErrorType.TooManyBatchRetries">
            <summary>
            Too many retries of a request in a Graph batch happened
            </summary>
        </member>
        <member name="T:PnP.Core.MicrosoftGraphError">
            <summary>
            Microsoft Graph service error
            </summary>
        </member>
        <member name="M:PnP.Core.MicrosoftGraphError.#ctor(PnP.Core.ErrorType,System.Int32,System.Text.Json.JsonElement)">
            <summary>
            Default constructor for the <see cref="T:PnP.Core.MicrosoftGraphError"/> error
            </summary>
            <param name="type"><see cref="T:PnP.Core.ErrorType"/> type of the error</param>
            <param name="httpResponseCode">Http response code of the service request that failed</param>
            <param name="error"><see cref="T:System.Text.Json.JsonElement"/> holding the json data of the service error</param>
        </member>
        <member name="M:PnP.Core.MicrosoftGraphError.#ctor(PnP.Core.ErrorType,System.Int32,System.String)">
            <summary>
            Default constructor for the <see cref="T:PnP.Core.MicrosoftGraphError"/> error
            </summary>
            <param name="type"><see cref="T:PnP.Core.ErrorType"/> type of the error</param>
            <param name="httpResponseCode">Http response code of the service request that failed</param>
            <param name="response">String holding the information about the failed request</param>
        </member>
        <member name="M:PnP.Core.MicrosoftGraphError.ToString">
            <summary>
            Outputs a <see cref="T:PnP.Core.MicrosoftGraphError"/> to a string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:PnP.Core.MicrosoftGraphServiceException">
            <summary>
            Microsoft Graph Service exception
            </summary>
        </member>
        <member name="M:PnP.Core.MicrosoftGraphServiceException.#ctor(PnP.Core.ErrorType,System.Int32,System.String)">
            <summary>
            Creates a <see cref="T:PnP.Core.MicrosoftGraphServiceException"/> using the provided error type, http response code and request response
            </summary>
            <param name="type">Type of the error</param>
            <param name="httpResponseCode">Http response code of the executed Graph request</param>
            <param name="response">Response of the executed Graph request</param>
        </member>
        <member name="M:PnP.Core.MicrosoftGraphServiceException.#ctor(PnP.Core.ErrorType,System.Int32,System.Text.Json.JsonElement)">
            <summary>
            Creates a <see cref="T:PnP.Core.MicrosoftGraphServiceException"/> using the provided error type, http response code and request response
            </summary>
            <param name="type">Type of the error</param>
            <param name="httpResponseCode">Http response code of the executed Graph request</param>
            <param name="error">Json error coming from the executed Graph request</param>
        </member>
        <member name="M:PnP.Core.MicrosoftGraphServiceException.ToString">
            <summary>
            Outputs a <see cref="T:PnP.Core.MicrosoftGraphServiceException"/> to a string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:PnP.Core.PnPException">
            <summary>
            Base class for the pnp core sdk exceptions
            </summary>
        </member>
        <member name="M:PnP.Core.PnPException.#ctor(System.String)">
            <summary>
            Creates a PnP Exception
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:PnP.Core.PnPException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a PnP Exception
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception to be linked to this <see cref="T:PnP.Core.PnPException"/></param>
        </member>
        <member name="M:PnP.Core.PnPException.#ctor">
            <summary>
            Creates a PnP Exception
            </summary>
        </member>
        <member name="P:PnP.Core.PnPException.Error">
            <summary>
            Additional error information
            </summary>
        </member>
        <member name="T:PnP.Core.ServiceError">
            <summary>
            Error information for a service error
            </summary>
        </member>
        <member name="M:PnP.Core.ServiceError.#ctor(PnP.Core.ErrorType,System.Int32)">
            <summary>
            <see cref="T:PnP.Core.ServiceError"/> constructor using error type and http response code to create a backend service request error
            </summary>
            <param name="type">Type of the error</param>
            <param name="httpResponseCode">Http response code of the error</param>
        </member>
        <member name="P:PnP.Core.ServiceError.HttpResponseCode">
            <summary>
            Http response code that was linked to the service error
            </summary>
        </member>
        <member name="P:PnP.Core.ServiceError.Message">
            <summary>
            Error message that was linked to the service error
            </summary>
        </member>
        <member name="P:PnP.Core.ServiceError.ClientRequestId">
            <summary>
            Client request id header returned in the response.
            </summary>
        </member>
        <member name="P:PnP.Core.ServiceError.Code">
            <summary>
            Graph error code
            </summary>
        </member>
        <member name="T:PnP.Core.ServiceException">
            <summary>
            Abstract class representing service errors
            </summary>
        </member>
        <member name="M:PnP.Core.ServiceException.#ctor(System.String)">
            <summary>
            Creates a service request exception
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:PnP.Core.ServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a service request exception
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception to be linked to this <see cref="T:PnP.Core.ServiceException"/></param>
        </member>
        <member name="M:PnP.Core.ServiceException.#ctor">
            <summary>
            Creates a service request exception
            </summary>
        </member>
        <member name="M:PnP.Core.ServiceException.#ctor(PnP.Core.ErrorType,System.Int32,System.String)">
            <summary>
            Creates a service request exception
            </summary>
            <param name="type">Error type</param>
            <param name="httpResponseCode">Http response code of the service request that got an error back</param>
            <param name="message">Exception message</param>
        </member>
        <member name="T:PnP.Core.SharePointRestError">
            <summary>
            SharePoint Rest service error
            </summary>
        </member>
        <member name="M:PnP.Core.SharePointRestError.#ctor(PnP.Core.ErrorType,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Default constructor for the <see cref="T:PnP.Core.SharePointRestError"/> error
            </summary>
            <param name="type"><see cref="T:PnP.Core.ErrorType"/> type of the error</param>
            <param name="httpResponseCode">Http response code of the service request that failed</param>
            <param name="response">Service request response content</param>
            <param name="responseHeaders">Optional collection of request response headers</param>
        </member>
        <member name="P:PnP.Core.SharePointRestError.ServerErrorCode">
            <summary>
            SharePoint server error code
            </summary>
        </member>
        <member name="M:PnP.Core.SharePointRestError.ToString">
            <summary>
            Outputs a <see cref="T:PnP.Core.SharePointRestError"/> to a string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:PnP.Core.SharePointRestServiceException">
            <summary>
            Microsoft SharePoint REST Service exception
            </summary>
        </member>
        <member name="M:PnP.Core.SharePointRestServiceException.#ctor(PnP.Core.ErrorType,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates a <see cref="T:PnP.Core.SharePointRestServiceException"/> using the provided error type, http response code and request response
            </summary>
            <param name="type">Type of the error</param>
            <param name="httpResponseCode">Http response code of the service request</param>
            <param name="response">Response of the service request that errored out</param>
            <param name="responseHeaders">Optional collection of request response headers</param>
        </member>
        <member name="M:PnP.Core.SharePointRestServiceException.ToString">
            <summary>
            Outputs a <see cref="T:PnP.Core.SharePointRestServiceException"/> to a string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:PnP.Core.Model.ConcreteTypeAttribute">
            <summary>
            Attribute to declare the concrete type for this interface
            </summary>
        </member>
        <member name="P:PnP.Core.Model.ConcreteTypeAttribute.Type">
            <summary>
            The actual concrete type implementing the interface
            </summary>
        </member>
        <member name="T:PnP.Core.Model.GraphPropertyAttribute">
            <summary>
            Attribute to define how a model property maps to a Microsoft Graph field for usage in Microsoft Graph API calls
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphPropertyAttribute.Expandable">
            <summary>
            Is this property an expandable property?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphPropertyAttribute.Beta">
            <summary>
            Model property to define that a property can only be handled using the Microsoft Graph beta endpoint
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphPropertyAttribute.Get">
            <summary>
            Url to get this field, needed in case the field cannot be loaded via an expand
            </summary>
        </member>
        <member name="T:PnP.Core.Model.GraphTypeAttribute">
            <summary>
            Attribute used to decorate model classes that can be loaded via Microsoft Graph
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphTypeAttribute.Id">
            <summary>
            Defines the field that serves as the id field in Graph, typically this is the "id" field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphTypeAttribute.Target">
            <summary>
            The actual target type for which this attribute is valid
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphTypeAttribute.Uri">
            <summary>
            URI that identifies an object in Microsoft Graph, used for get, update and delete requests
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphTypeAttribute.LinqGet">
            <summary>
            Get LINQ query API URI, overrides the global SharePointURI when specified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphTypeAttribute.Get">
            <summary>
            Get API URI, overrides the global GraphURI when specified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphTypeAttribute.Update">
            <summary>
            Update API URI, overrides the global GraphURI when specified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphTypeAttribute.Delete">
            <summary>
            Delete API URI, overrides the global GraphURI when specified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphTypeAttribute.OverflowProperty">
            <summary>
            Model property name that will hold dynamic data (e.g. List Item property/value pairs)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.GraphTypeAttribute.Beta">
            <summary>
            Model property to define that a model can only be handled using the Microsoft Graph beta endpoint
            </summary>
        </member>
        <member name="T:PnP.Core.Model.KeyPropertyAttribute">
            <summary>
            Indicates that this property is a key property, specifying the keyfield name is required
            </summary>
        </member>
        <member name="T:PnP.Core.Model.PropertyAttribute">
            <summary>
            Base class for attributes that define how a model property maps to the field used in either SharePoint REST or Microsoft Graph
            </summary>
        </member>
        <member name="P:PnP.Core.Model.PropertyAttribute.FieldName">
            <summary>
            Name of the SharePoint field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.PropertyAttribute.ExpandByDefault">
            <summary>
            Expand this property when there's a default get (a get without specifying the fields to load)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.PropertyAttribute.JsonPath">
            <summary>
            Json path that contains the value we need, relative to the object loaded via FieldName
            This works for simple JSON objects without arrays, delimiter will be a dot e.g. property.subproperty.subsub
            </summary>
        </member>
        <member name="P:PnP.Core.Model.PropertyAttribute.UseCustomMapping">
            <summary>
            Force a call out to the custom mapping handler for this field / the default mapping logic will not be applied
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePointPropertyAttribute">
            <summary>
            Attribute to define how a model property maps to a SharePoint field for usage in SharePoint REST calls
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePointTypeAttribute">
            <summary>
            Attribute used to decorate model classes that can be loaded via SharePoint REST
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePointTypeAttribute.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="sharePointType">SharePoint REST type</param>
        </member>
        <member name="P:PnP.Core.Model.SharePointTypeAttribute.Type">
            <summary>
            Defines the OData name of this SharePoint REST type (e.g. SP.Web)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePointTypeAttribute.Target">
            <summary>
            The actual target type for which this attribute is valid
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePointTypeAttribute.Uri">
            <summary>
            URI that identifies an object in SharePoint REST, used for get, update and delete requests
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePointTypeAttribute.LinqGet">
            <summary>
            Get LINQ query API URI, overrides the global SharePointURI when specified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePointTypeAttribute.Get">
            <summary>
            Get API URI, overrides the global SharePointURI when specified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePointTypeAttribute.Update">
            <summary>
            Update API URI, overrides the global SharePointURI when specified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePointTypeAttribute.Delete">
            <summary>
            Delete API URI, overrides the global SharePointURI when specified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePointTypeAttribute.OverflowProperty">
            <summary>
            Model property name that will hold dynamic data (e.g. List Item property/value pairs)
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SystemPropertyAttribute">
            <summary>
            Indicates that a property is not a model property but a system property
            </summary>
        </member>
        <member name="T:PnP.Core.Model.AddApiCall">
            <summary>
            Delegate for requesting the Api call for doing an ADD operation
            </summary>
            <returns>API call for adding a model entity</returns>
        </member>
        <member name="T:PnP.Core.Model.GetApiCallOverride">
            <summary>
            Delegate for overriding the default API call in case of a GET request
            </summary>
            <param name="input">Generated API call</param>
            <returns>Changed API call</returns>
        </member>
        <member name="T:PnP.Core.Model.GetApiCallNonExpandableCollectionOverride">
            <summary>
            Delegate for overriding the default API call in case of a GET request for a non expandable collection
            </summary>
            <param name="input">Generated API call</param>
            <returns>Changed API call</returns>
        </member>
        <member name="T:PnP.Core.Model.UpdateApiCallOverride">
            <summary>
            Delegate for overriding the default API call in case of a UPDATE request
            </summary>
            <param name="input">Generated API call</param>
            <returns>Changed API call</returns>
        </member>
        <member name="T:PnP.Core.Model.DeleteApiCallOverride">
            <summary>
            Delegate for overriding the default API call in case of a DELETE request
            </summary>
            <param name="input">Generated API call</param>
            <returns>Changed API call</returns>
        </member>
        <member name="T:PnP.Core.Model.BaseDataModel`1">
            <summary>
            Base class for all model classes
            </summary>
            <typeparam name="TModel">Model class</typeparam>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.Metadata">
            <summary>
            Dictionary to access the domain model object Metadata
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.PnPContext">
            <summary>
            PnP Context
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.Parent">
            <summary>
            Returns the parent of this model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.Log">
            <summary>
            Connected logger
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.Requested">
            <summary>
            Indicates whether this model was fetched from the server
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.ProcessResponseAsync(PnP.Core.Services.ApiResponse,System.Linq.Expressions.Expression{System.Func{System.Object,System.Object}}[])">
            <summary>
            This method processes an API response to populate the current domain model object
            </summary>
            <param name="apiResponse">The API response to process</param>
            <param name="expressions">List of expressions to define the fields to retrieve during deserialization of the API response</param>
            <returns>The deserialized domain model object</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Retrieves a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.GetBatchAsync(PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Batches the retrieval of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="batch">Batch add this request to</param>
            <param name="selectors">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.GetBatchAsync(PnP.Core.Services.Batch,PnP.Core.Services.ApiCall,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Batches the retrieval of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="batch">Batch add this request to</param>
            <param name="apiOverride"></param>
            <param name="selectors">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.LoadAsync(System.Linq.Expressions.LambdaExpression[])">
            <summary>
            Loads a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="selectors">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.LoadAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Loads a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="selectors">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.LoadBatchAsync(PnP.Core.Services.Batch,System.Linq.Expressions.LambdaExpression[])">
            <summary>
            Batches the load of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="batch">Batch to use for the current request</param>
            <param name="selectors">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.LoadBatchAsync(PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Batches the load of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="batch">Batch to use for the current request</param>
            <param name="selectors">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.AddBatchAsync(PnP.Core.Services.Batch,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds a domain model instance
            </summary>
            <param name="batch">Batch add this request to</param>
            <param name="keyValuePairs">Properties to control add</param>
            <returns>The added domain model</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.AddAsync(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds a domain model instance
            </summary>
            <returns>The added domain model</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.AddBatch(PnP.Core.Services.Batch,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds a domain model instance
            </summary>
            <param name="batch">Batch add this request to</param>
            <param name="keyValuePairs">Properties to control add</param>
            <returns>The added domain model</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.Add(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds a domain model instance
            </summary>
            <returns>The added domain model</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.UpdateBatchAsync">
            <summary>
            Updates a domain model
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.UpdateBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Updates a domain model
            </summary>
            <param name="batch">Batch add this request to</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.UpdateAsync">
            <summary>
            Updates a domain model
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.UpdateBatch">
            <summary>
            Updates a domain model
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.UpdateBatch(PnP.Core.Services.Batch)">
            <summary>
            Updates a domain model
            </summary>
            <param name="batch">Batch add this request to</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.Update">
            <summary>
            Updates a domain model
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.DeleteBatchAsync">
            <summary>
            Deletes a domain model
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.DeleteBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Deletes a domain model
            </summary>
            <param name="batch">Batch add this request to</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.DeleteAsync">
            <summary>
            Deletes a domain model
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.DeleteBatch">
            <summary>
            Deletes a domain model
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.DeleteBatch(PnP.Core.Services.Batch)">
            <summary>
            Deletes a domain model
            </summary>
            <param name="batch">Batch add this request to</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.Delete">
            <summary>
            Deletes a domain model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.GetApiCallOverrideHandler">
            <summary>
            API call override handler for get requests
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.GetApiCallNonExpandableCollectionOverrideHandler">
            <summary>
            API call override handler for get requests for non expandable collections
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.MappingHandler">
            <summary>
            Handler that will fire when a property mapping does cannot be done automatically
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.PostMappingHandler">
            <summary>
            Handler that will fire after the full json to model operation was done
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.BaseBatchRetrieveAsync(PnP.Core.Services.Batch,PnP.Core.Services.ApiCall,System.Func{PnP.Core.Services.FromJson,System.Object},System.Action{System.String},System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Creates and adds a Get request to the given batch
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="apiOverride">Override for the API call</param>
            <param name="selectors">Expressions needed to create the request</param>
            <param name="fromJsonCasting">Delegate for type mapping when the request is executed</param>
            <param name="postMappingJson">Delegate for post mapping</param>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.AddApiCallHandler">
            <summary>
            API call handler for add requests
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.BaseAddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Services.ApiCall,System.Func{PnP.Core.Services.FromJson,System.Object},System.Action{System.String})">
            <summary>
            Creates and adds a Post request to the given batch
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="postApiCall">Api call to execute</param>
            <param name="fromJsonCasting">Delegate for type mapping when the request is executed</param>
            <param name="postMappingJson">Delegate for post mapping</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.BaseAdd(PnP.Core.Services.ApiCall,System.Func{PnP.Core.Services.FromJson,System.Object},System.Action{System.String})">
            <summary>
            Creates and adds a Post request to the given batch
            </summary>
            <param name="postApiCall">Api call to execute</param>
            <param name="fromJsonCasting">Delegate for type mapping when the request is executed</param>
            <param name="postMappingJson">Delegate for post mapping</param>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.UpdateApiCallOverrideHandler">
            <summary>
            API call override handler for update requests
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.BaseBatchUpdateAsync(PnP.Core.Services.Batch,System.Func{PnP.Core.Services.FromJson,System.Object},System.Action{System.String})">
            <summary>
            Creates and adds an Update request to the given batch
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="fromJsonCasting">Delegate for type mapping when the request is executed</param>
            <param name="postMappingJson">Delegate for post mapping</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.BaseUpdate(System.Func{PnP.Core.Services.FromJson,System.Object},System.Action{System.String})">
            <summary>
            Creates and adds an Update request to the given batch
            </summary>
            <param name="fromJsonCasting">Delegate for type mapping when the request is executed</param>
            <param name="postMappingJson">Delegate for post mapping</param>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModel`1.DeleteApiCallOverrideHandler">
            <summary>
            API call override handler for delete requests
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.BaseDeleteBatchAsync(PnP.Core.Services.Batch,System.Func{PnP.Core.Services.FromJson,System.Object},System.Action{System.String})">
            <summary>
            Creates and adds an Delete request to the given batch
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="fromJsonCasting">Delegate for type mapping when the request is executed</param>
            <param name="postMappingJson">Delegate for post mapping</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.BaseDelete(System.Func{PnP.Core.Services.FromJson,System.Object},System.Action{System.String})">
            <summary>
            Creates and adds an Delete request to the given batch
            </summary>
            <param name="fromJsonCasting">Delegate for type mapping when the request is executed</param>
            <param name="postMappingJson">Delegate for post mapping</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.RequestBatchAsync(PnP.Core.Services.Batch,PnP.Core.Services.ApiCall,System.Net.Http.HttpMethod,System.String)">
            <summary>
            Adds a request to the given batch
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="apiCall">Api call to execute</param>
            <param name="method"><see cref="T:System.Net.Http.HttpMethod"/> to use for this request</param>
            <param name="operationName">Name of the operation, used for telemetry purposes</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.RequestAsync(PnP.Core.Services.ApiCall,System.Net.Http.HttpMethod,System.String)">
            <summary>
            Executes a given request
            </summary>
            <param name="apiCall">Api call to execute</param>
            <param name="method"><see cref="T:System.Net.Http.HttpMethod"/> to use for this request</param>
            <param name="operationName">Name of the operation, used for telemetry purposes</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.RawRequestBatchAsync(PnP.Core.Services.Batch,PnP.Core.Services.ApiCall,System.Net.Http.HttpMethod,System.String)">
            <summary>
            Adds a request to the given batch
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="apiCall">Api call to execute</param>
            <param name="method"><see cref="T:System.Net.Http.HttpMethod"/> to use for this request</param>
            <param name="operationName">Name of the operation, used for telemetry purposes</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.RawRequestAsync(PnP.Core.Services.ApiCall,System.Net.Http.HttpMethod,System.String)">
            <summary>
            Executes a given request, not loading the response json in the model but simply returning it
            </summary>
            <param name="apiCall">Api call to execute</param>
            <param name="method"><see cref="T:System.Net.Http.HttpMethod"/> to use for this request</param>
            <param name="operationName">Name of the operation, used for telemetry purposes</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModel`1.GetClassInfo(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Translates model into a set of classes that are used to drive CRUD operations, this takes into account the passed expressions
            </summary>
            <param name="expressions">Data load expressions</param>
            <returns>Entity model class describing this model instance</returns>
        </member>
        <member name="T:PnP.Core.Model.BaseDataModelCollection`1">
            <summary>
            Base abstract class for every Domain Model objects collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModelCollection`1.Metadata">
            <summary>
            Dictionary to access the domain model object Metadata
            </summary>
        </member>
        <member name="F:PnP.Core.Model.BaseDataModelCollection`1.items">
            <summary>
            List of items in the collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModelCollection`1.PnPContext">
            <summary>
            Each item and each collection requires a PnPContext
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModelCollection`1.Parent">
            <summary>
            Parent of this collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModelCollection`1.Count">
            <summary>
            Number of items in the collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModelCollection`1.Requested">
            <summary>
            Was this collectioned loaded with data from a server request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModelCollection`1.Length">
            <summary>
            Number of items in the collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.BaseDataModelCollection`1.RequestedItems">
            <summary>
            Items in the collection
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.Add(`0)">
            <summary>
            Standard add method to add a model to the collection
            </summary>
            <param name="item">Model instance to add</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator, will also purge deleted items
            </summary>
            <returns>Enumerator for this collection</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator, will also purge deleted items
            </summary>
            <returns>Enumerator for this collection</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.Remove(`0)">
            <summary>
            Removes a model from the collection, will be called for example by the logic that consolidates batch requests
            </summary>
            <param name="item">Model to remove</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.PurgeDeletedItems">
            <summary>
            Purges the items marked as deleted
            </summary>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.CreateNew">
            <summary>
            Creates a new instance of the model handled by this collection. The instance will not be added to the collection
            </summary>
            <returns>Model entity</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.CreateNewAndAdd">
            <summary>
            Creates a new instance of the model handled by this collection and adds it to the collection. This 
            add will not mark the collection as requested
            </summary>
            <returns>Model entity</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.PnP#Core#Model#IManageableCollection#CreateNew">
            <summary>
            Parameter less new, needs to be overriden by the collections using this base class
            </summary>
            <returns>Model entity</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.PnP#Core#Model#IManageableCollection#CreateNewAndAdd">
            <summary>
            Creates a new instance of the model handled by this collection and adds it to the collection. This 
            add will not mark the collection as requested
            </summary>
            <returns>Model entity</returns>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.Replace(System.Int32,System.Object)">
            <summary>
            Replaces an item of the collection
            </summary>
            <param name="itemIndex">The index of the item to replace</param>
            <param name="newItem">The new item to replace the existing one with</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.Replace(System.Int32,`0)">
            <summary>
            Replaces an item of the collection
            </summary>
            <param name="itemIndex">The index of the item to replace</param>
            <param name="newItem">The new item to replace the existing one with</param>
        </member>
        <member name="M:PnP.Core.Model.BaseDataModelCollection`1.Remove(System.Object)">
            <summary>
            Removes a model from the collection, will be called for example by the logic that consolidates batch requests
            </summary>
            <param name="item">Model to remove</param>
        </member>
        <member name="T:PnP.Core.Model.DataModelCollectionLoadExtensions">
            <summary>
            Extension methods for <see cref="T:PnP.Core.Model.IDataModelCollectionLoad`1"/>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.DataModelCollectionLoadExtensions.LoadBatchAsync``1(PnP.Core.Model.IDataModelCollectionLoad{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the load of the list from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelLoad"></param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelCollectionLoadExtensions.LoadBatchAsync``1(PnP.Core.Model.IDataModelCollectionLoad{``0},PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the load of the list from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelLoad"></param>
            <param name="batch">Batch add this request to</param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelCollectionLoadExtensions.LoadBatch``1(PnP.Core.Model.IDataModelCollectionLoad{``0},PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the load of the list from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelLoad"></param>
            <param name="batch">Batch add this request to</param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelCollectionLoadExtensions.LoadBatch``1(PnP.Core.Model.IDataModelCollectionLoad{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the load of the list from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelLoad"></param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelCollectionLoadExtensions.Load``1(PnP.Core.Model.IDataModelCollectionLoad{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Loads the list from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelLoad"></param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="T:PnP.Core.Model.DataModelExtensions">
            <summary>
            Data model extension methods for public use
            </summary>
        </member>
        <member name="M:PnP.Core.Model.DataModelExtensions.EnsureParentObjectAsync(PnP.Core.Model.IDataModelParent)">
            <summary>
            Ensures the basic properties (mainly IDs) of the parent of the current domain model object
            </summary>
            <param name="model">The domain model to which we have to ensure the parent</param>
        </member>
        <member name="M:PnP.Core.Model.DataModelExtensions.SetSystemProperty``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},``1)">
            <summary>
            Sets a property value without marking it as "changed"
            </summary>
            <typeparam name="TModel">Model type (e.g. ITeamFunSettings)</typeparam>
            <typeparam name="T">Value to set</typeparam>
            <param name="model">Implementation of the model (e.g. TeamFunSettings)</param>
            <param name="expression">Expression listing the property to load</param>
            <param name="value">Value to set</param>
            <returns>True if property was loaded, false otherwise</returns>
        </member>
        <member name="T:PnP.Core.Model.DataModelGetExtensions">
            <summary>
            Extension methods for <see cref="T:PnP.Core.Model.IDataModelProcess"/>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.DataModelGetExtensions.GetBatchAsync``1(PnP.Core.Model.IDataModelGet{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the retrieval of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelGet"></param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelGetExtensions.GetBatchAsync``1(PnP.Core.Model.IDataModelGet{``0},PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the retrieval of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelGet"></param>
            <param name="batch">Batch add this request to</param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelGetExtensions.GetBatch``1(PnP.Core.Model.IDataModelGet{``0},PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the retrieval of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelGet"></param>
            <param name="batch">Batch add this request to</param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelGetExtensions.GetBatch``1(PnP.Core.Model.IDataModelGet{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the retrieval of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelGet"></param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelGetExtensions.Get``1(PnP.Core.Model.IDataModelGet{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Retrieves a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelGet"></param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="T:PnP.Core.Model.DataModelLoadExtensions">
            <summary>
            Extension methods for <see cref="T:PnP.Core.Model.IDataModelLoad"/>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.DataModelLoadExtensions.LoadBatchAsync``1(PnP.Core.Model.IDataModelLoad{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the load of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelLoad"></param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelLoadExtensions.LoadBatchAsync``1(PnP.Core.Model.IDataModelLoad{``0},PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the load of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelLoad"></param>
            <param name="batch">Batch add this request to</param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelLoadExtensions.LoadBatch``1(PnP.Core.Model.IDataModelLoad{``0},PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the load of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelLoad"></param>
            <param name="batch">Batch add this request to</param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelLoadExtensions.LoadBatch``1(PnP.Core.Model.IDataModelLoad{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Batches the load of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelLoad"></param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelLoadExtensions.Load``1(PnP.Core.Model.IDataModelLoad{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Loads a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModelLoad"></param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.DataModelLoadExtensions.QueryProperties``1(PnP.Core.Model.IDataModelLoad{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Loads a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="dataModel"></param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="T:PnP.Core.Model.EntityFieldExpandInfo">
            <summary>
            Holds information that describes how a fields is expanded. Is populated when .QueryProperties() is used 
            </summary>
        </member>
        <member name="T:PnP.Core.Model.EntityFieldInfo">
            <summary>
            Describes a field in our metadata model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.Name">
            <summary>
            Field name in the model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.DataType">
            <summary>
            Datatype in the model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.PropertyInfo">
            <summary>
            Property info for this field in a model ==> will be used by the json to model mapping
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.IsSharePointKey">
            <summary>
            Is this a key field for SharePoint - used to prevent duplicate loading in collections
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.IsGraphKey">
            <summary>
            Is this a key field for SharePoint - used to prevent duplicate loading in collections
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.Load">
            <summary>
            Does this field need to be loaded
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.SharePointExpandable">
            <summary>
            Is this an expandable field for REST
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.GraphExpandable">
            <summary>
            Is this an expandable field for Graph
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.ExpandableByDefault">
            <summary>
            Expand this property when there's a default get (a get without specifying the fields to load)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.SharePointName">
            <summary>
            Name of this field when using SharePoint REST queries
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.GraphName">
            <summary>
            Name of this field when using Microsoft Graph queries
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.SharePointJsonPath">
            <summary>
            Json path that contains the value we need, relative to the object loaded via FieldName
            This works for simple JSON objects without arrays, delimiter will be a dot e.g. property.subproperty.subsub
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.GraphJsonPath">
            <summary>
            Json path that contains the value we need, relative to the object loaded via FieldName
            This works for simple JSON objects without arrays, delimiter will be a dot e.g. property.subproperty.subsub
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.GraphGet">
            <summary>
            Query to get a specific field, needed when a simple expand does not work (Microsoft Graph)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.GraphBeta">
            <summary>
            Specifies if this property requires the Graph beta endpoint
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.SharePointUseCustomMapping">
            <summary>
            Force a call out to the custom mapping handler for this field / the default mapping logic will not be applied
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.GraphUseCustomMapping">
            <summary>
            Force a call out to the custom mapping handler for this field / the default mapping logic will not be applied
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityFieldInfo.ExpandFieldInfo">
            <summary>
            Scope the expand to a set of fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityGraphTypeInfo.Target">
            <summary>
            The actual target type for which this attribute is valid
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityGraphTypeInfo.Id">
            <summary>
            Value of the id field used to load graph relationships (e.g. load lists from a given site)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityGraphTypeInfo.Beta">
            <summary>
            Specifies if this class requires the Microsoft Graph beta endpoint
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityGraphTypeInfo.Get">
            <summary>
            API call for a Graph get
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityGraphTypeInfo.LinqGet">
            <summary>
            API call for a Graph LINQ get
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityGraphTypeInfo.OverflowProperty">
            <summary>
            Indicates the property used for the overflow field when a Graph query is used
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityGraphTypeInfo.Update">
            <summary>
            API call for a Graph update
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityGraphTypeInfo.Delete">
            <summary>
            API call for a Graph delete
            </summary>
        </member>
        <member name="T:PnP.Core.Model.EntityInfo">
            <summary>
            Class describing the underlying data store, used to map data store to model. This class contains the dynamic and the static part
            </summary>
        </member>
        <member name="M:PnP.Core.Model.EntityInfo.#ctor">
            <summary>
            Default constructor        
            </summary>
        </member>
        <member name="M:PnP.Core.Model.EntityInfo.#ctor(PnP.Core.Model.EntityInfo)">
            <summary>
            Parameterized constructor        
            </summary>
            <param name="entityInfo">An instance of EntityInfo to construct the new EntityInfo from</param>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.Fields">
            <summary>
            Field mapping information
            </summary>
        </member>
        <member name="F:PnP.Core.Model.EntityInfo.ActualKeyFieldName">
            <summary>
            Name of the actual key field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SharePointType">
            <summary>
            Data store type when using REST
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SharePointTarget">
            <summary>
            The actual target type for which this attribute is valid
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphTarget">
            <summary>
            The actual target type for which this attribute is valid
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SharePointUri">
            <summary>
            Uri that uniquely identifies this item via REST
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphId">
            <summary>
            Value of the id field used to load graph relationships (e.g. load lists from a given site)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphBeta">
            <summary>
            Specifies if this class requires the Microsoft Graph beta endpoint
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphGet">
            <summary>
            API call for a Graph get
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SharePointGet">
            <summary>
            API call for a REST get
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphLinqGet">
            <summary>
            API call for a Graph LINQ get
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SharePointLinqGet">
            <summary>
            API call for a REST LINQ get
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.UseOverflowField">
            <summary>
            Indicates if this class must be handled as a generic dictionary by populating data in the provided field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SharePointOverflowProperty">
            <summary>
            Indicates the property used for the overflow field when a REST query is used
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphOverflowProperty">
            <summary>
            Indicates the property used for the overflow field when a Graph query is used
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphUpdate">
            <summary>
            API call for a Graph update
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SharePointUpdate">
            <summary>
            API call for a REST update
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphDelete">
            <summary>
            API call for a Graph delete
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SharePointDelete">
            <summary>
            API call for a REST delete
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.Target">
            <summary>
            Target type for which the SharePoint or Graph entity type information is needed
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SharePointKeyField">
            <summary>
            Gets the first field marked as IsKey
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphKeyField">
            <summary>
            Gets the first field marked as IsKey
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphNonExpandableCollections">
            <summary>
            Returns a list of fields in this entity which do require a separate query (they can't be expanded)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SharePointFieldsLoadedViaExpression">
            <summary>
            Was there an expression provided to build up the fields lists of this entity
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.GraphFieldsLoadedViaExpression">
            <summary>
            Was there an expression provided to build up the fields lists of this entity
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.CanUseGraphGet">
            <summary>
            Check if Microsoft Graph can be used based upon the requested fields to load
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityInfo.SupportsGraphAndRest">
            <summary>
            Indicates if this entity supports both REST as Graph operations
            </summary>
        </member>
        <member name="T:PnP.Core.Model.EntityManager">
            <summary>
            Singleton class that serves as a simple caching of entity information
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntityManager.Instance">
            <summary>
            Provides the singleton instance of th entity manager
            </summary>
        </member>
        <member name="M:PnP.Core.Model.EntityManager.#ctor">
            <summary>
            Private constructor since this is a singleton
            </summary>
        </member>
        <member name="M:PnP.Core.Model.EntityManager.GetStaticClassInfo(System.Type)">
            <summary>
            Translates model type into a set of classes that are used to drive CRUD operations
            </summary>
            <param name="type">The reference model type</param>
            <returns>Entity model class describing this model instance</returns>
        </member>
        <member name="M:PnP.Core.Model.EntityManager.GetEntityConcreteInstance(System.Type,PnP.Core.Model.IDataModelParent,PnP.Core.Services.PnPContext)">
            <summary>
            Creates a concrete instance of a domain model type based on the reference type
            </summary>
            <param name="type">The reference model type, can be an interface or a class</param>
            <param name="parent">Parent of the domain model object, optional</param>
            <param name="context">The PnPContext to attach to the newly created item</param>
            <returns>Entity model class describing this model instance</returns>
        </member>
        <member name="M:PnP.Core.Model.EntityManager.GetClassInfo``1(System.Type,PnP.Core.Model.BaseDataModel{``0},PnP.Core.Model.IDataModelParent,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Translates model into a set of classes that are used to drive CRUD operations, this takes into account the passed expressions
            </summary>
            <param name="modelType">The Type of the model object to process</param>
            <param name="target">Model instance we're working on</param>
            <param name="parent">Model instance's parent object, optional</param>
            <param name="expressions">Data load expressions, optional</param>
            <returns>Entity model class describing this model instance</returns>
        </member>
        <member name="M:PnP.Core.Model.EntityManager.ReplicateKeyAndMetadata(PnP.Core.Model.IDataModelParent,PnP.Core.Model.IDataModelParent)">
            <summary>
            Replicates Key and metadata between two domain model objects
            </summary>
            <param name="sourceObject">The source domain model object</param>
            <param name="destinationObject">The destination domain model object</param>
        </member>
        <member name="P:PnP.Core.Model.EntitySharePointTypeInfo.Type">
            <summary>
            Data store type when using REST
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntitySharePointTypeInfo.Target">
            <summary>
            The actual target type for which this attribute is valid
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntitySharePointTypeInfo.Uri">
            <summary>
            Uri that uniquely identifies this item via REST
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntitySharePointTypeInfo.Get">
            <summary>
            API call for a REST get
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntitySharePointTypeInfo.LinqGet">
            <summary>
            API call for a REST LINQ get
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntitySharePointTypeInfo.OverflowProperty">
            <summary>
            Indicates the property used for the overflow field when a REST query is used
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntitySharePointTypeInfo.Update">
            <summary>
            API call for a REST update
            </summary>
        </member>
        <member name="P:PnP.Core.Model.EntitySharePointTypeInfo.Delete">
            <summary>
            API call for a REST delete
            </summary>
        </member>
        <member name="T:PnP.Core.Model.ExpandoBaseDataModel`1">
            <summary>
            Internal type to represent an object that is a BaseDataModel<typeparamref name="TModel"/>
            and that also includes a set of dynamic properties, which can be accessed
            as named and typed properties, or which can be accessed through an indexer
            </summary>
            <remarks>
            Solution refactored starting from this document: 
            https://weblog.west-wind.com/posts/2012/feb/08/creating-a-dynamic-extensible-c-expando-object
            </remarks>
            <typeparam name="TModel">The actual type of the entity of the Domain Model</typeparam>
        </member>
        <member name="F:PnP.Core.Model.ExpandoBaseDataModel`1.instanceType">
            <summary>
            Type of the instance object
            </summary>
        </member>
        <member name="F:PnP.Core.Model.ExpandoBaseDataModel`1.instanceProperties">
            <summary>
            Cached array of properties for the current type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.ExpandoBaseDataModel`1.valuesInstantiated">
            <summary>
            Private field to keep track of the Values TransientDictionary creation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.ExpandoBaseDataModel`1.OverflowFieldName">
            <summary>
            Returns the overflow field name
            </summary>
        </member>
        <member name="P:PnP.Core.Model.ExpandoBaseDataModel`1.Values">
            <summary>
            String Dictionary that contains the custom properties with their dynamic values
            </summary>        
        </member>
        <member name="P:PnP.Core.Model.ExpandoBaseDataModel`1.Count">
            <summary>
            Gets the count of properties of the current expando complex type object
            </summary>
        </member>
        <member name="M:PnP.Core.Model.ExpandoBaseDataModel`1.#ctor">
            <summary>
            Creates an instance of the Expando object based on the
            actual inheriting type
            </summary>
        </member>
        <member name="M:PnP.Core.Model.ExpandoBaseDataModel`1.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Try to retrieve a member by name
            </summary>
            <remarks>First try looking for a dynamic property, otherwise fall-back to typed properties</remarks>
            <param name="binder">The requested property</param>
            <param name="result">The value of the requested property, if any</param>
            <returns>Boolean indicating whether the member value was retrieved, or not</returns>
        </member>
        <member name="M:PnP.Core.Model.ExpandoBaseDataModel`1.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Try to set a member by name
            </summary>
            <remarks>First try looking for typed properties, otherwise fall-back to a dynamic property</remarks>
            <param name="binder">The requested property</param>
            <param name="value">The value to set to the member</param>
            <returns>Boolean indicating whether the member set was successful, or not</returns>
        </member>
        <member name="M:PnP.Core.Model.ExpandoBaseDataModel`1.GetProperty(System.String,System.Object@)">
            <summary>
            Reflection helper method to retrieve a property
            </summary>
            <param name="name">The name of the property to retrieve a value for</param>
            <param name="result">The value of the property, if any</param>
            <returns>Defines whether the property was found or not</returns>
        </member>
        <member name="M:PnP.Core.Model.ExpandoBaseDataModel`1.SetProperty(System.String,System.Object)">
            <summary>
            Reflection helper method to set a property value
            </summary>
            <param name="name">The name of the property to set a value to</param>
            <param name="value">The value to set on the property</param>
            <returns>Defines whether the set property value was successful or not</returns>
        </member>
        <member name="P:PnP.Core.Model.ExpandoBaseDataModel`1.Item(System.String)">
            <summary>
            Indexer to access the custom properties of the instance object
            </summary>
            <remarks>
            The getter checks the Properties dictionary first
            then looks in PropertyInfo for properties.
            The setter checks the instance properties before
            checking the Properties dictionary.
            </remarks>
            <param name="key">The key for the property</param>
        </member>
        <member name="M:PnP.Core.Model.ExpandoBaseDataModel`1.GetProperties(System.Boolean)">
            <summary>
            Returns all the object properties, eventually including the instance typed properties
            </summary>
            <param name="includeInstanceProperties">Declares whether to include instance typed properties, by default false</param>
            <returns>The collection of properties for the instance</returns>
        </member>
        <member name="M:PnP.Core.Model.ExpandoBaseDataModel`1.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object},System.Boolean)">
            <summary>
            Checks whether a property exists in the instance type, either as a custom property or as a typed property, if requested
            </summary>
            <param name="item">The property to look for</param>
            <param name="includeInstanceProperties">Declares whether to include instance typed properties, by default false</param>
            <returns>A boolean defining whether the property exists or not</returns>
        </member>
        <member name="M:PnP.Core.Model.ExpandoBaseDataModel`1.Contains(System.String,System.Boolean)">
            <summary>
            Checks whether a property exists in the instance type, either as a custom property or as a typed property, if requested
            </summary>
            <param name="key">The name of the property to look for</param>
            <param name="includeInstanceProperties">Declares whether to include instance typed properties, by default false</param>
            <returns>A boolean defining whether the property exists or not</returns>
        </member>
        <member name="M:PnP.Core.Model.ExpandoBaseDataModel`1.AsDynamic">
            <summary>
            Converts the current strongly typed object to a dynamic object
            </summary>
            <returns>The dynamic object from current strongly typed object</returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModel`1">
            <summary>
            Defines the very basic interface for every Domain Model object.
            Add methods are implemented in their respective model interfaces
            </summary>
            <typeparam name="TModel">The actual type of the Domain Model object</typeparam>
        </member>
        <member name="P:PnP.Core.Model.IDataModel`1.Requested">
            <summary>
            Defines whether this model object was requested from the back-end
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.HasValue(System.String)">
            <summary>
            Checks if a property on this model object has a value set
            </summary>
            <param name="propertyName">Property to check</param>
            <returns>True if set, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.HasChanged(System.String)">
            <summary>
            Checks if a property on this model object has changed
            </summary>
            <param name="propertyName">Property to check</param>
            <returns>True if changed, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.IsPropertyAvailable(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Checks if a property is loaded or not
            </summary>
            <param name="expression">Expression listing the property to load</param>
            <returns>True if property was loaded, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.ArePropertiesAvailable(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Checks if the needed properties were loaded or not
            </summary>
            <param name="expressions">Expression listing the properties to check</param>
            <returns>True if properties were loaded, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.EnsureProperties(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Checks if the requested properties are loaded for the given model, if not they're loaded right now
            </summary>
            <param name="expressions">Expressions listing the properties to load</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.EnsurePropertiesAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Checks if the requested properties are loaded for the given model, if not they're loaded via a GetAsync call
            </summary>
            <param name="expressions">Expressions listing the properties to load</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.ExecuteRequestAsync(PnP.Core.Services.ApiRequest)">
            <summary>
            Executes a given API call 
            </summary>
            <param name="request">API call to execute</param>
            <returns>The response of the API call</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.ExecuteRequest(PnP.Core.Services.ApiRequest)">
            <summary>
            Executes a given API call 
            </summary>
            <param name="request">API call to execute</param>
            <returns>The response of the API call</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.ExecuteRequestBatchAsync(PnP.Core.Services.ApiRequest)">
            <summary>
            Executes a given API call 
            </summary>
            <param name="request">API call to execute</param>
            <returns>The response of the API call</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.ExecuteRequestBatch(PnP.Core.Services.ApiRequest)">
            <summary>
            Executes a given API call 
            </summary>
            <param name="request">API call to execute</param>
            <returns>The response of the API call</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.ExecuteRequestBatchAsync(PnP.Core.Services.Batch,PnP.Core.Services.ApiRequest)">
            <summary>
            Executes a given API call 
            </summary>
            <param name="batch"></param>
            <param name="request">API call to execute</param>        
            <returns>The response of the API call</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModel`1.ExecuteRequestBatch(PnP.Core.Services.Batch,PnP.Core.Services.ApiRequest)">
            <summary>
            Executes a given API call 
            </summary>
            <param name="batch"></param>
            <param name="request">API call to execute</param>        
            <returns>The response of the API call</returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModelCollection`1">
            <summary>
            Defines the very basic interface for every collection of Domain Model objects
            </summary>
            <typeparam name="TModel">The actual type of the Domain Model objects</typeparam>
        </member>
        <member name="T:PnP.Core.Model.IDataModelCollectionDeleteByGuidId">
            <summary>
            When implemented it provides a DeleteById method on the collection
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByGuidId.DeleteById(System.Guid)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByGuidId.DeleteByIdAsync(System.Guid)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByGuidId.DeleteByIdBatch(System.Guid)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByGuidId.DeleteByIdBatchAsync(System.Guid)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByGuidId.DeleteByIdBatch(PnP.Core.Services.Batch,System.Guid)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByGuidId.DeleteByIdBatchAsync(PnP.Core.Services.Batch,System.Guid)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModelCollectionDeleteByIntegerId">
            <summary>
            When implemented it provides a DeleteById method on the collection
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByIntegerId.DeleteById(System.Int32)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByIntegerId.DeleteByIdAsync(System.Int32)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByIntegerId.DeleteByIdBatch(System.Int32)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByIntegerId.DeleteByIdBatchAsync(System.Int32)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByIntegerId.DeleteByIdBatch(PnP.Core.Services.Batch,System.Int32)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByIntegerId.DeleteByIdBatchAsync(PnP.Core.Services.Batch,System.Int32)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModelCollectionDeleteByStringId">
            <summary>
            When implemented it provides a DeleteById method on the collection
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByStringId.DeleteById(System.String)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByStringId.DeleteByIdAsync(System.String)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByStringId.DeleteByIdBatch(System.String)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByStringId.DeleteByIdBatchAsync(System.String)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByStringId.DeleteByIdBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionDeleteByStringId.DeleteByIdBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Delete an item from the collection via it's id
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="id">Id of the item to delete</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModelCollectionLoad`1">
            <summary>
            Defines the very basic interface for every collection of Domain Model objects which supports explicit load
            </summary>
            <typeparam name="TModel">The actual type of the Domain Model objects</typeparam>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionLoad`1.LoadAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Loads the list from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="selectors">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelCollectionLoad`1.LoadBatchAsync(PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Batches the load of the list from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="batch">The batch to use</param>
            <param name="selectors">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModelDelete">
            <summary>
            Defines the delete interface for Domain Model objects that need delete.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelDelete.DeleteBatchAsync">
            <summary>
            Collects the request to delete a Domain Model object into the remote data source 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelDelete.DeleteBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Collects the request to delete a Domain Model object into the remote data source using a batch
            </summary>
            <param name="batch">Batch add this request to</param>
        </member>
        <member name="M:PnP.Core.Model.IDataModelDelete.DeleteAsync">
            <summary>
            Deletes a Domain Model object into the remote data source 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelDelete.DeleteBatch">
            <summary>
            Collects the request to delete a Domain Model object into the remote data source 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelDelete.DeleteBatch(PnP.Core.Services.Batch)">
            <summary>
            Collects the request to delete a Domain Model object into the remote data source using a batch
            </summary>
            <param name="batch">Batch add this request to</param>
        </member>
        <member name="M:PnP.Core.Model.IDataModelDelete.Delete">
            <summary>
            Deletes a Domain Model object into the remote data source 
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IDataModelGet`1">
            <summary>
            Defines the read interface for Domain Model objects that can be read.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelGet`1.GetBatchAsync(PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Batches the retrieval of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="batch">Batch add this request to</param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelGet`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Retrieves a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModelLoad">
            <summary>
            Defines the basic untyped read interface for Domain Model objects that can be loaded, only used internally
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelLoad.LoadBatchAsync(PnP.Core.Services.Batch,System.Linq.Expressions.LambdaExpression[])">
            <summary>
            Batches the load of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="batch">Batch add this request to</param>
            <param name="selectors">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelLoad.LoadAsync(System.Linq.Expressions.LambdaExpression[])">
            <summary>
            Loads a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="selectors">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModelLoad`1">
            <summary>
            Defines the read interface for Domain Model objects that can be loaded.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelLoad`1.LoadBatchAsync(PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Batches the load of a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="batch">Batch add this request to</param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelLoad`1.LoadAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Loads a Domain Model object from the remote data source, eventually selecting custom properties or using a default set of properties
            </summary>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModelMappingHandler">
            <summary>
            Interface to the define the basic behavior of Domain Model object
            that can be mapped from a JSON response coming out of a REST request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IDataModelMappingHandler.MappingHandler">
            <summary>
            Handler that will fire when a property mapping does cannot be done automatically
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IDataModelMappingHandler.PostMappingHandler">
            <summary>
            Handler that will fire after the full json to model operation was done
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IDataModelParent">
            <summary>
            Interface to implement parent concept on all model objects
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IDataModelParent.Parent">
            <summary>
            Represents the parent of the current domain model object
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IDataModelProcess">
            <summary>
            Defines the basic untyped read interface for Domain Model objects that can be read, only used internally
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelProcess.ProcessResponseAsync(PnP.Core.Services.ApiResponse,System.Linq.Expressions.Expression{System.Func{System.Object,System.Object}}[])">
            <summary>
            Method which maps from json to model
            </summary>
            <param name="apiResponse">Json response (when in recursive mapping of json to model), default otherwise</param>
            <param name="expressions">The properties to select</param>
            <returns>The Domain Model object</returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModelSupportingGetChanges">
            <summary>
            Defines the interface for Domain Model objects that can obtain a change log.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelSupportingGetChanges.GetChangesAsync(PnP.Core.Model.SharePoint.ChangeQueryOptions)">
            <summary>
            Gets the list of changes.
            </summary>
            <remarks>
            This does not load the parent object or any properties. It returns a completely separate object.
            </remarks>
            <param name="query">The query.</param>
            <returns>The list of changes.</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelSupportingGetChanges.GetChanges(PnP.Core.Model.SharePoint.ChangeQueryOptions)">
            <summary>
            Gets the list of changes.
            </summary>
            <remarks>
            This does not load the parent object or any properties. It returns a completely separate object.
            </remarks>
            <param name="query">The query.</param>
            <returns>The list of changes.</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelSupportingGetChanges.GetChangesBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.ChangeQueryOptions)">
            <summary>
            Gets the list of changes.
            </summary>
            <remarks>
            This does not load the parent object or any properties. It returns a completely separate object.
            </remarks>
            <param name="batch">Batch to add this request to </param>
            <param name="query">The query.</param>
            <returns>The list of changes.</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelSupportingGetChanges.GetChangesBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.ChangeQueryOptions)">
            <summary>
            Gets the list of changes.
            </summary>
            <remarks>
            This does not load the parent object or any properties. It returns a completely separate object.
            </remarks>
            <param name="batch">Batch to add this request to </param>
            <param name="query">The query.</param>
            <returns>The list of changes.</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelSupportingGetChanges.GetChangesBatchAsync(PnP.Core.Model.SharePoint.ChangeQueryOptions)">
            <summary>
            Gets the list of changes.
            </summary>
            <remarks>
            This does not load the parent object or any properties. It returns a completely separate object.
            </remarks>
            <param name="query">The query.</param>
            <returns>The list of changes.</returns>
        </member>
        <member name="M:PnP.Core.Model.IDataModelSupportingGetChanges.GetChangesBatch(PnP.Core.Model.SharePoint.ChangeQueryOptions)">
            <summary>
            Gets the list of changes.
            </summary>
            <remarks>
            This does not load the parent object or any properties. It returns a completely separate object.
            </remarks>
            <param name="query">The query.</param>
            <returns>The list of changes.</returns>
        </member>
        <member name="T:PnP.Core.Model.IDataModelUpdate">
            <summary>
            Defines the update interface for Domain Model objects that need update.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelUpdate.UpdateBatchAsync">
            <summary>
            Collects the request to update a Domain Model object into the remote data source 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelUpdate.UpdateBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Collects the request to update a Domain Model object into the remote data source using a batch
            </summary>
            <param name="batch">Batch add this request to</param>
        </member>
        <member name="M:PnP.Core.Model.IDataModelUpdate.UpdateAsync">
            <summary>
            Updates a Domain Model object into the remote data source 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelUpdate.UpdateBatch">
            <summary>
            Collects the request to update a Domain Model object into the remote data source 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IDataModelUpdate.UpdateBatch(PnP.Core.Services.Batch)">
            <summary>
            Collects the request to update a Domain Model object into the remote data source using a batch
            </summary>
            <param name="batch">Batch add this request to</param>
        </member>
        <member name="M:PnP.Core.Model.IDataModelUpdate.Update">
            <summary>
            Updates a Domain Model object into the remote data source 
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IDataModelWithContext">
            <summary>
            Interface to implement PnPContext concept on all model objects
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IDataModelWithContext.PnPContext">
            <summary>
            <see cref="P:PnP.Core.Model.IDataModelWithContext.PnPContext"/> linked to this model instance
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IDataModelWithKey">
            <summary>
            Defines the basic behavior for a Domain Model object with an identifying key
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IDataModelWithKey.Key">
            <summary>
            Readonly property to get the untyped key of the object
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IBatchResult">
            <summary>
            Defines the result of a batch when it is executed
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IBatchResult.IsAvailable">
            <summary>
            Gets whether the result is available or not
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IBatchSingleResult">
            <summary>
            Defines a single result of a batch request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IBatchSingleResult.ObjectResult">
            <summary>
            Gets the result, once the batch is executed
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IBatchSingleResult`1">
            <summary>
            Defines the result of a batch when it is executed
            </summary>
            <typeparam name="T">The type of the result</typeparam>
        </member>
        <member name="P:PnP.Core.Model.IBatchSingleResult`1.Result">
            <summary>
            Gets the result, once the batch is executed
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IEnumerableBatchResult">
            <summary>
            Provides the result of a batch when is executed
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IEnumerableBatchResult`1">
            <summary>
            Provides the result of a batch when is executed
            </summary>
            <typeparam name="T">The type of the result</typeparam>
        </member>
        <member name="T:PnP.Core.Model.IExpandoDataModel">
            <summary>
            Public interface to define an object extensible through a dictionary of properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IExpandoDataModel.Item(System.String)">
            <summary>
            Gets or sets dynamic properties
            </summary>
            <param name="key">The key of the property to get or set</param>
            <returns>The value of the property</returns>
        </member>
        <member name="P:PnP.Core.Model.IExpandoDataModel.Values">
            <summary>
            The dictionary of properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IExpandoDataModel.Count">
            <summary>
            Gets the count of properties of the current expando type object
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IExpandoDataModel.AsDynamic">
            <summary>
            Transforms the current model instance into a dynamic type
            </summary>
            <returns>Dynamic version of current model instance</returns>
        </member>
        <member name="T:PnP.Core.Model.IManageableCollection">
            <summary>
            Defines the behavior of a collection that can be managed
            with untyped prototype methods
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection.CreateNew">
            <summary>
            Method to create a new item of the collection,
            ready to be added to the same collection
            </summary>
            <returns>The new item, ready to be added to the current collection</returns>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection.CreateNewAndAdd">
            <summary>
            Method to create a new typed item of the collection and immediately add it the collection
            </summary>
            <returns>The new item, added to the collection</returns>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection.Add(System.Object)">
            <summary>
            Method to add a new item to the collection
            </summary>
            <param name="item">The untyped item to add</param>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection.AddOrUpdate(System.Object,System.Predicate{System.Object})">
            <summary>
            Method to add a new untyped item or update an already existing one
            based on a selection predicate
            </summary>
            <param name="newItem">The untyped item to add</param>
            <param name="selector">The selection predicate for the already existing item, if any</param>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection.Remove(System.Object)">
            <summary>
            Method to remove an untyped item from the collection
            </summary>
            <param name="item">The untyped item to remove</param>
            <returns>True if the removal is successful</returns>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection.Replace(System.Int32,System.Object)">
            <summary>
            Replaces an item in the collection with a new one
            </summary>
            <param name="itemIndex">The index of the item to replace within the collection</param>
            <param name="newItem">New item to replace the old one with</param>
        </member>
        <member name="T:PnP.Core.Model.IManageableCollection`1">
            <summary>
            Defines the behavior of a collection that can be managed
            with fully typed prototype methods
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection`1.CreateNew">
            <summary>
            Method to create a new typed item of the collection,
            ready to be added to the same collection
            </summary>
            <returns>The new item, ready to be added to the current collection</returns>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection`1.CreateNewAndAdd">
            <summary>
            Method to create a new typed item of the collection and immediately add it the collection
            </summary>
            <returns>The new item, added to the collection</returns>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection`1.Add(`0)">
            <summary>
            Method to add a new item to the collection
            </summary>
            <param name="item">The untyped item to add</param>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection`1.AddOrUpdate(`0,System.Predicate{`0})">
            <summary>
            Method to add a new fully typed item or update an already existing one
            based on a selection predicate
            </summary>
            <param name="newItem">The fully typed item to add</param>
            <param name="selector">The selection predicate for the already existing item, if any</param>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection`1.Remove(`0)">
            <summary>
            Method to remove an fully typed item from the collection
            </summary>
            <param name="item">The fully typed item to remove</param>
            <returns>True if the removal is successful</returns>
        </member>
        <member name="M:PnP.Core.Model.IManageableCollection`1.Replace(System.Int32,`0)">
            <summary>
            Replaces an item in the collection with a new one
            </summary>
            <param name="itemIndex">The index of the item to replace within the collection</param>
            <param name="newItem">New item to replace the old one with</param>
        </member>
        <member name="T:PnP.Core.Model.IMetadataExtensible">
            <summary>
            Defines the very basic interface for every object that is provided with metadata
            eventually with deferred loading
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IMetadataExtensible.Metadata">
            <summary>
            Dictionary to access the domain model object Metadata
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IMetadataExtensible.SetGraphToRestMetadataAsync">
            <summary>
            Method that's being called by the serializer to complete the model for Graph to Rest transitions
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.IMetadataExtensible.SetRestToGraphMetadataAsync">
            <summary>
            Method that's being called by the serializer to complete the model for Rest to Graph transitions
            </summary>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.IQueryableDataModel">
            <summary>
            Interface describing a linq queryable model
            </summary>
        </member>
        <member name="T:PnP.Core.Model.IRequestable">
            <summary>
            Defines the very basic interface for every object that is somehow requestable
            through an external querying system
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IRequestable.Requested">
            <summary>
            Was this object requested, a collection with 0 items and Requested == false was never loaded
            </summary>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.IRequestableCollection">
            <summary>
            Defines the very basic interface for every collection that is somehow requestable
            through an external querying system
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IRequestableCollection.Requested">
            <summary>
            Was this collection requested, a collection with 0 items and Requested == false was never loaded
            </summary>
            <returns></returns>
        </member>
        <member name="P:PnP.Core.Model.IRequestableCollection.Length">
            <summary>
            Returns the size of the collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.IRequestableCollection.RequestedItems">
            <summary>
            Represents the items already requested from 
            the back-end service
            </summary>
        </member>
        <member name="M:PnP.Core.Model.IRequestableCollection.Clear">
            <summary>
            Clears the collection allowing it to be freshly loaded again
            </summary>
        </member>
        <member name="T:PnP.Core.Model.ISupportModules`1">
            <summary>
            Interface used to attach module support
            </summary>
            <typeparam name="TModel">Model to attach module support to</typeparam>
        </member>
        <member name="T:PnP.Core.Model.ISupportPaging">
            <summary>
            Paged data retrieval can be done using the methods provided via this interface
            </summary>
        </member>
        <member name="P:PnP.Core.Model.ISupportPaging.CanPage">
            <summary>
            Determines whether paging is possible
            </summary>
        </member>
        <member name="T:PnP.Core.Model.ISupportQuery`1">
            <summary>
            Object supports explicit Query
            </summary>
        </member>
        <member name="T:PnP.Core.Model.TransientDictionary">
            <summary>
            Class for tracking Dictionary changes 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.TransientDictionary.ChangedProperties">
            <summary>
            Returns a list of changed properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.TransientDictionary.HasChanges">
            <summary>
            Does this model instance have changes?
            </summary>        
        </member>
        <member name="M:PnP.Core.Model.TransientDictionary.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:PnP.Core.Model.TransientDictionary.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Constructor that initializes based upon an existing Dictionary
            </summary>
            <param name="input"><see cref="T:System.Collections.Generic.Dictionary`2"/> holding the key value pairs to add</param>
        </member>
        <member name="P:PnP.Core.Model.TransientDictionary.Item(System.String)">
            <summary>
            Gets or sets the value of an object in this dictionary
            </summary>
            <param name="key">Key of the object to set</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.TransientDictionary.Add(System.String,System.Object)">
            <summary>
            Adds a new item to the dictionary
            </summary>
            <param name="key">Key of the item to add</param>
            <param name="value">Value of the item to add</param>
        </member>
        <member name="M:PnP.Core.Model.TransientDictionary.SystemAdd(System.String,System.Object)">
            <summary>
            System add, does not mark the added property as changed
            </summary>
            <param name="key">Key of the item to add</param>
            <param name="value">Value of the item to add</param>
        </member>
        <member name="M:PnP.Core.Model.TransientDictionary.SystemUpdate(System.String,System.Object)">
            <summary>
            System update, does not mark the updated property as changed
            </summary>
            <param name="key">Key of the item to update</param>
            <param name="value">Value of the item to update</param>
        </member>
        <member name="M:PnP.Core.Model.TransientDictionary.SystemAddRange(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            System add, does not mark the added property as changed
            </summary>
            <param name="values">Collection of key/value pairs to add</param>
        </member>
        <member name="T:PnP.Core.Model.ValidateUpdate">
            <summary>
            Delegate used to connect model validation for one or more fields
            </summary>
            <param name="propertyUpdateRequest">Information about the property being updated</param>
        </member>
        <member name="T:PnP.Core.Model.TransientObject">
            <summary>
            Public abstract class to handle the internal state of properties for domain model object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.TransientObject.ValidateUpdateHandler">
            <summary>
            Validate update handler
            </summary>
        </member>
        <member name="P:PnP.Core.Model.TransientObject.ChangedProperties">
            <summary>
            Returns a list of changed properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.TransientObject.HasChanges">
            <summary>
            Are the changes done on this model instance
            </summary>
        </member>
        <member name="P:PnP.Core.Model.TransientObject.Deleted">
            <summary>
            Indication of logically deleted object, will be automatically removed from the collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.TransientObject.BatchRequestId">
            <summary>
            Id if the batch request that loaded this mode instance
            </summary>
        </member>
        <member name="M:PnP.Core.Model.TransientObject.SetSystemValue``1(``0,System.String)">
            <summary>
            Sets a property value without marking it as "changed"
            </summary>
            <typeparam name="T">Type of the property to set</typeparam>
            <param name="value">Value to set</param>
            <param name="propertyName">Name of the property</param>
        </member>
        <member name="M:PnP.Core.Model.TransientObject.Merge(PnP.Core.Model.TransientObject)">
            <summary>
            Merges the results from one object with the other. Will be typically used when:
            - The same object was requested twice in a batch
            - Refresh of an added object
            </summary>
            <param name="input"><see cref="T:PnP.Core.Model.TransientObject"/> to merge with this <see cref="T:PnP.Core.Model.TransientObject"/></param>
        </member>
        <member name="M:PnP.Core.Model.TransientObject.RemoveFromParentCollection">
            <summary>
            Marks a model as removed and removes it from it's parent collection
            </summary>
        </member>
        <member name="M:PnP.Core.Model.TransientObject.AsDynamic(System.Object)">
            <summary>
            Return instance as a dynamic object
            </summary>
            <param name="source">Object to return as dynamic</param>
            <returns>Dynamic object</returns>
        </member>
        <member name="T:PnP.Core.Model.TypeExtensions">
            <summary>
            Extensions to the Type class
            </summary>
        </member>
        <member name="M:PnP.Core.Model.TypeExtensions.ImplementsInterface(System.Type,System.Type)">
            <summary>
            Verify if a generic interface was implemented
            </summary>
            <param name="propertyType">Property to check on </param>
            <param name="interfaceType">Interface to check for</param>
            <returns>True if implemented, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.AddAsync(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds new channel chat message with support for content types
            </summary>
            <param name="options">Full chat message options</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.AddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.AddAsync(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message 
            </summary>
            <param name="content"></param>
            <param name="contentType"></param>
            <param name="subject">Message Subject</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.Add(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.AddBatchAsync(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.AddBatch(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.AddBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.Add(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.AddBatch(PnP.Core.Services.Batch,PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.AddBatchAsync(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.ChatMessageCollection.AddBatch(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="T:PnP.Core.Model.Me.ChatType">
            <summary>
            Types of chats
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Me.ChatType.OneOnOne">
            <summary>
            One on One
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Me.ChatType.Group">
            <summary>
            Group chat
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Me.ChatType.Meeting">
            <summary>
            Meeting chat
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Me.ChatType.Unknown">
            <summary>
            Unknown chat type for future
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IAadUserConversationMember">
            <summary>
            User participating in a conversation (chat)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IAadUserConversationMember.Id">
            <summary>
            Id of the user in the chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IAadUserConversationMember.Roles">
            <summary>
            Roles the user has
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IAadUserConversationMember.UserId">
            <summary>
            The actual user id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IAadUserConversationMember.TenantId">
            <summary>
            The Azuire tenant id of the tenant the user is in
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IAadUserConversationMember.Email">
            <summary>
            Email of the user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IAadUserConversationMember.DisplayName">
            <summary>
            Display name of the user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IAadUserConversationMember.VisibleHistoryStartDateTime">
            <summary>
            User can see chat history from this date
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IAadUserConversationMemberCollection">
            <summary>
            Collection of users participating in a chat
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChat">
            <summary>
            Defines a chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChat.Id">
            <summary>
            The unique Id of the chat conversation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChat.Topic">
            <summary>
            Topic of the chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChat.WebUrl">
            <summary>
            Teams Web url for the chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChat.TenantId">
            <summary>
            Azure AD Tenant id for the tenant hosting the chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChat.CreatedDateTime">
            <summary>
            Created time of the chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChat.LastUpdatedDateTime">
            <summary>
            Last time the chat has been updated
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChat.ChatType">
            <summary>
            Type of the chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChat.Members">
            <summary>
            Members in this Team Chat
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChat.Messages">
            <summary>
            Messages in this Team Chat
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatCollection">
            <summary>
            A collection of chats
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatCollection.AddAsync(PnP.Core.Model.Me.ChatOptions)">
            <summary>
            Create a new chat between users
            </summary>
            <param name="chatOptions"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatCollection.Add(PnP.Core.Model.Me.ChatOptions)">
            <summary>
            Create a new chat between users
            </summary>
            <param name="chatOptions"></param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatIdentitySet">
            <summary>
            Identity information about a Teams element
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatIdentitySet.Application">
            <summary>
            Optional. The application associated with this action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatIdentitySet.Conversation">
            <summary>
            Optional. The team or channel associated with this action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatIdentitySet.ConversationIdentityType">
            <summary>
            Optional. Indicates whether the conversation property identifies a team or channel.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatIdentitySet.Device">
            <summary>
            Optional. The device associated with this action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatIdentitySet.Phone">
            <summary>
            Optional. The phone number associated with this action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatIdentitySet.User">
            <summary>
            Optional. The user associated with this action.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessage">
            <summary>
            Represents an individual chat message within a channel or chat. The chat message can be a root chat message or 
            part of a reply thread that is defined by the replyToId property in the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.Id">
            <summary>
            Read-only. Unique Id of the message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.ReplyToId">
            <summary>
            Read-only. Id of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels not chats)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.From">
            <summary>
            Read only. Details of the sender of the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.Etag">
            <summary>
            Read-only. Version number of the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.MessageType">
            <summary>
            The type of chat message. The possible values are: message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.CreatedDateTime">
            <summary>
            Read only. Timestamp of when the chat message was created.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.LastModifiedDateTime">
            <summary>
            Read only. Timestamp of when the chat message is created or edited, including when a reply is made (if it's a root chat message in a channel) or a reaction is added or removed.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.DeletedDateTime">
            <summary>
            Read only. Timestamp at which the chat message was deleted, or null if not deleted.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.Subject">
            <summary>
            The subject of the chat message, in plaintext.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.Body">
            <summary>
            Plaintext/HTML representation of the content of the chat message. Representation is specified by the contentType inside the body. 
            The content is always in HTML if the chat message contains a chatMessageMention.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.Summary">
            <summary>
            Summary text of the chat message that could be used for push notifications and summary views or fall back views. 
            Only applies to channel chat messages, not chat messages in a chat.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.Importance">
            <summary>
            The importance of the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.Locale">
            <summary>
            Locale of the team chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.Reactions">
            <summary>
            Reactions for this chat message (for example, Like).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.Mentions">
            <summary>
            List of entities mentioned in the chat message. Currently supports user, bot, team, channel.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.Attachments">
            <summary>
            Attached files
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessage.HostedContents">
            <summary>
            Hosted Content tiles
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessageAttachment">
            <summary>
            Attachments connected to a chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageAttachment.Id">
            <summary>
            Read-only. Unique id of the attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageAttachment.ContentType">
            <summary>
            The media type of the content attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageAttachment.ContentUrl">
            <summary>
            URL for the content of the attachment. Supported protocols: http, https, file and data.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageAttachment.Content">
            <summary>
            The content of the attachment. If the attachment is a rich card, set the property to the rich card object. 
            This property and contentUrl are mutually exclusive.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageAttachment.Name">
            <summary>
            Name of the attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageAttachment.ThumbnailUrl">
            <summary>
            URL to a thumbnail image that the channel can use if it supports using an alternative, smaller form of content or contentUrl. 
            For example, if you set contentType to application/word and set contentUrl to the location of the Word document, you might 
            include a thumbnail image that represents the document. The channel could display the thumbnail image instead of the document. 
            When the user clicks the image, the channel would open the document.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessageAttachmentCollection">
            <summary>
            Collection of chat messages
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessageCollection">
            <summary>
            
            </summary>
            <summary>
            A chat is a collection of chatMessages between one or more participants. Participants can be users or apps.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.AddAsync(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.Add(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            /// <param name="subject">Message Subject</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.AddBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.AddBatchAsync(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.AddBatch(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.AddAsync(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.Add(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat
            </summary>
            <param name="options">Full chat message options</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.AddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.AddBatch(PnP.Core.Services.Batch,PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.AddBatchAsync(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IChatMessageCollection.AddBatch(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessageContent">
            <summary>
            Public interface to define the content of a chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageContent.Content">
            <summary>
            The content of the item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageContent.ContentType">
            <summary>
            The type of the content. Possible values are text and html.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessageHostedContent">
            <summary>
            Attachments connected to a chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageHostedContent.Id">
            <summary>
            Read-only. Unique id of the attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageHostedContent.ContentType">
            <summary>
            The media type of the content attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageHostedContent.ContentBytes">
            <summary>
            The content bytes of the attachment as Base64-encoded bytes
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessageHostedContentCollection">
            <summary>
            Collection of chat messages
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessageMention">
            <summary>
            Represents a mention in a chatMessage entity. The mention can be to a user, team, bot, or channel.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageMention.Id">
            <summary>
            Index of an entity being mentioned in the specified chatMessage. 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageMention.MentionText">
            <summary>
            String used to represent the mention. For example, a user's display name, a team name.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageMention.Mentioned">
            <summary>
            The entity (user, application, team, or channel) that was mentioned. If it was a channel or team that was @mentioned, 
            the identitySet contains a conversation property giving the ID of the team/channel, and a conversationIdentityType 
            property that represents either the team or channel.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessageMentionCollection">
            <summary>
            Chat mentions
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessageReaction">
            <summary>
            Represents a reaction to a chatMessage entity.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageReaction.CreatedDateTime">
            <summary>
            The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. 
            For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageReaction.ReactionType">
            <summary>
            Type of reaction
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IChatMessageReaction.User">
            <summary>
            The user who reacted to the message.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IChatMessageReactionCollection">
            <summary>
            Reactions on this chat
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.IMe">
            <summary>
            Contains information about the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.Id">
            <summary>
            The Unique ID of the User/Group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.BusinessPhones">
            <summary>
            Business phone for the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.DisplayName">
            <summary>
            Display name of the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.GivenName">
            <summary>
            Given name of the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.JobTitle">
            <summary>
            Job title of the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.Mail">
            <summary>
            Email address of the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.MobilePhone">
            <summary>
            Mobile phone number of the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.OfficeLocation">
            <summary>
            Office location of the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.PreferredLanguage">
            <summary>
            Preferred language used by the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.SurName">
            <summary>
            Surname of the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.UserPrincipalName">
            <summary>
            UPN of the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.IMe.Chats">
            <summary>
            Collection of Chats of the user
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Me.IMe.SendMailAsync(PnP.Core.Model.Security.MailOptions)">
            <summary>
            Sends an email under the current user context
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Me.IMe.SendMail(PnP.Core.Model.Security.MailOptions)">
            <summary>
            Sends an email under the current user context
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.ChatMemberOptions">
            <summary>
            Options for a member participating in a chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.ChatMemberOptions.Roles">
            <summary>
            Member roles
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.ChatMemberOptions.UserId">
            <summary>
            User id of the member
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Me.ChatOptions">
            <summary>
            Options for a chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.ChatOptions.ChatType">
            <summary>
            Type of chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.ChatOptions.Members">
            <summary>
            Members in the chat
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Me.ChatOptions.Topic">
            <summary>
            Chat topic
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.GroupVisibility">
            <summary>
            Group visibility
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.GroupVisibility.Public">
            <summary>
            Group is a public group
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.GroupVisibility.Private">
            <summary>
            Group is a private group
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.GroupVisibility.Hiddenmembership">
            <summary>
            Group is a hidden membership group
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.MessageBodyContentType">
            <summary>
            Content type for the message body
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.MessageBodyContentType.Text">
            <summary>
            Text content
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.MessageBodyContentType.Html">
            <summary>
            Html content
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.MessageImportance">
            <summary>
            Importance of the mail message
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.MessageImportance.Low">
            <summary>
            Low importance
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.MessageImportance.Normal">
            <summary>
            Normal importance
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.MessageImportance.High">
            <summary>
            High importance
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.PermissionRole">
            <summary>
            
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.PermissionRole.Read">
            <summary>
            
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.PermissionRole.Write">
            <summary>
            
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.PermissionRole.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.PrincipalType">
            <summary>
            Specifies the type of a principal.
            This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.PrincipalType.None">
            <summary>
            Enumeration whose value specifies no principal type. Value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.PrincipalType.User">
            <summary>
            Enumeration whose value specifies a user as the principal type. Value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.PrincipalType.DistributionList">
            <summary>
            Enumeration whose value specifies a distribution list as the principal type. Value = 2.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.PrincipalType.SecurityGroup">
            <summary>
            Enumeration whose value specifies a security group as the principal type. Value = 4.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.PrincipalType.SharePointGroup">
            <summary>
            Enumeration whose value specifies a group (2) as the principal type. Value = 8.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.PrincipalType.All">
            <summary>
            Enumeration whose value specifies all principal types. Value = 15.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.ShareScope">
            <summary>
            The scope of a link
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareScope.Anonymous">
            <summary>
            Anyone with the link has access, without needing to sign in. This may include people outside of your organization. 
            Anonymous link support may be disabled by an administrator.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareScope.Organization">
            <summary>
            Anyone signed into your organization (tenant) can use the link to get access. Only available in OneDrive for Business and SharePoint.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareScope.Users">
            <summary>
            Specific people in the recipients collection can use the link to get access. Only available in OneDrive for Business and SharePoint.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.ShareType">
            <summary>
            Link types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareType.View">
            <summary>
            Creates a read-only link to the driveItem.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareType.Review">
            <summary>
            Creates a review link to the driveItem. 
            Note: This option is only available for files in OneDrive for Business and SharePoint.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareType.Edit">
            <summary>
            Creates an read-write link to the driveItem. 
            Note: This option is only available for files in OneDrive for Business and SharePoint.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareType.Embed">
            <summary>
            Creates an embeddable link to the item.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareType.BlocksDownload">
            <summary>
            Creates a read-only link that blocks download to the driveItem. 
            Note: This option is only available for files in OneDrive for Business and SharePoint.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareType.CreateOnly">
            <summary>
            Creates an upload-only link to the driveItem. 
            Note: This option is only available for folders in OneDrive for Business and SharePoint.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareType.AddressBar">
            <summary>
            Creates the default link that is shown in the browser address bars for newly created files. 
            Note: Only available in OneDrive for Business and SharePoint. The organization admin configures whether this link type is supported, and what features are supported by this link type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Security.ShareType.AdminDefault">
            <summary>
            Creates the default link to the driveItem as determined by the administrator of the organization. 
            Note: Only available in OneDrive for Business and SharePoint. The policy is enforced for the organization by the admin
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IGraphGroup">
            <summary>
            A Microsoft 365 Group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphGroup.DisplayName">
            <summary>
            Name of the Microsoft 365 Group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphGroup.Description">
            <summary>
            Description of the Microsoft 365 Group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphGroup.WebUrl">
            <summary>
            Url of the SharePoint site connected to this Microsoft 365 group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphGroup.MailEnabled">
            <summary>
            Is this group mail enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphGroup.Mail">
            <summary>
            Email address of this Microsoft 365 group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphGroup.MailNickname">
            <summary>
            Mail nickname of this Microsoft 365 group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphGroup.Classification">
            <summary>
            Classification of this group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphGroup.CreatedDateTime">
            <summary>
            When was this group created
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphGroup.Visibility">
            <summary>
            Visibility of this group
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IGraphGroupCollection">
            <summary>
            Public interface to define a collection of Microsoft 365 Groups
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IGraphPermission">
            <summary>
            The permission resource provides information about a sharing permission granted for a driveItem resource.
            Sharing permissions have a number of different forms. The permission resource represents these different forms through facets on the resource.
            Note: OneDrive for Business and SharePoint document libraries do not return the inheritedFrom property.
                  grantedTo and grantedToIdentities will be deprecated going forward and the response will be migrated to grantedToV2 and grantedToIdentitiesV2 respectively under 
                  appropriate property names.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphPermission.Id">
            <summary>
            The unique identifier of the permission among all permissions on the item. 
            Note: Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphPermission.GrantedToV2">
            <summary>
            For user type permissions, the details of the users and applications for this permission. 
            Note: Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphPermission.GrantedToIdentitiesV2">
            <summary>
            For link type permissions, the details of the users to whom permission was granted.
            Note: Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphPermission.Invitation">
            <summary>
            Details of any associated sharing invitation for this permission. 
            Note: Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphPermission.Link">
            <summary>
            Provides the link details of the current permission, if it is a link type permissions. 
            Note: Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphPermission.Roles">
            <summary>
            The type of permission
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphPermission.ShareId">
            <summary>
            A unique token that can be used to access this shared item via the shares API. 
            Note: Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphPermission.ExpirationDateTime">
            <summary>
            A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the expiration time of the permission. DateTime.MinValue indicates there is no expiration set for this permission. Optional.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphPermission.HasPassword">
            <summary>
            Indicates whether the password is set for this permission. 
            Note: This property only appears in the response. Optional. Read-only. For OneDrive Personal only.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.IGraphPermission.DeletePermissionAsync">
            <summary>
            Delete a specific permission
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.IGraphPermission.DeletePermission">
            <summary>
            Delete a specific permission
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IGraphPermissionCollection">
            <summary>
            Collection of the sharing permissions granted on a driveItem resource
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IGraphPrincipal">
            <summary>
            Represents a Microsoft 365 user or group 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphPrincipal.Id">
            <summary>
            Gets a value that specifies the member identifier for the user or group.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IGraphUser">
            <summary>
            Public interface to define a Microsoft 365 user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphUser.UserPrincipalName">
            <summary>
            User principle name (UPN) of the user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphUser.Mail">
            <summary>
            Email adress of the user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IGraphUser.OfficeLocation">
            <summary>
            Office location of the user
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.IGraphUser.AsSharePointUserAsync">
            <summary>
            Returns this Graph user as a SharePoint user for the connected site collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.IGraphUser.AsSharePointUser">
            <summary>
            Returns this Graph user as a SharePoint user for the connected site collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.IGraphUser.SendMailAsync(PnP.Core.Model.Security.MailOptions)">
            <summary>
            Sends an email under a specific user context
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.IGraphUser.SendMail(PnP.Core.Model.Security.MailOptions)">
            <summary>
            Sends an email under a specific user context
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IGraphUserCollection">
            <summary>
            Public interface to define a collection of Microsoft 365 users
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IIdentity">
            <summary>
            The Identity resource represents an identity of an actor. For example, an actor can be a user, device, or application.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IIdentity.Id">
            <summary>
            Unique identifier for the identity.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IIdentity.DisplayName">
            <summary>
            The identity's display name. Note that this may not always be available or up to date. 
            For example, if a user changes their display name, the API may show the new value in a future response, 
            but the items associated with the user won't show up as having changed when using delta.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IIdentity.TenantId">
            <summary>
            Unique identity of the tenant (optional).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IIdentity.UserIdentityType">
            <summary>
            In case the identity is a user this property contains the user type of the user
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IRoleAssignment">
            <summary>
            Defines a single role definition, including a name, description, and set of rights.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleAssignment.PrincipalId">
            <summary>
            Gets or sets a value that specifies the base permissions for the role definition.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleAssignment.RoleDefinitions">
            <summary>
            Role definitions for this assignment
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleAssignment.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IRoleAssignmentCollection">
            <summary>
            Public interface to define a collection of SharePoint groups
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IRoleDefinition">
            <summary>
            Defines a single role definition, including a name, description, and set of rights.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleDefinition.BasePermissions">
            <summary>
            Gets or sets a value that specifies the base permissions for the role definition.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleDefinition.Description">
            <summary>
            Gets or sets a value that specifies the description of the role definition.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleDefinition.Hidden">
            <summary>
            Gets a value that specifies whether the role definition is displayed.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleDefinition.Id">
            <summary>
            Gets a value that specifies the Id of the role definition.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleDefinition.Name">
            <summary>
            Gets or sets a value that specifies the role definition name.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleDefinition.Order">
            <summary>
            Gets or sets a value that specifies the order position of the object in the site collection Permission Levels page.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleDefinition.RoleTypeKind">
            <summary>
            Gets a value that specifies the type of the role definition.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IRoleDefinition.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IRoleDefinitionCollection">
            <summary>
            Public interface to define a collection of SharePoint RoleDefinitions
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.IRoleDefinitionCollection.Add(System.String,PnP.Core.Model.SharePoint.RoleType,PnP.Core.Model.SharePoint.PermissionKind[],System.String,System.Boolean,System.Int32)">
            <summary>
            Adds a new role definition
            </summary>
            <param name="name"></param>
            <param name="roleTypeKind"></param>
            <param name="permissions"></param>
            <param name="description"></param>
            <param name="hidden"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.IRoleDefinitionCollection.AddBatch(System.String,PnP.Core.Model.SharePoint.RoleType,PnP.Core.Model.SharePoint.PermissionKind[],System.String,System.Boolean,System.Int32)">
            <summary>
            Adds a new role definition
            </summary>
            <param name="name"></param>
            <param name="roleTypeKind"></param>
            <param name="permissions"></param>
            <param name="description"></param>
            <param name="hidden"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.IRoleDefinitionCollection.AddBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.RoleType,PnP.Core.Model.SharePoint.PermissionKind[],System.String,System.Boolean,System.Int32)">
            <summary>
            Adds a new role definition
            </summary>
            <param name="batch"></param>
            <param name="name"></param>
            <param name="roleTypeKind"></param>
            <param name="permissions"></param>
            <param name="description"></param>
            <param name="hidden"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.IRoleDefinitionCollection.AddAsync(System.String,PnP.Core.Model.SharePoint.RoleType,PnP.Core.Model.SharePoint.PermissionKind[],System.String,System.Boolean,System.Int32)">
            <summary>
            Adds a new role definition
            </summary>
            <param name="name"></param>
            <param name="roleTypeKind"></param>
            <param name="permissions"></param>
            <param name="description"></param>
            <param name="hidden"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.IRoleDefinitionCollection.AddBatchAsync(System.String,PnP.Core.Model.SharePoint.RoleType,PnP.Core.Model.SharePoint.PermissionKind[],System.String,System.Boolean,System.Int32)">
            <summary>
            Adds a new role definition
            </summary>
            <param name="name"></param>
            <param name="roleTypeKind"></param>
            <param name="permissions"></param>
            <param name="description"></param>
            <param name="hidden"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.IRoleDefinitionCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.RoleType,PnP.Core.Model.SharePoint.PermissionKind[],System.String,System.Boolean,System.Int32)">
            <summary>
            Adds a new role definition
            </summary>
            <param name="batch"></param>
            <param name="name"></param>
            <param name="roleTypeKind"></param>
            <param name="permissions"></param>
            <param name="description"></param>
            <param name="hidden"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.Security.ISharePointGroup">
            <summary>
            Public interface to define a SharePoint Group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.AllowMembersEditMembership">
            <summary>
            Allow members to edit the group members
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.AllowRequestToJoinLeave">
            <summary>
            Allow requests to join or leave the group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.AutoAcceptRequestToJoinLeave">
            <summary>
            Automatically accept requests to join or leave the group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.CanCurrentUserEditMembership">
            <summary>
            Can the current user edit the group members
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.CanCurrentUserManageGroup">
            <summary>
            Can the current user manage the group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.CanCurrentUserViewMembership">
            <summary>
            Can the current user view the group membership
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.Description">
            <summary>
            Group description. Note that HTML tags will be stripped and that the max length of the description will be limited to 511 characters
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.OnlyAllowMembersViewMembership">
            <summary>
            Only members can see other group members
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.OwnerTitle">
            <summary>
            Group owner title
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.RequestToJoinLeaveEmailSetting">
            <summary>
            Email configuration for the group join or leave operations
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.Users">
            <summary>
            Members of this group
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointGroup.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.AddUser(System.String)">
            <summary>
            Adds a user to this group. Specify the full username, e.g. "i:0#.f|membership|user@domain.com"
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.AddUserAsync(System.String)">
            <summary>
            Adds a user to this group. Specify the full username, e.g. "i:0#.f|membership|user@domain.com"
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.AddUserBatch(System.String)">
            <summary>
            Adds a user to this group. Specify the full username, e.g. "i:0#.f|membership|user@domain.com"
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.AddUserBatchAsync(System.String)">
            <summary>
            Adds a user to this group. Specify the full username, e.g. "i:0#.f|membership|user@domain.com"
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.AddUserBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a user to this group. Specify the full username, e.g. "i:0#.f|membership|user@domain.com"
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.AddUserBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a user to this group. Specify the full username, e.g. "i:0#.f|membership|user@domain.com"
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.RemoveUser(System.Int32)">
            <summary>
            Removes a user given its id from a group.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.RemoveUserAsync(System.Int32)">
            <summary>
            Removes a user given its id from a group.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.RemoveUserBatch(System.Int32)">
            <summary>
            Removes a user given its id from a group.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.RemoveUserBatchAsync(System.Int32)">
            <summary>
            Removes a user given its id from a group.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.RemoveUserBatch(PnP.Core.Services.Batch,System.Int32)">
            <summary>
            Removes a user given its id from a group.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.RemoveUserBatchAsync(PnP.Core.Services.Batch,System.Int32)">
            <summary>
            Removes a user given its id from a group.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.GetRoleDefinitions">
            <summary>
            Retrieves the role definitions for this group
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.GetRoleDefinitionsAsync">
            <summary>
            Retrieves the role definitions for this group
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.AddRoleDefinitions(System.String[])">
            <summary>
            Adds role definitions for this group
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.AddRoleDefinitionsAsync(System.String[])">
            <summary>
            Adds role definitions for this group
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.RemoveRoleDefinitions(System.String[])">
            <summary>
            Removes role definitions for this group
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.RemoveRoleDefinitionsAsync(System.String[])">
            <summary>
            Removes role definitions for this group
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.SetUserAsOwner(System.Int32)">
            <summary>
            Sets a user as owner of the group.
            <param name="userId">Id of the user to set as owner</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.SetUserAsOwnerAsync(System.Int32)">
            <summary>
            Sets a user as owner of the group.
            <param name="userId">Id of the user to set as owner</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.SetUserAsOwnerBatch(System.Int32)">
            <summary>
            Sets a user as owner of the group.
            <param name="userId">Id of the user to set as owner</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.SetUserAsOwnerBatchAsync(System.Int32)">
            <summary>
            Sets a user as owner of the group.
            <param name="userId">Id of the user to set as owner</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.SetUserAsOwnerBatch(PnP.Core.Services.Batch,System.Int32)">
            <summary>
            Sets a user as owner of the group.
            <param name="batch">Batch on which to execute the request</param>
            <param name="userId">Id of the user to set as owner</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroup.SetUserAsOwnerBatchAsync(PnP.Core.Services.Batch,System.Int32)">
            <summary>
            Sets a user as owner of the group.
            <param name="batch">Batch on which to execute the request</param>
            <param name="userId">Id of the user to set as owner</param>
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.ISharePointGroupCollection">
            <summary>
            Public interface to define a collection of SharePoint groups
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroupCollection.Add(System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="name">Name of the new group to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroupCollection.AddBatch(System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="name">Name of the new group to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroupCollection.AddBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="name">Name of the new group to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroupCollection.AddAsync(System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="name">Name of the new group to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroupCollection.AddBatchAsync(System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="name">Name of the new group to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointGroupCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="name">Name of the new group to add</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.Security.ISharePointPrincipal">
            <summary>
            Represents a SharePoint user or group that can be assigned permissions to control security.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointPrincipal.Id">
            <summary>
            Gets a value that specifies the member identifier for the principal (user/group).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointPrincipal.IsHiddenInUI">
            <summary>
            Gets a value that indicates whether this member should be hidden in the UI.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointPrincipal.PrincipalType">
            <summary>
            Gets a value containing the type of the principal.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointPrincipal.LoginName">
            <summary>
            Gets the login name of the principal (user/group).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointPrincipal.Title">
            <summary>
            Name of the principal (user/group).
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.ISharePointSharingPrincipal">
            <summary>
            Represents a SharePoint sharing principal.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointSharingPrincipal.Id">
            <summary>
            Gets a value that specifies the member identifier for the user or group.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointSharingPrincipal.PrincipalType">
            <summary>
            Gets a value containing the type of the principal.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointSharingPrincipal.LoginName">
            <summary>
            Gets the login name of the user.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointSharingPrincipal.UserPrincipalName">
            <summary>
            User principle name (UPN) of the user.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointSharingPrincipal.Mail">
            <summary>
            E-mail address of the user.
            SP REST property name: Email
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointSharingPrincipal.Expiration">
            <summary>
            When does this sharing principal expire?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointSharingPrincipal.IsActive">
            <summary>
            Is this user still active?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointSharingPrincipal.IsExternal">
            <summary>
            Is this user an external user?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointSharingPrincipal.JobTitle">
            <summary>
            Gets the job title of the user.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointSharingPrincipal.Name">
            <summary>
            Gets the name of the user.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.ISharePointUser">
            <summary>
            Public interface to define a SharePoint User 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointUser.AadObjectId">
            <summary>
            Id of the underlying graph object (if any)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointUser.UserPrincipalName">
            <summary>
            User principle name (UPN) of the user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointUser.Mail">
            <summary>
            E-mail address of the user.
            SP REST property name: Email
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointUser.Department">
            <summary>
            Department of the user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointUser.Expiration">
            <summary>
            A date/time string for which the format conforms to the ISO8601 time format YYYY-MM-DDTHH:MM:SSZ and
            which represents the time and date of expiry for the user.
            A null value indicates no expiry.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointUser.IsEmailAuthenticationGuestUser">
            <summary>
            Indicates whether the user is a guest user authenticated via an e-mail address
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointUser.IsShareByEmailGuestUser">
            <summary>
            Indicates whether the user is a guest user shared by e-mail
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointUser.IsSiteAdmin">
            <summary>
            Indicates whether the user is a site collection administrator
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointUser.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUser.AsGraphUserAsync">
            <summary>
            Returns this SharePoint user as a Graph user
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUser.AsGraphUser">
            <summary>
            Returns this SharePoint user as a Graph user
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUser.GetRoleDefinitions">
            <summary>
            Retrieves the role definitions for this user
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUser.GetRoleDefinitionsAsync">
            <summary>
            Retrieves the role definitions for this user
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUser.AddRoleDefinitions(System.String[])">
            <summary>
            Adds role definitions for this user
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUser.AddRoleDefinitionsAsync(System.String[])">
            <summary>
            Adds role definitions for this user
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUser.RemoveRoleDefinitions(System.String[])">
            <summary>
            Removes role definitions for this user
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUser.RemoveRoleDefinitionsAsync(System.String[])">
            <summary>
            Removes role definitions for this user
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.Security.ISharePointUserCollection">
            <summary>
            Public interface to define a collection of SharePoint users
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUserCollection.Add(System.String)">
            <summary>
            Adds a new user
            </summary>
            <param name="userLoginName">login name of user to add e.g. "i:0#.f|membership|user@domain.com"</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUserCollection.AddBatch(System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="userLoginName">login name of user to add e.g. "i:0#.f|membership|user@domain.com"</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUserCollection.AddBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="userLoginName">login name of user to add e.g. "i:0#.f|membership|user@domain.com"</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUserCollection.AddAsync(System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="userLoginName">login name of user to add e.g. "i:0#.f|membership|user@domain.com"</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUserCollection.AddBatchAsync(System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="userLoginName">login name of user to add e.g. "i:0#.f|membership|user@domain.com"</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Security.ISharePointUserCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new group
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="userLoginName">login name of user to add e.g. "i:0#.f|membership|user@domain.com"</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.Security.AnonymousLinkOptions">
            <summary>
            Properties that can be set when creating a new Anonymous Link
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.AnonymousLinkOptions.Type">
            <summary>
            The type of sharing link to create.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.AnonymousLinkOptions.Password">
            <summary>
            The password of the sharing link that is set by the creator.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.AnonymousLinkOptions.ExpirationDateTime">
            <summary>
            Indicates the expiration datetime of the permission.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.InviteOptions">
            <summary>
            Options that can be set when inviting users to an item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.InviteOptions.RequireSignIn">
            <summary>
            Specifies where the recipient of the invitation is required to sign-in to view the shared item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.InviteOptions.SendInvitation">
            <summary>
            Specifies if an email or post is generated (false) or if the permission is just created (true).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.InviteOptions.Message">
            <summary>
            A plain text formatted message that is included in the sharing invitation. Maximum length 2000 characters.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.InviteOptions.Recipients">
            <summary>
            A collection of recipients who will receive access and the sharing invitation.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.InviteOptions.Roles">
            <summary>
            Specify the roles that are be granted to the recipients of the sharing invitation.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.InviteOptions.ExpirationDateTime">
            <summary>
            Specify the DateTime after which the permission expires. 
            Note: Available on OneDrive for Business, SharePoint, and premium personal OneDrive accounts.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.InviteOptionsBase">
            <summary>
            Base class for InviteOptions classes
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Security.InviteOptionsBase.CreateDriveRecipient(System.String)">
            <summary>
            Creates a new IDriveRecipient for the passed email address
            </summary>
            <param name="email">Email of the user to create an <see cref="T:PnP.Core.Model.Security.IDriveRecipient"/> for</param>
            <returns>An <see cref="T:PnP.Core.Model.Security.IDriveRecipient"/> instance</returns>
        </member>
        <member name="T:PnP.Core.Model.Security.MailOptions">
            <summary>
            Options containing the message and whether to save the mail to the sent items of the user or not.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MailOptions.Message">
            <summary>
            The message to send. Required.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MailOptions.SaveToSentItems">
            <summary>
            Indicates whether to save the message in Sent Items. Specify it only if the parameter is false; default is true. Optional.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.MessageAttachmentOptions">
            <summary>
            Options for attachments for a message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageAttachmentOptions.Name">
            <summary>
            Name of the attachment
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageAttachmentOptions.ContentType">
            <summary>
            Content-Type of the attachment
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageAttachmentOptions.ContentBytes">
            <summary>
            Bytes of the attachment
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.MessageOptions">
            <summary>
            The options for a message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageOptions.Subject">
            <summary>
            The subject of the message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageOptions.ToRecipients">
            <summary>
            The To: recipients for the message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageOptions.CcRecipients">
            <summary>
            The Cc: recipients for the message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageOptions.BccRecipients">
            <summary>
            The Bcc: recipients for the message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageOptions.ReplyTo">
            <summary>
            The email addresses to use when replying.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageOptions.Attachments">
            <summary>
            Attachments of the mail message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageOptions.Importance">
            <summary>
            The importance of the message. 
            The possible values are: low, normal, and high.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageOptions.Body">
            <summary>
            The body of the message. 
            It can be in HTML or text format.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.MessageOptions.BodyContentType">
            <summary>
            The type of the content. 
            The possible values are text and html.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.OrganizationalLinkOptions">
            <summary>
            Properties that can be set when creating a new Organizational Link
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.OrganizationalLinkOptions.Type">
            <summary>
            The type of sharing link to create.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.RecipientOptions">
            <summary>
            Options for a recipient
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.RecipientOptions.EmailAddress">
            <summary>
            Mail address of the recipient
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.UserLinkOptions">
            <summary>
            Properties that can be set when creating a new User Link
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.UserLinkOptions.Type">
            <summary>
            The type of sharing link to create.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.UserLinkOptions.Recipients">
            <summary>
            A collection of recipients who will receive access to the sharing link.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IDriveRecipient">
            <summary>
            Represents a person, group, or other recipient to share a drive item with using the invite action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IDriveRecipient.Email">
            <summary>
            The email address for the recipient, if the recipient has an associated email address.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.IIdentitySet">
            <summary>
            The identitySet resource is a keyed collection of identity resources.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IIdentitySet.Application">
            <summary>
            The application associated with this action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IIdentitySet.Device">
            <summary>
            The device associated with this action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.IIdentitySet.User">
            <summary>
            The user associated with this action.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.ISharePointIdentity">
            <summary>
            This resource extends from the identity resource to provide the ability to expose SharePoint-specific information; for example, loginName or SharePoint IDs.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointIdentity.DisplayName">
            <summary>
            The identity's display name. Note that this might not always be available or up to date. For example, if a user changes their display name, the API may show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointIdentity.Id">
            <summary>
            Unique identifier for the identity. It can be either an Azure Active Directory ID or a SharePoint ID.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointIdentity.LoginName">
            <summary>
            The sign in name of the SharePoint identity.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointIdentity.Email">
            <summary>
            The email of the SharePoint identity.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.ISharePointIdentitySet">
            <summary>
            Represents a keyed collection of sharePointIdentity resources. This resource extends from the identitySet resource to provide the ability to expose SharePoint-specific information to the user.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointIdentitySet.Application">
            <summary>
            The application associated with this action. Optional.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointIdentitySet.Device">
            <summary>
            The device associated with this action. Optional.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointIdentitySet.User">
            <summary>
            The user associated with this action. Optional.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointIdentitySet.Group">
            <summary>
            The group associated with this action. Optional.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointIdentitySet.SiteUser">
            <summary>
            The SharePoint user associated with this action. Optional.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharePointIdentitySet.SiteGroup">
            <summary>
            The SharePoint group associated with this action. Optional.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.ISharingInvitation">
            <summary>
            The SharingInvitation resource groups invitation-related data items into a single structure.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharingInvitation.Email">
            <summary>
            The email address provided for the recipient of the sharing invitation. Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharingInvitation.InvitedBy">
            <summary>
            Provides information about who sent the invitation that created this permission, if that information is available. Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharingInvitation.SignInRequired">
            <summary>
            If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Security.ISharingLink">
            <summary>
            The sharingLink resource groups link-related data items into a single structure.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharingLink.PreventsDownload">
            <summary>
            If true then the user can only use this link to view the item on the web, and cannot use it to download the contents of the item. Only for OneDrive for Business and SharePoint.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharingLink.Type">
            <summary>
            The type of the link created.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharingLink.Scope">
            <summary>
            The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharingLink.WebHtml">
            <summary>
            For embed links, this property contains the HTML code for an iframe element that will embed the item in a webpage.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Security.ISharingLink.WebUrl">
            <summary>
            A URL that opens the item in the browser on the OneDrive website.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SiteLogoAspect">
            <summary>
            Site Logo aspect ratio
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SiteLogoAspect.Square">
            <summary>
            Square logo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SiteLogoAspect.Rectangular">
            <summary>
            Rectangular logo
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SiteLogoType">
            <summary>
            Types of logo to be set
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SiteLogoType.WebLogo">
            <summary>
            Site header logo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SiteLogoType.HubLogo">
            <summary>
            Hub site logo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SiteLogoType.HeaderBackground">
            <summary>
            Header background image
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SiteLogoType.GlobalNavLogo">
            <summary>
            Global navigation logo
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SharePointTheme">
            <summary>
            Out of the Box SharePoint themes
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharePointTheme.Teal">
            <summary>
            Teal theme
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharePointTheme.Blue">
            <summary>
            Blue theme
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharePointTheme.Orange">
            <summary>
            Orange theme
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharePointTheme.Red">
            <summary>
            Red theme
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharePointTheme.Purple">
            <summary>
            Purple theme
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharePointTheme.Green">
            <summary>
            Green theme
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharePointTheme.Gray">
            <summary>
            Gray theme
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharePointTheme.DarkYellow">
            <summary>
            Yellow theme with dark background
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharePointTheme.DarkBlue">
            <summary>
            Blue theme with dark background
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IBrandingManager">
            <summary>
            Enables branding changes for the site (the options that appear under "change the look" under the gear icon in SharePoint)
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetAvailableThemesAsync">
            <summary>
            Lists the available themes for this web
            </summary>
            <returns>List of <see cref="T:PnP.Core.Model.SharePoint.ITheme"/>instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetAvailableThemes">
            <summary>
            Lists the available themes for this web
            </summary>
            <returns>List of <see cref="T:PnP.Core.Model.SharePoint.ITheme"/>instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetAvailableThemesBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Lists the available themes for this web
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns>List of <see cref="T:PnP.Core.Model.SharePoint.ITheme"/>instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetAvailableThemesBatch(PnP.Core.Services.Batch)">
            <summary>
            Lists the available themes for this web
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns>List of <see cref="T:PnP.Core.Model.SharePoint.ITheme"/>instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetAvailableThemesBatchAsync">
            <summary>
            Lists the available themes for this web
            </summary>
            <returns>List of <see cref="T:PnP.Core.Model.SharePoint.ITheme"/>instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetAvailableThemesBatch">
            <summary>
            Lists the available themes for this web
            </summary>
            <returns>List of <see cref="T:PnP.Core.Model.SharePoint.ITheme"/>instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetThemeAsync(PnP.Core.Model.SharePoint.SharePointTheme)">
            <summary>
            Sets a an out of the box theme
            </summary>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetTheme(PnP.Core.Model.SharePoint.SharePointTheme)">
            <summary>
            Sets a an out of the box theme
            </summary>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetThemeBatchAsync(PnP.Core.Model.SharePoint.SharePointTheme)">
            <summary>
            Sets a an out of the box theme
            </summary>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetThemeBatch(PnP.Core.Model.SharePoint.SharePointTheme)">
            <summary>
            Sets a an out of the box theme
            </summary>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetThemeBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.SharePointTheme)">
            <summary>
            Sets a an out of the box theme
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetThemeBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.SharePointTheme)">
            <summary>
            Sets a an out of the box theme
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetThemeAsync(PnP.Core.Model.SharePoint.ITheme)">
            <summary>
            Sets a custom theme
            </summary>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetTheme(PnP.Core.Model.SharePoint.ITheme)">
            <summary>
            Sets a custom theme
            </summary>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetThemeBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.ITheme)">
            <summary>
            Sets a custom theme
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetThemeBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.ITheme)">
            <summary>
            Sets a custom theme
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetThemeBatchAsync(PnP.Core.Model.SharePoint.ITheme)">
            <summary>
            Sets a custom theme
            </summary>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetThemeBatch(PnP.Core.Model.SharePoint.ITheme)">
            <summary>
            Sets a custom theme
            </summary>
            <param name="theme">Theme to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetChromeOptionsAsync">
            <summary>
            Gets the site's chrome (header/footer/navigation) options
            </summary>
            <returns>Site's <see cref="T:PnP.Core.Model.SharePoint.IChromeOptions"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetChromeOptions">
            <summary>
            Gets the site's chrome (header/footer/navigation) options
            </summary>
            <returns>Site's <see cref="T:PnP.Core.Model.SharePoint.IChromeOptions"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetChromeOptionsBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Gets the site's chrome (header/footer/navigation) options
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns>Site's <see cref="T:PnP.Core.Model.SharePoint.IChromeOptions"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetChromeOptionsBatch(PnP.Core.Services.Batch)">
            <summary>
            Gets the site's chrome (header/footer/navigation) options
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns>Site's <see cref="T:PnP.Core.Model.SharePoint.IChromeOptions"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetChromeOptionsBatchAsync">
            <summary>
            Gets the site's chrome (header/footer/navigation) options
            </summary>
            <returns>Site's <see cref="T:PnP.Core.Model.SharePoint.IChromeOptions"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.GetChromeOptionsBatch">
            <summary>
            Gets the site's chrome (header/footer/navigation) options
            </summary>
            <returns>Site's <see cref="T:PnP.Core.Model.SharePoint.IChromeOptions"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetChromeOptionsAsync(PnP.Core.Model.SharePoint.IChromeOptions)">
            <summary>
            Sets the site's chrome (header/footer/navigation) options
            </summary>
            <param name="chromeOptions">Site chrome options to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetChromeOptions(PnP.Core.Model.SharePoint.IChromeOptions)">
            <summary>
            Sets the site's chrome (header/footer/navigation) options
            </summary>
            <param name="chromeOptions">Site chrome options to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetChromeOptionsBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.IChromeOptions)">
            <summary>
            Sets the site's chrome (header/footer/navigation) options
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="chromeOptions">Site chrome options to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetChromeOptionsBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.IChromeOptions)">
            <summary>
            Sets the site's chrome (header/footer/navigation) options
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="chromeOptions">Site chrome options to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetChromeOptionsBatchAsync(PnP.Core.Model.SharePoint.IChromeOptions)">
            <summary>
            Sets the site's chrome (header/footer/navigation) options
            </summary>
            <param name="chromeOptions">Site chrome options to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBrandingManager.SetChromeOptionsBatch(PnP.Core.Model.SharePoint.IChromeOptions)">
            <summary>
            Sets the site's chrome (header/footer/navigation) options
            </summary>
            <param name="chromeOptions">Site chrome options to apply</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChromeOptions">
            <summary>
            Defines the chrome (header/footer) options of a web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChromeOptions.Header">
            <summary>
            Site header chrome configuration
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChromeOptions.Navigation">
            <summary>
            Site navigation chrome options
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChromeOptions.Footer">
            <summary>
            Site footer chrome configuration
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFooterOptions">
            <summary>
            Options to configure a the site footer chrome.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFooterOptions.Enabled">
            <summary>
            Gets or sets a value that specifies whether the footer is enabled on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFooterOptions.Layout">
            <summary>
            Gets or sets the value of the footer layout.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFooterOptions.Emphasis">
            <summary>
            Gets or sets the value of the footer emphasis.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFooterOptions.DisplayName">
            <summary>
            The footer display name
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFooterOptions.SetLogoAsync(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Sets the footer's logo to the provided image.
            </summary>
            <param name="fileName">Name of your image file</param>
            <param name="content">The contents of the file</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFooterOptions.SetLogo(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Sets the footer's logo to the provided image.
            </summary>
            <param name="fileName">Name of your image file</param>
            <param name="content">The contents of the file</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFooterOptions.ClearLogoAsync">
            <summary>
            Clears the footer logo
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFooterOptions.ClearLogo">
            <summary>
            Clears the footer logo
            </summary>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IHeaderOptions">
            <summary>
            Options to configure a the site header chrome
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHeaderOptions.Layout">
            <summary>
            Gets or sets the value of the header layout.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHeaderOptions.Emphasis">
            <summary>
            Gets or sets the value of the header emphasis.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHeaderOptions.HideTitle">
            <summary>
            Gets or sets a value that specifies whether the title in header is hidden on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHeaderOptions.LogoAlignment">
            <summary>
            Gets or sets the logo alignment of the site.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.SetSiteLogoAsync(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Sets the site's logo to the provided image.  For group connected sites calling this method is 
            equal to calling SetSiteLogoThumbnail as logo and logo thumbnail are both set the same.
            </summary>
            <param name="fileName">Name of your image file</param>
            <param name="content">The contents of the file</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.SetSiteLogo(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Sets the site's logo to the provided image. For group connected sites calling this method is 
            equal to calling SetSiteLogoThumbnail as logo and logo thumbnail are both set the same.
            </summary>
            <param name="fileName">Name of your image file</param>
            <param name="content">The contents of the file</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.ResetSiteLogoAsync">
            <summary>
            Sets the out of the box site's logo again. For group connected sites calling this method is 
            equal to calling ResetSiteLogoThumbnail as logo and logo thumbnail are both set the same.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.ResetSiteLogo">
            <summary>
            Sets the out of the box site's logo again. For group connected sites calling this method is 
            equal to calling ResetSiteLogoThumbnail as logo and logo thumbnail are both set the same.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.SetSiteLogoThumbnailAsync(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Sets the site's logo thumbnail to the provided image.
            </summary>
            <param name="fileName">Name of your image file</param>
            <param name="content">The contents of the file. Image should in a square aspect ratio</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.SetSiteLogoThumbnail(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Sets the site's logo thumbnail to the provided image. For group connected sites setting the logo thumbnail
            will also automatically update the site logo.
            </summary>
            <param name="fileName">Name of your image file</param>
            <param name="content">The contents of the file. Image should in a square aspect ratio</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.ResetSiteLogoThumbnailAsync">
            <summary>
            Sets the out of the box site's logo thumbnail again. For group connected sites we'll default to using
            siteassets/__siteIcon__.jpg if that still exists.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.ResetSiteLogoThumbnail">
            <summary>
            Sets the out of the box site's logo thumbnail again. For group connected sites we'll default to using
            siteassets/__siteIcon__.jpg if that still exists.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.SetHeaderBackgroundImageAsync(System.String,System.IO.Stream,System.Double,System.Double,System.Boolean)">
            <summary>
            Sets the site's header background image. Only can be called when the header layout is set to extended.
            </summary>
            <param name="fileName">Name of your image file</param>
            <param name="content">The contents of the file</param>
            <param name="focalX">X axis focal point for the header image</param>
            <param name="focalY">Y axis focal point for the header image</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.SetHeaderBackgroundImage(System.String,System.IO.Stream,System.Double,System.Double,System.Boolean)">
            <summary>
            Sets the site's header background image. Only can be called when the header layout is set to extended.
            </summary>
            <param name="fileName">Name of your image file</param>
            <param name="content">The contents of the file</param>
            <param name="focalX">X axis focal point for the header image</param>
            <param name="focalY">Y axis focal point for the header image</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.ClearHeaderBackgroundImageAsync">
            <summary>
            Clears the header background image
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IHeaderOptions.ClearHeaderBackgroundImage">
            <summary>
            Clears the header background image
            </summary>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.INavigationOptions">
            <summary>
            Options to configure a the site navigation chrome.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationOptions.MegaMenuEnabled">
            <summary>
            Gets or sets a value that specifies whether the megamenu is enabled on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationOptions.HorizontalQuickLaunch">
            <summary>
            Gets or sets a value that specifies whether the quick launch is shown horizontal or vertical (default)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationOptions.Visible">
            <summary>
            Gets or sets a value that specifies whether the site navigation is shown on the site.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITheme">
            <summary>
            Defines a theme that can be applied to a site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITheme.Name">
            <summary>
            Name of the theme
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITheme.IsCustomTheme">
            <summary>
            Is this a custom theme added to the tenant?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITheme.ThemeJson">
            <summary>
            The theme's JSON definition
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ChangeActivityType">
            <summary>
            Change activity types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeActivityType.NoActivity">
            <summary>
            No activity
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeActivityType.Hashtag">
            <summary>
            Hashtag activity
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeActivityType.Spotlight">
            <summary>
            Spotlight activity
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeActivityType.Comment">
            <summary>
            Comment activity
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ChangeType">
            <summary>
            Enumeration of the possible types of changes.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.NoChange">
            <summary>
            Enumeration whose values indicate that no change has taken place.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.Add">
            <summary>
            Enumeration whose values specify that an object has been added within the scope of a list, site, site collection, or content database.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.Update">
            <summary>
            Enumeration whose values specify that an object has been modified within the scope of a list, site, site collection, or content database.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.DeleteObject">
            <summary>
            Enumeration whose values specify that an object has been deleted within the scope of a list, site, site collection, or content database.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.Rename">
            <summary>
            Enumeration whose values specify that the leaf in a URL has been renamed.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.MoveAway">
            <summary>
            Enumeration whose values specify that a non-leaf section within a URL has been renamed. The object was moved away from the location within the site specified by the change.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.MoveInto">
            <summary>
            Enumeration whose values specify that a non-leaf section within a URL has been renamed. The object was moved into the location within the site specified by the change.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.Restore">
            <summary>
            Enumeration whose values specify that an object has restored from a backup or from the recycle bin.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.RoleAdd">
            <summary>
            Enumeration whose values specify that a role definition has been added.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.RoleDelete">
            <summary>
            Enumeration whose values specify that a role definition has been deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.RoleUpdate">
            <summary>
            Enumeration whose values specify that a role definition has been updated.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.AssignmentAdd">
            <summary>
            <para>Enumeration whose values specify that a user has been given permissions to a list.</para>
            <para>The list must have unique permissions enabled.</para>
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.AssignmentDelete">
            <summary>
            <para>Enumeration whose values specify that a user has lost permissions to a list.</para>
            <para>The list must have unique permissions enabled.</para>
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.MemberAdd">
            <summary>
            Enumeration whose values specify that a user has been added to a group.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.MemberDelete">
            <summary>
            Enumeration whose values specify that a user has been removed from a group.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.SystemUpdate">
            <summary>
            Enumeration whose values specify that a change has been made to an item using the SystemUpdate method.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.Navigation">
            <summary>
            Enumeration whose values specify that a change in the navigation structure of a site collection has been made.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.ScopeAdd">
            <summary>
            Enumeration whose values specify that a change in permissions scope has been made to break inheritance from an object's parent.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.ScopeDelete">
            <summary>
            Enumeration whose values specify that a change in permissions scope has been made to revert back to inheriting permissions from an object's parent.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.ListContentTypeAdd">
            <remarks>
            Enumeration whose values specify that an object has been added within the scope of a list content type.
            </remarks>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.ListContentTypeDelete">
            <remarks>
            Enumeration whose values specify that an object has been deleted within the scope of a list content type.
            </remarks>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.Dirty">
            <remarks>
            Enumeration whose values specify that an object has a pending modification due to an operation on another item.
            </remarks>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChangeType.Activity">
            <remarks>
            Enumeration whose values specify that an object has had an activity
            </remarks>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChange">
            <summary>
            Base interface for a description of a change to an object.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChange.ChangeToken">
            <summary>
            Gets a value that specifies a change token that identifies the changed object.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChange.ChangeType">
            <summary>
            Gets a value that specifies the type of the change that has been made to the object.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChange.SiteId">
            <summary>
            Gets a value that identifies the site that contains the changed object.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChange.Time">
            <summary>
            Gets a value that specifies the time that the object was modified.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IChange.IsPropertyAvailable``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Checks if a property was loaded or not
            </summary>
            <typeparam name="TModel">The entity derived from <see cref="T:PnP.Core.Model.SharePoint.IChange"/> that you're checking the property for</typeparam>
            <param name="expression">An expression defining the property to check (e.g. p => p.Property) </param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeAlert">
            <summary>
            Indicates a change to an Alert object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeAlert.AlertId">
            <summary>
            Gets a value that identifies the changed alert.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeAlert.WebId">
            <summary>
            Gets a value that identifies the web that contains the changed alert.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeContentType">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.SharePoint.IContentType"/> object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeContentType.ContentTypeId">
            <summary>
            Gets a value that identifies the changed content type.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeContentType.WebId">
            <summary>
            Gets a value that identifies the web that contains the changed content type.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeField">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.SharePoint.IField"/> object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeField.FieldId">
            <summary>
            Gets a value that identifies the changed field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeField.WebId">
            <summary>
            Gets a value that identifies the web that contains the changed field.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeFile">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.SharePoint.IFile"/> object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeFile.UniqueId">
            <summary>
            Gets a value that identifies the changed file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeFile.WebId">
            <summary>
            Gets a value that identifies the web that contains the changed file.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeFolder">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.SharePoint.IFolder"/> object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeFolder.UniqueId">
            <summary>
            Gets a value that identifies the changed folder.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeFolder.WebId">
            <summary>
            Gets a value that identifies the web that contains the changed folder.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeGroup">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.Security.ISharePointGroup"/> object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeGroup.GroupId">
            <summary>
            Gets a value that identifies the changed group.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeItem">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.SharePoint.IListItem"/> object;
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.ActivityType">
            <summary>
            Gets the change activity type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.ContentTypeId">
            <summary>
            Gets a value that identifies the content type ID of the the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.Editor">
            <summary>
            Gets a value that specifies the editor of the the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.EditorEmailHint">
            <summary>
            Gets a value that specifies the email of the editor of the the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.EditorLoginName">
            <summary>
            Gets a value that specifies the login name of the editor of the the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.FileSystemObjectType">
            <summary>
            Gets a value that specifies the file system object type of the the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.FileType">
            <summary>
            Gets a value that specifies the file type of the the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.Hashtag">
            <summary>
            Gets a value that specifies the hash tag of the the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.Hidden">
            <summary>
            Returns a Boolean value that indicates whether the parent list is a hidden list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.ItemId">
            <summary>
            Gets a value that identifies the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.ListId">
            <summary>
            Gets a value that identifies the list that contains the changed file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.ListTitle">
            <summary>
            Gets a value that specifies the title of the list that contains the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.MoveWasForRecycle">
            <summary>
            Indicates that this is a move which is part of a recycle operation.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.MoveWasForRestore">
            <summary>
            Indicates that this is a move which is part of a restore from recycle bin operation.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.ServerRelativeUrl">
            <summary>
            Gets a value that specifies the server relative URL of the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.TemplateType">
            <summary>
            Gets a value that specifies the template type of the list that contains the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.Title">
            <summary>
            Gets a value that specifies the title of the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.UniqueId">
            <summary>
            Gets a value that uniquely identifies the changed item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeItem.WebId">
            <summary>
            Gets a value that identifies the web that contains the changed file.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeList">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.SharePoint.IList"/> object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeList.Editor">
            <summary>
            A string that returns the name of the person who modified the list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeList.Hidden">
            <summary>
            Returns a Boolean value that indicates whether a list is a hidden list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeList.ListId">
            <summary>
            Gets a value that identifies the changed list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeList.TemplateType">
            <summary>
            Gets a value that specifies the template type of the the changed list.
            SP REST property name: BaseTemplate
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeList.Title">
            <summary>
            Gets a value that specifies the title of the the changed list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeList.WebId">
            <summary>
            Gets a value that identifies the web that contains the changed list.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeSite">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.SharePoint.ISite"/> object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeToken">
            <summary>
            Represents the unique sequential location of a change within the change log.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeToken.StringValue">
            <summary>
            Gets or sets a string value that contains the serialized representation of the change token generated by the protocol server.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeUser">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.Security.ISharePointUser"/> object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeUser.Activate">
            <summary>
            Gets a value that specifies whether a user has changed from an inactive state to an active state.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeUser.UserId">
            <summary>
            Gets a value that identifies the changed user.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeView">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.SharePoint.IView"/> object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeView.ViewId">
            <summary>
            Gets a value that identifies the changed view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeView.ListId">
            <summary>
            Gets a value that identifies the list that contains the changed view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeView.WebId">
            <summary>
            Gets a value that identifies the web that contains the changed view.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IChangeWeb">
            <summary>
            Indicates a change to a <seealso cref="T:PnP.Core.Model.SharePoint.IWeb"/> object.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChange" />
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IChangeWeb.WebId">
            <summary>
            Gets a value that identifies the changed web.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ChangeQueryOptions">
            <summary>
            Defines a query that is performed against the change log.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ChangeQueryOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PnP.Core.Model.SharePoint.ChangeQueryOptions"/> class.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ChangeQueryOptions.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PnP.Core.Model.SharePoint.ChangeQueryOptions"/> class.
            </summary>
            <param name="allChangeObjectTypes">If <c>true</c>, get changes for all change object types.</param>
            <param name="allChangeTypes">If <c>true</c>, get all change types.</param>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Activity">
            <summary>
            Specifies whether activity is included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Add">
            <summary>
            Gets or sets a value that specifies whether add changes are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Alert">
            <summary>
            Gets or sets a value that specifies whether changes to alerts are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.ChangeTokenEnd">
            <summary>
            Gets or sets a value that specifies the end date and end time for changes that are returned through the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.ChangeTokenStart">
            <summary>
            Gets or sets a value that specifies the start date and start time for changes that are returned through the query.
            Changes after this change token are returned.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.ContentType">
            <summary>
            Gets or sets a value that specifies whether changes to content types are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.DeleteObject">
            <summary>
            Gets or sets a value that specifies whether delete changes are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.FetchLimit">
            <summary>
            The maximum number of items to return (defaults to 1000).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Field">
            <summary>
            Gets or sets a value that specifies whether changes to site columns are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.File">
            <summary>
            Gets or sets a value that specifies whether changes to files are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Folder">
            <summary>
            Gets or sets value that specifies whether changes to folders are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Group">
            <summary>
            Gets or sets a value that specifies whether changes to groups are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.GroupMembershipAdd">
            <summary>
            Gets or sets a value that specifies whether adding users to groups is included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.GroupMembershipDelete">
            <summary>
            Gets or sets a value that specifies whether deleting users from the groups is included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.IgnoreStartTokenNotFoundError">
            <summary>
            Ignore errors when calling GetChanges if the caller's start ChangeToken
            is not found in the database (exact match) or if there are no changes in
            the database.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Item">
            <summary>
            Gets or sets a value that specifies whether general changes to list items are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.LatestFirst">
            <summary>
            Gets or sets a value that specifies whether to order the results by Modified By date, most recent first.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.List">
            <summary>
            Gets or sets a value that specifies whether changes to lists are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Move">
            <summary>
            Gets or sets a value that specifies whether move changes are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Navigation">
            <summary>
            Gets or sets a value that specifies whether changes to the navigation structure of a site collection are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.RecursiveAll">
            <summary>
            specifies whether we return all the change logs for folder scoped query.
            The flag will only work for Folder query. If true, all changes in the current folder
            and all sub folders will be returned. Otherwise, only changes in the current folder
            will be returned.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Rename">
            <summary>
            Gets or sets a value that specifies whether renaming changes are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.RequireSecurityTrim">
            <summary>
            Specifies whether we return log with security trimming. If true, we'll return the events with security trimming.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Restore">
            <summary>
            Gets or sets a value that specifies whether restoring items from the recycle bin or from backups is included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.RoleAssignmentAdd">
            <summary>
            Gets or sets a value that specifies whether adding role assignments is included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.RoleAssignmentDelete">
            <summary>
            Gets or sets a value that specifies whether deleting role assignments is included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.RoleDefinitionAdd">
            <summary>
            Gets or sets a value that specifies whether adding role definitions is included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.RoleDefinitionDelete">
            <summary>
            Gets or sets a value that specifies whether deleting role definitions is included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.RoleDefinitionUpdate">
            <summary>
            Gets or sets a value that specifies whether modifying role definitions is included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.SecurityPolicy">
            <summary>
            Gets or sets a value that specifies whether modifications to security policies are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Site">
            <summary>
            Gets or sets a value that specifies whether changes to site collections are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.SystemUpdate">
            <summary>
            Gets or sets a value that specifies whether updates made using the item SystemUpdate method are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Update">
            <summary>
            Gets or sets a value that specifies whether update changes are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.User">
            <summary>
            Gets or sets a value that specifies whether changes to users are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.View">
            <summary>
            Gets or sets a value that specifies whether changes to views are included in the query.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeQueryOptions.Web">
            <summary>
            Gets or sets a value that specifies whether changes to Web sites are included in the query.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ChangeTokenOptions">
            <summary>
            Represents a change token that is usable in <seealso cref="T:PnP.Core.Model.SharePoint.ChangeQueryOptions"/>.
            </summary>
            <seealso cref="T:PnP.Core.Model.SharePoint.IChangeToken" />
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ChangeTokenOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PnP.Core.Model.SharePoint.ChangeTokenOptions"/> class.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ChangeTokenOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PnP.Core.Model.SharePoint.ChangeTokenOptions"/> class.
            </summary>
            <param name="stringValue">The string value.</param>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ChangeTokenOptions.StringValue">
            <summary>
            Gets or sets a string value that contains the serialized representation of the change token generated by the protocol server.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ChangeTokenOptions.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.Attachment">
            <summary>
            Attachment class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.Comment">
            <summary>
            comment class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CommentLikeUserEntity">
            <summary>
            userEntity class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ContentTypeHub">
            <summary>
            Content Type Hub class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.EffectiveInformationRightsManagementSettings">
            <summary>
            EffectiveInformationRightsManagementSettings class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.Field">
            <summary>
            Field class, write your custom code here
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.FieldCollection.FormatFieldXml(PnP.Core.Model.SharePoint.FieldCreationOptions)">
            <summary>
            Formats a FieldCreationOptions object into Field CAML xml.
            </summary>
            <param name="fieldCreationOptions">Field Creation Information object</param>
            <returns>Field creation CAML</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldCreationOptions">
            <summary>
            Class that describes the field creation options
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.Id">
            <summary>
            Guid of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.DisplayName">
            <summary>
            Field display name
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.InternalName">
            <summary>
            Field internal name
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.AddToDefaultView">
            <summary>
            Adds fields to default view if value is true.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.AdditionalAttributes">
            <summary>
            List of additional properties that need to be applied to the field on creation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.AdditionalChildNodes">
            <summary>
            List of additional child nodes that need to be included in the CAML field on creation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.FieldType">
            <summary>
            Type of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.Group">
            <summary>
            Group of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.Required">
            <summary>
            Specifies filds is required to enter vlaue or not.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.ClientSideComponentId">
            <summary>
            Ignored currently for SP2016
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.ClientSideComponentProperties">
            <summary>
            Ignored currently for SP2016
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCreationOptions.Options">
            <summary>
            An <see cref="T:PnP.Core.Model.SharePoint.AddFieldOptionsFlags"/> flag that specifies the field options to be applied during add
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.FieldCreationOptions.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="fieldType">Type of the field</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.FieldCreationOptions.#ctor(PnP.Core.Model.SharePoint.FieldType)">
            <summary>
            Constructor
            </summary>
            <param name="fieldType">Type of the field</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.FieldCreationOptions.ImportFromCommonFieldOptions(System.String,PnP.Core.Model.SharePoint.CommonFieldOptions)">
            <summary>
            Imports settings from the <see cref="T:PnP.Core.Model.SharePoint.CommonFieldOptions"/> configuration into the generic <see cref="T:PnP.Core.Model.SharePoint.FieldCreationOptions"/> model
            </summary>
            <param name="common">Set of field creation options to transform</param>
            <param name="title">Field title</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldLink">
            <summary>
            FieldLink class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldStringValues">
            <summary>
            Field string values class
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldUrlValue">
            <summary>
            Base class for reading and writing of "special" field types like a lookup, user, url...
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.File">
            <summary>
            File class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FileVersion">
            <summary>
            FileVersion class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FileVersionEvent">
            <summary>
            FileVersionEvent class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.Folder">
            <summary>
            Folder class, write your custom code here
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Folder.AddFolderAsync(System.String)">
            <summary>
            Add a folder to the current folder.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Folder.AddFolder(System.String)">
            <summary>
            Add a folder to the current folder.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Folder.AddFolderBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Add a folder to the current folder via batch.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <param name="batch">Batch to add the reques to</param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Folder.AddFolderBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Add a folder to the current folder via batch.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <param name="batch">Batch to add the reques to</param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Folder.AddFolderBatchAsync(System.String)">
            <summary>
            Add a folder to the current folder via batch.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Folder.AddFolderBatch(System.String)">
            <summary>
            Add a folder to the current folder via batch.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <returns>The added folder.</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.HomeSiteReference">
            <summary>
            Represents data transfer object for HomeSiteReference
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.HomeSiteReference.SiteId">
            <summary>
            Home site id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.HomeSiteReference.Title">
            <summary>
            Home site title
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.HomeSiteReference.Url">
            <summary>
            Home site url
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.HomeSiteReference.WebId">
            <summary>
            Home site web id
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.InformationRightsManagementFileSettings">
            <summary>
            InformationRightsManagementFileSettings class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.InformationRightsManagementSettings">
            <summary>
            InformationRightsManagementSettings class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.List">
            <summary>
            List class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ListItem">
            <summary>
            ListItem class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ListItemVersion">
            <summary>
            ListItemVersion class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PropertyValues">
            <summary>
            PropertyValues class
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PropertyValues.GetString(System.String,System.String)">
            <summary>
            Get string typed property bag value. If does not contain, returns given default value.
            </summary>
            <param name="key">Key of the property bag entry to return</param>
            <param name="defaultValue">Default value of the property bag</param>
            <returns>Value of the property bag entry as string</returns>        
        </member>
        <member name="T:PnP.Core.Model.SharePoint.RecycleBinItem">
            <summary>
            RecycleBinItem class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.RegionalSettings">
            <summary>
            RegionalSettings class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.Site">
            <summary>
            Site class, write your custom code here
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Site.RegisterHubSiteAsync">
            <summary>
            Registers the current site as a primary hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Site.UnregisterHubSiteAsync">
            <summary>
            Unregisters the current site as a primary hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Site.JoinHubSiteAsync(System.Guid)">
            <summary>
            Associates the current site to a primary hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Site.UnJoinHubSiteAsync">
            <summary>
            Disassociates the current site to a primary hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Site.GetHubSiteDataAsync(System.Nullable{System.Guid})">
            <summary>
            Gets hubsite data from the current site OR another specified hub site ID
            </summary>
            <param name="id">Hub Site Guid</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Site.IsHomeSiteAsync">
            <summary>
            Checks if current site is a HomeSite
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.StorageMetrics">
            <summary>
            StorageMetrics class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TaxonomyFieldCreationOptions">
            <summary>
            Hodlds properties for Taxonomy filed
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TaxonomyFieldCreationOptions.MultiValue">
            <summary>
            Allows multiple values for Taxonomy field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TaxonomyFieldCreationOptions.TermStoreId">
            <summary>
            Term store id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TaxonomyFieldCreationOptions.TermSetId">
            <summary>
            TermSet id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TaxonomyFieldCreationOptions.DefaultValue">
            <summary>
            Default value for this taxonomy field
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.TaxonomyFieldCreationOptions.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TimeZone">
            <summary>
            TimeZone class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.UserCustomAction">
            <summary>
            UserCustomAction class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.View">
            <summary>
            View class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ViewFieldCollection">
            <summary>
            ViewFieldCollection class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.Web">
            <summary>
            Web class, write your custom code here
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Web.SyncHubSiteThemeAsync">
            <summary>
            Sync the hub site theme from parent hub site
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AddFieldOptionsFlags">
            <summary>
            Specifies the control settings while adding a field.
            This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AddFieldOptionsFlags.DefaultValue">
            <summary>
            Enumeration whose values specify that a new field added to the list must also be added to the default content type in the site collection.The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AddFieldOptionsFlags.AddToDefaultContentType">
            <summary>
            Enumeration whose values specify that a new field added to the list must also be added to the default content type in the site collection.The value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AddFieldOptionsFlags.AddToNoContentType">
            <summary>
             Enumeration whose values specify that a new field must not be added to any other content type.The value = 2.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AddFieldOptionsFlags.AddToAllContentTypes">
            <summary>
            Enumeration whose values specify that a new field that is added to the specified list must also be added to all content types in the site collection.The value = 4.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AddFieldOptionsFlags.AddFieldInternalNameHint">
            <summary>
             Enumeration whose values specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations.The value = 8.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AddFieldOptionsFlags.AddFieldToDefaultView">
            <summary>
             Enumeration whose values specify that a new field that is added to the specified list must also be added to the default list view.The value = 16.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AddFieldOptionsFlags.AddFieldCheckDisplayName">
            <summary>
            Enumeration whose values specify to confirm that no other field has the same display name. The value = 32.
            /// </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AnalyticsAggregationInterval">
            <summary>
            Agregation interval for when analytics are retrieved in a custom timewindow
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AnalyticsAggregationInterval.Day">
            <summary>
            Aggregate by day
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AnalyticsAggregationInterval.Week">
            <summary>
            Aggregate by week
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AnalyticsAggregationInterval.Month">
            <summary>
            Aggregate by month
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AnalyticsInterval">
            <summary>
            Interval for which to get analytics
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AnalyticsInterval.AllTime">
            <summary>
            Get all time consolidated analytics
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AnalyticsInterval.LastSevenDays">
            <summary>
            Get analytics for the last seven days
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.AnalyticsInterval.Custom">
            <summary>
            Get analytics for a custom time window using a day, week or month agregation
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CalendarType">
            <summary>
            A calendar type is a 2-byte integer value that specifies the type of calendar to use in a particular context.
            https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee543260%28v%3doffice.15%29
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.None">
            <summary>
            The calendar type is not specified.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.Gregorian">
            <summary>
            Specifies Gregorian (localized) calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.Japan">
            <summary>
            Specifies a Japanese Emperor Era calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.Taiwan">
            <summary>
            Specifies a Year of Taiwan calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.Korea">
            <summary>
            Specifies a Korean Tangun Era calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.Hijri">
            <summary>
            Specifies a Hijri (Arabic Lunar) calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.Thai">
            <summary>
            Specifies a Thai calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.Hebrew">
            <summary>
            Specifies a Hebrew (Lunar) calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.GregorianMEFrench">
            <summary>
            Specifies a Gregorian (Middle East French) calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.GregorianArabic">
            <summary>
            Specifies a Gregorian (Arabic) calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.GregorianXLITEnglish">
            <summary>
            Specifies a Gregorian (transliterated English) calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.GregorianXLITFrench">
            <summary>
            Specifies a Gregorian (transliterated French) calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.KoreaJapanLunar">
            <summary>
            Specifies a Korean and Japanese Lunar calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.ChineseLunar">
            <summary>
            Specifies Chinese Lunar calendar type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CalendarType.SakaEra">
            <summary>
            Specifies a Saka Era calendar type.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CheckinType">
            <summary>
            Specifies the type of check-in for a file.
            (see https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-server/ee542953(v=office.15) )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CheckinType.MinorCheckIn">
            <summary>
            Enumeration whose values are incremented as minor version. The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CheckinType.MajorCheckIn">
            <summary>
             Enumeration whose values are incremented as a major version. The value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CheckinType.OverwriteCheckIn">
            <summary>
            Enumeration whose values overwrite the file. The value = 2.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CheckOutType">
            <summary>
            Enumeration that describes the different checkout states of a file, independent of the lock state of the file.
            (e.g. https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-server/ee538918(v=office.15))
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CheckOutType.Online">
            <summary>
              The file is checked out for editing on the server.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CheckOutType.Offline">
            <summary>
            The file is checked out for editing on the local computer.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CheckOutType.None">
            <summary>
            The file is not checked out.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ChoiceFormatType">
            <summary>
            Enumeration that specifies how options are displayed for the selections in a choice field.
            https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee536424%28v%3doffice.15%29
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChoiceFormatType.Dropdown">
            <summary>
            A drop-down list box.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ChoiceFormatType.RadioButtons">
            <summary>
            Option buttons (also known as radio buttons).
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CommentsDisabledScope">
            <summary>
            An enum to determine the scope for which comments are disabled.
            https://docs.microsoft.com/en-us/dotnet/api/microsoft.sharepoint.comments.commentsdisabledscope?view=sharepoint-csom
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CommentsDisabledScope.None">
            <summary>
            No Scope
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CommentsDisabledScope.Item">
            <summary>
            Item Scoped
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CommentsDisabledScope.Web">
            <summary>
            Web Scoped
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CommentsDisabledScope.Tenant">
            <summary>
            Tenant Scoped
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CommentsDisabledScope.Site">
            <summary>
            Site Scoped
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ConvertToFormat">
            <summary>
            Target formats for file conversion
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ConvertToFormat.Pdf">
            <summary>
            PDF format
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ConvertToFormat.Jpg">
            <summary>
            JPG format
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ConvertToFormat.Html">
            <summary>
            HTML format
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ConvertToFormat.Glb">
            <summary>
            GLB format
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CustomizedPageStatus">
            <summary>
            Specifies the cache and customization status for a page.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CustomizedPageStatus.None">
            <summary>
            Enumeration whose values specify that the page was never cached. The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CustomizedPageStatus.Uncustomized">
            <summary>
            Enumeration whose values specify that the page is cached and has not been customized. The value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CustomizedPageStatus.Customized">
            <summary>
            Enumeration whose values specify that the page was cached and has been customized. The value = 2.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.DateTimeFieldFormatType">
            <summary>
            Specifies the display format for date and time fields.
            https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee537367%28v%3doffice.15%29
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DateTimeFieldFormatType.DateOnly">
            <summary>
            Displays only the date.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DateTimeFieldFormatType.DateTime">
            <summary>
            Displays the date and time.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.DateTimeFieldFriendlyFormatType">
            <summary>
            Specifies a friendly format to use in displaying date and time fields.
            https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/jj168261%28v%3doffice.15%29
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DateTimeFieldFriendlyFormatType.Unspecified">
            <summary>
            Undefined. The default rendering will be used. Value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DateTimeFieldFriendlyFormatType.Disabled">
            <summary>
            The standard absolute representation will be used. Value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DateTimeFieldFriendlyFormatType.Relative">
            <summary>
            The standard friendly relative representation will be used (for example, "today at 3:00 PM"). Value = 2.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.EventReceiverSynchronization">
            <summary>
            Specifies the synchronization state for the specified event receiver.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverSynchronization.DefaultSynchronization">
            <summary>
            Indicates to run the event receiver synchronously if it is a Before event. Indicates to run the event receiver asynchronously if it is an After event.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverSynchronization.Synchronous">
            <summary>
            Indicates to run the event receiver synchronously.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverSynchronization.Asynchronous">
            <summary>
            Indicates to run the event receiver asynchronously.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.EventReceiverType">
            <summary>
            Specifies the type of event that is handled by the event receiver.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.InvalidReceiver">
            <summary>
            Indicates that an invalid event receiver type has been specified. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemAdding">
            <summary>
            Event that occurs before an item has been added.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemUpdating">
            <summary>
            Event that occurs before an item is updated.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemDeleting">
            <summary>
            Event that occurs before an item is deleted
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemCheckingIn">
            <summary>
            Event that occurs before an item has been checked in.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemCheckingOut">
            <summary>
            Event that occurs before an item is checked out.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemUncheckingOut">
            <summary>
            Event that occurs before an item is unchecked out.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemAttachmentAdding">
            <summary>
            Event that occurs before an attachment has been added to an item.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemAttachmentDeleting">
            <summary>
            Event that occurs before an attachment has been removed from the item.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemFileMoving">
            <summary>
            Event that occurs before a file is moved.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemVersionDeleting">
            <summary>
            Event that occurs before a document version is deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.FieldAdding">
            <summary>
            Event that occurs before a field is added to a list.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.FieldUpdating">
            <summary>
            Event that occurs before a field is updated.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.FieldDeleting">
            <summary>
            Event that occurs before a field is removed from a list.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ListAdding">
            <summary>
            Event that occurs before a list is created. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ListDeleting">
            <summary>
            Event that occurs before a list is deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.SiteDeleting">
            <summary>
            Event that occurs before a site collection is deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.WebDeleting">
            <summary>
            Event that occurs before a site is deleted.  
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.WebMoving">
            <summary>
            Event that occurs before a site URL has been changed.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.WebAdding">
            <summary>
            Event that occurs before a new site is created.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.GroupAdding">
            <summary>
            Event that occurs before a security group is added.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.GroupUpdating">
            <summary>
            Event that occurs before a security group is updated.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.GroupDeleting">
            <summary>
            Event that occurs before a security group is deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.GroupUserAdding">
            <summary>
            Event that occurs before a user is added to a security group.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.GroupUserDeleting">
            <summary>
            Event that occurs before a user is deleted from a security group. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.RoleDefinitionAdding">
            <summary>
            Event that occurs before a role definition is added.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.RoleDefinitionUpdating">
            <summary>
            Event that occurs before a role definition is updated.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.RoleDefinitionDeleting">
            <summary>
            Event that occurs before a role definition is deleted. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.RoleAssignmentAdding">
            <summary>
            Event that occurs before a role assignment is added.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.RoleAssignmentDeleting">
            <summary>
            Event that occurs before a role assignment is deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.InheritanceBreaking">
            <summary>
            Event that occurs before an inheritance is broken.  
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.InheritanceResetting">
            <summary>
            Event that occurs before an inheritance is restored.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.WorkflowStarting">
            <summary>
            Event that occurs before a workflow starts running 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemAdded">
            <summary>
            Event that occurs after an item has been added.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemUpdated">
            <summary>
            Event that occurs after an item has been updated. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemDeleted">
            <summary>
            Event that occurs after an item has been deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemCheckedIn">
            <summary>
            Event that occurs after an item has been checked in.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemCheckedOut">
            <summary>
            Event that occurs after an item has been checked out.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemUncheckedOut">
            <summary>
            Event that occurs after an item has been unchecked out.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemAttachmentAdded">
            <summary>
            Event that occurs after an attachment has been added to the item.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemAttachmentDeleted">
            <summary>
            Event that occurs after an attachment has been removed from the item.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemFileMoved">
            <summary>
            Event that occurs after a file has been moved.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemFileConverted">
            <summary>
            Event that occurs after a file is transformed from one type to another.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ItemVersionDeleted">
            <summary>
            Event that occurs after a document version is deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.FieldAdded">
            <summary>
            Event that occurs after a field has been added. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.FieldUpdated">
            <summary>
            Event that occurs after a field has been updated.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.FieldDeleted">
            <summary>
            Event that occurs after a field has been removed.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ListAdded">
            <summary>
            Event that occurs after a list has been created. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ListDeleted">
            <summary>
            Event that occurs after a list has been deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.SiteDeleted">
            <summary>
            Event that occurs after a site collection has been deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.WebDeleted">
            <summary>
            Event that occurs after a site has been deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.WebMoved">
            <summary>
            Event that occurs after a site URL has been changed.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.WebProvisioned">
            <summary>
            Event that occurs after a new site has been created, but before that new site is provisioned.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.GroupAdded">
            <summary>
            Event that occurs happens after a security group is added.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.GroupUpdated">
            <summary>
            Event that occurs after a security group is updated.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.GroupDeleted">
            <summary>
            Event that occurs after a security group is deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.GroupUserAdded">
            <summary>
            Event that occurs after a user is added to a security group.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.GroupUserDeleted">
            <summary>
            Event that occurs after a user is deleted from a security group.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.RoleDefinitionAdded">
            <summary>
            Event that occurs after a role definition is added.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.RoleDefinitionUpdated">
            <summary>
            Event that occurs after a role definition is updated. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.RoleDefinitionDeleted">
            <summary>
            Event that occurs after a role definition is deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.RoleAssignmentAdded">
            <summary>
            Event that occurs after a role assignment is added.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.RoleAssignmentDeleted">
            <summary>
            Event that occurs after a role definition is deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.InheritanceBroken">
            <summary>
            Event that occurs after an inheritance is broken.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.InheritanceReset">
            <summary>
            Event that occurs after an inheritance is restored. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.WorkflowStarted">
            <summary>
            Event that occurs after a workflow has started running.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.WorkflowPostponed">
            <summary>
            Event that occurs after a workflow has been postponed.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.WorkflowCompleted">
            <summary>
            Event that occurs after a workflow has completed running.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.EntityInstanceAdded">
            <summary>
            Event that occurs when an instance of an external content type has been added.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.EntityInstanceUpdated">
            <summary>
            Event that occurs when an instance of an external content type has been updated.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.EntityInstanceDeleted">
            <summary>
            Event that occurs when an instance of an external content type has been deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.AppInstalled">
            <summary>
            Event that occurs after an app is installed.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.AppUpgraded">
            <summary>
            Event that occurs after an app is upgraded.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.AppUninstalling">
            <summary>
            Event that occurs before an app is uninstalled. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.EmailReceived">
            <summary>
            Event that occurs after a list receives an e-mail message.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.EventReceiverType.ContextEvent">
            <summary>
            Identifies workflow event receivers, and is therefore not a true event type.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldIndexStatus">
            <summary>
            Describes whether a field is indexed, and whether the data
            in the index is complete
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldIndexStatus.None">
            <summary>
            The field is not indexed.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldIndexStatus.Indexed">
            <summary>
            The field is indexed.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldIndexStatus.Enabling">
            <summary>
            The field index definition has been created, but its data is in the process of being populated.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldIndexStatus.Disabling">
            <summary>
            The field index definition has been deleted, but its data is in the process of being removed.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldType">
            <summary>
            Specifies the type of the field.
            https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-server/ee540543(v=office.15)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Invalid">
            <summary>
            Must not be used. The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Integer">
            <summary>
            Specifies that the field contains an integer value. The value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Text">
            <summary>
            Specifies that the field contains a single line of text. The value = 2.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Note">
            <summary>
            Specifies that the field contains multiple lines of text. The value = 3.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.DateTime">
            <summary>
            Specifies that the field contains a date and time value or a date-only value. The value = 4.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Counter">
            <summary>
            Specifies that the field contains a monotonically increasing integer. The value = 5.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Choice">
            <summary>
            Specifies that the field contains a single value from a set of specified values. The value = 6.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Lookup">
            <summary>
            Specifies that the field is a lookup field. The value = 7.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Boolean">
            <summary>
            Specifies that the field contains a Boolean value. The value = 8.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Number">
            <summary>
            Specifies that the field contains a floating-point number value. The value = 9.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Currency">
            <summary>
            Specifies that the field contains a currency value. The value = 10.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.URL">
            <summary>
            Specifies that the field contains a URI and an optional description of the URI. The value = 11.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Computed">
            <summary>
            Specifies that the field is a computed field. The value = 12.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Threading">
            <summary>
            Specifies that the field indicates the thread for a discussion item in a threaded view of a discussion board. The value = 13.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Guid">
            <summary>
            Specifies that the field contains a GUID value. The value = 14.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.MultiChoice">
            <summary>
            Specifies that the field contains one or more values from a set of specified values. The value = 15.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.GridChoice">
            <summary>
            Specifies that the field contains rating scale values for a survey list. The value = 16.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Calculated">
            <summary>
            Specifies that the field is a calculated field. The value = 17.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.File">
            <summary>
            Specifies that the field contains the leaf name of a document as a value. The value = 18.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Attachments">
            <summary>
            Specifies that the field indicates whether the list item has attachments. The value = 19.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.User">
            <summary>
            Specifies that the field contains one or more users and groups as values. The value = 20.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Recurrence">
            <summary>
            	Specifies that the field indicates whether a meeting in a calendar list recurs. The value = 21.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.CrossProjectLink">
            <summary>
            Specifies that the field contains a link between projects in a Meeting Workspace site. The value = 22.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.ModStat">
            <summary>
            Specifies that the field indicates moderation status. The value = 23.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.Error">
            <summary>
            Specifies that the type of the field was set to an invalid value. The value = 24.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.ContentTypeId">
            <summary>
            Specifies that the field contains a content type identifier as a value. The value = 25.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.PageSeparator">
            <summary>
            Specifies that the field separates questions in a survey list onto multiple pages. The value = 26.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.ThreadIndex">
            <summary>
            Specifies that the field indicates the position of a discussion item in a threaded view of a discussion board. The value = 27.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.WorkflowStatus">
            <summary>
            Specifies that the field indicates the status of a workflow instance on a list item. The value = 28.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.AllDayEvent">
            <summary>
            Specifies that the field indicates whether a meeting in a calendar list is an all-day event. The value = 29.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.WorkflowEventType">
            <summary>
            Specifies that the field contains the most recent event in a workflow instance. The value = 30.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldType.MaxItems">
            <summary>
            Must not be used. The value = 31.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldUserSelectionMode">
            <summary>
            Specifies whether users and groups or only users can be selected.
            https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee545809%28v%3doffice.15%29
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldUserSelectionMode.PeopleOnly">
            <summary>
            Enumeration whose value specifies that only users can be selected. The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FieldUserSelectionMode.PeopleAndGroups">
            <summary>
            Enumeration whose value specifies that users and groups can be selected. The value = 1.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FileLevel">
            <summary>
            Publis level of this file
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FileLevel.Published">
            <summary>
            File is published
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FileLevel.Draft">
            <summary>
            File is in draft status
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FileLevel.Checkout">
            <summary>
            File was checked out
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FileSystemObjectType">
            <summary>
            Specifies the file system object type.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FileSystemObjectType.Invalid">
            <summary>
            Enumeration whose values specify whether the object is invalid. The value = -1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FileSystemObjectType.File">
            <summary>
            Enumeration whose values specify whether the object is a file. The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FileSystemObjectType.Folder">
            <summary>
            Enumeration whose values specify whether the object is a folder. The value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FileSystemObjectType.Web">
            <summary>
            Enumeration whose values specify whether the object is a site. The values = 2.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FooterLayoutType">
            <summary>
            Available footer layouts for modern sites
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FooterLayoutType.Simple">
            <summary>
            Simple footer. This is the default layout type with one single row of links. ( Value = 0 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FooterLayoutType.Extended">
            <summary>
            Extended footer. This layout type supports columns of links with multiple links in each column. ( Value = 1 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FooterLayoutType.Stacked">
            <summary>
            Stacked footer. This layout type is a combination of simple and extended, with the extended stacked above the simple. ( Value = 2 )
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FooterVariantThemeType">
            <summary>
            Variants documentation: https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/variants
            Note that this definition is similar to SPVariantThemeType, but with the strong and none variants switched.
            This is because we want strong to be the default for footer.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FooterVariantThemeType.Strong">
            <summary>
            strong variant - primary color as background, text uses original background color; white on brand blue by default ( Value = 0 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FooterVariantThemeType.Neutral">
            <summary>
            neutral variant - light shade of original background as background ( Value = 1 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FooterVariantThemeType.Soft">
            <summary>
            soft variant - light tint of the primary color as background ( Value = 2 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.FooterVariantThemeType.None">
            <summary>
            no emphasis - appears as normal ( Value = 3 )
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.HeaderLayoutType">
            <summary>
            Available header layouts for modern sites
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.HeaderLayoutType.None">
            <summary>
            use the original header [deprecated, now reverts to large/standard] ( Value = 0 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.HeaderLayoutType.Standard">
            <summary>
            large/standard header ( Value = 1 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.HeaderLayoutType.Compact">
            <summary>
            medium/compact header ( Value = 2 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.HeaderLayoutType.Minimal">
            <summary>
            small/minimal header [not currently used] ( Value = 3 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.HeaderLayoutType.Extended">
            <summary>
            extended header ( Value = 4 )
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ListExperience">
            <summary>
            List experience, determines how a list is presented (modern or classic)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListExperience.Auto">
            <summary>
             SPO will automatically define the right experience based on the settings of the current list, it is the default value.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListExperience.ClassicExperience">
            <summary>
            The Classic experience will be forced for the current list.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListExperience.NewExperience">
            <summary>
            The Modern experience will be forced for the current list.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ListPageRenderType">
            <summary>
            List Page Render Type
            (e.g. https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/mt796270(v=office.15))
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ListReadingDirection">
            <summary>
            Reading direction of the list
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListReadingDirection.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListReadingDirection.LTR">
            <summary>
            Left to Right
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListReadingDirection.RTL">
            <summary>
            Right to Left
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ListTemplateType">
            <summary>
            Enumeration to define the list template types for SharePoint
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.InvalidType">
            <summary>
            InvalidType list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.NoListTemplate">
            <summary>
            NoListTemplate list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.GenericList">
            <summary>
            GenericList list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.DocumentLibrary">
            <summary>
            DocumentLibrary list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Survey">
            <summary>
            Survey list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Links">
            <summary>
            Links list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Announcements">
            <summary>
            Announcements list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Contacts">
            <summary>
            Contacts list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Events">
            <summary>
            Events list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Tasks">
            <summary>
            Tasks list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.DiscussionBoard">
            <summary>
            DiscussionBoard list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.PictureLibrary">
            <summary>
            PictureLibrary list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.DataSources">
            <summary>
            DataSources list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.WebTemplateCatalog">
            <summary>
            WebTemplateCatalog list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.UserInformation">
            <summary>
            UserInformation list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.WebPartCatalog">
            <summary>
            WebPartCatalog list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.ListTemplateCatalog">
            <summary>
            ListTemplateCatalog list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.XMLForm">
            <summary>
            XMLForm list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.MasterPageCatalog">
            <summary>
            MasterPageCatalog list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.NoCodeWorkflows">
            <summary>
            NoCodeWorkflows list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.WorkflowProcess">
            <summary>
            WorkflowProcess list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.WebPageLibrary">
            <summary>
            WebPageLibrary list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.CustomGrid">
            <summary>
            CustomGrid list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.SolutionCatalog">
            <summary>
            SolutionCatalog list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.NoCodePublic">
            <summary>
            NoCodePublic list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.ThemeCatalog">
            <summary>
            ThemeCatalog list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.DesignCatalog">
            <summary>
            DesignCatalog list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.AppDataCatalog">
            <summary>
            AppDataCatalog list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.AppFilesCatalog">
            <summary>
            AppFilesCatalog list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.DataConnectionLibrary">
            <summary>
            DataConnectionLibrary list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.WorkflowHistory">
            <summary>
            WorkflowHistory list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.GanttTasks">
            <summary>
            GanttTasks list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.HelpLibrary">
            <summary>
            HelpLibrary list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.AccessRequest">
            <summary>
            AccessRequest list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.PromotedLinks">
            <summary>
            PromotedLinks list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.TasksWithTimelineAndHierarchy">
            <summary>
            TasksWithTimelineAndHierarchy list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.MaintenanceLogs">
            <summary>
            MaintenanceLogs list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Meetings">
            <summary>
            Meetings list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Agenda">
            <summary>
            Agenda list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.MeetingUser">
            <summary>
            MeetingUser list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Decision">
            <summary>
            Decision list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.MeetingObjective">
            <summary>
            MeetingObjective list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.TextBox">
            <summary>
            TextBox list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.ThingsToBring">
            <summary>
            ThingsToBring list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.HomePageLibrary">
            <summary>
            HomePageLibrary list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Posts">
            <summary>
            Posts list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Comments">
            <summary>
            Comments list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Categories">
            <summary>
            Categories list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Facility">
            <summary>
            Facility list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Whereabouts">
            <summary>
            Whereabouts list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.CallTrack">
            <summary>
            CallTrack list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Circulation">
            <summary>
            Circulation list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Timecard">
            <summary>
            Timecard list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.Holidays">
            <summary>
            Holidays list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.IMEDic">
            <summary>
            IMEDic list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.ExternalList">
            <summary>
            ExternalList list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.MySiteDocumentLibrary">
            <summary>
            MySiteDocumentLibrary list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.IssueTracking">
            <summary>
            IssueTracking list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.AdminTasks">
            <summary>
            AdminTasks list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.HealthRules">
            <summary>
            HealthRules list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.HealthReports">
            <summary>
            HealthReports list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.DeveloperSiteDraftApps">
            <summary>
            DeveloperSiteDraftApps list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.ContentCenterPrimeLibrary">
            <summary>
            ContentCenterPrimeLibrary list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.ContentCenterSampleLibrary">
            <summary>
            ContentCenterSampleLibrary list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.AccessApp">
            <summary>
            AccessApp list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.AlchemyMobileForm">
            <summary>
            AlchemyMobileForm list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.AlchemyApprovalWorkflow">
            <summary>
            AlchemyApprovalWorkflow list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.SharingLinks">
            <summary>
            SharingLinks list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.HashtagStore">
            <summary>
            HashtagStore list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.RecipesTable">
            <summary>
            RecipesTable list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.FormulasTable">
            <summary>
            FormulasTable list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.WebTemplateExtensionsList">
            <summary>
            WebTemplateExtensionsList list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.ItemReferenceCollection">
            <summary>
            ItemReferenceCollection list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.ItemReferenceReference">
            <summary>
            ItemReferenceReference list type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ListTemplateType.ItemReferenceReferenceCollection">
            <summary>
            ItemReferenceReferenceCollection list type
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.LogoAlignment">
            <summary>
            Logo alignment in extended header layout
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.LogoAlignment.Left">
            <summary>
            Left alignement ( Value = 0 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.LogoAlignment.Middle">
            <summary>
            Middle alignment ( Value = 1 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.LogoAlignment.Right">
            <summary>
            Right alignment ( Value = 2 )
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.MigrationJobState">
            <summary>
            Specifies the state of the migration job
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MigrationJobState.None">
            <summary>
            Finished
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MigrationJobState.Processing">
            <summary>
            In progress
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MigrationJobState.Queued">
            <summary>
            In queue to being processed
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.MoveOperations">
            <summary>
            Specifies criteria for how to move files.
            This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.
            (see https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-server/ee542328(v=office.15) )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MoveOperations.None">
            <summary>
            No move operation specified. The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MoveOperations.Overwrite">
            <summary>
            Overwrite a file with the same name if it exists. The value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MoveOperations.AllowBrokenThickets">
            <summary>
             Complete the move operation even if supporting files are separated from the file. The value = 8.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MoveOperations.BypassApprovePermission">
            <summary>
            Do not require approval permissions for move if there are no published versions for the document
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MoveOperations.BypassSharedLock">
            <summary>
            Ignore Shared Lock constraints when moving this file. If one or more users have a valid Shared Lock,
            bypass the lock check during the move operation.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MoveOperations.RetainEditorAndModifiedOnMove">
            <summary>
            Boolean specifying whether to retain the source of the move's editor and modified by datetime.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PermissionKind">
            <summary>
            Index to check if flag for a permission is set or not in SPBasePermissions enumeration
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.EmptyMask">
            <summary>
            Has no permissions on the Site. Not available through the user interface.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ViewListItems">
            <summary>
            View items in lists, documents in document libraries, and Web discussion comments.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.AddListItems">
            <summary>
            Add items to lists, documents to document libraries, and Web discussion
             comments.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.EditListItems">
            <summary>
            Edit items in lists, edit documents in document libraries, edit Web discussion comments
             in documents, and customize Web Part Pages in document libraries.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.DeleteListItems">
            <summary>
            Delete items from a list, documents from a document library, and Web discussion
             comments in documents.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ApproveItems">
            <summary>
            Approve a minor version of a list item or document.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.OpenItems">
            <summary>
            View the source of documents with server-side file handlers.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ViewVersions">
            <summary>
            View past versions of a list item or document.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.DeleteVersions">
            <summary>
            Delete past versions of a list item or document.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.CancelCheckout">
            <summary>
            Discard or check in a document which is checked out to another user.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ManagePersonalViews">
            <summary>
            Create, change, and delete personal views of lists.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ManageLists">
            <summary>
            Create and delete lists, add or remove columns in a list, and add or remove public
             views of a list.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ViewFormPages">
            <summary>
            View forms, views, and application pages, and enumerate lists.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.AnonymousSearchAccessList">
            <summary>
            Make content of a list or document library retrieveable for anonymous users through SharePoint search.
            The list permissions in the site do not change.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.Open">
            <summary>
            Allow users to open a Site, list, or folder to access items inside that container.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ViewPages">
            <summary>
            View pages in a Site.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.AddAndCustomizePages">
            <summary>
            Add, change, or delete HTML pages or Web Part Pages, and edit the Site using
             a Windows SharePoint Services compatible editor.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ApplyThemeAndBorder">
            <summary>
            Apply a theme or borders to the entire Site.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ApplyStyleSheets">
            <summary>
            Apply a style sheet (.css file) to the Site.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ViewUsageData">
            <summary>
            View reports on Site usage.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.CreateSSCSite">
            <summary>
            Create a Site using Self-Service Site Creation.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ManageSubwebs">
            <summary>
            Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.CreateGroups">
            <summary>
            Create a group of users that can be used anywhere within the site collection.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ManagePermissions">
            <summary>
            Create and change permission levels on the Site and assign permissions to users
            and groups.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.BrowseDirectories">
            <summary>
            Enumerate files and folders in a Site using Microsoft Office SharePoint Designer
            and WebDAV interfaces.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.BrowseUserInfo">
            <summary>
            View information about users of the Site.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.AddDelPrivateWebParts">
            <summary>
            Add or remove personal Web Parts on a Web Part Page.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.UpdatePersonalWebParts">
            <summary>
            Update Web Parts to display personalized information.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ManageWeb">
            <summary>
            Grant the ability to perform all administration tasks for the Site as well as
             manage content, activate, deactivate, or edit properties of Site scoped Features
             through the object model or through the user interface (UI). When granted on the
             root Site of a Site Collection, activate, deactivate, or edit properties of
             site collection scoped Features through the object model. To browse to the Site
             Collection Features page and activate or deactivate Site Collection scoped Features
             through the UI, you must be a Site Collection administrator.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.AnonymousSearchAccessWebLists">
            <summary>
            Content of lists and document libraries in the Web site will be retrieveable for anonymous users through
            SharePoint search if the list or document library has AnonymousSearchAccessList set.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.UseClientIntegration">
            <summary>
            Use features that launch client applications. Otherwise, users must work on documents
             locally and upload changes.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.UseRemoteAPIs">
            <summary>
            Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access
             the Site.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.ManageAlerts">
            <summary>
            Manage alerts for all users of the Site.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.CreateAlerts">
            <summary>
            Create e-mail alerts.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.EditMyUserInfo">
            <summary>
            Allows a user to change his or her user information, such as adding a picture.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.EnumeratePermissions">
            <summary>
            Enumerate permissions on Site, list, folder, document, or list item.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PermissionKind.FullMask">
            <summary>
            Has all permissions on the Site. Not available through the user interface.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PublishedStatus">
            <summary>
            Indicates if a file was published, draft or checked out
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PublishedStatus.Published">
            <summary>
            File is published
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PublishedStatus.Draft">
            <summary>
            File is in draft
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PublishedStatus.Checkout">
            <summary>
            File is checked out
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.RecycleBinItemState">
            <summary>
            Specifies the Recycle Bin stage of the Recycle Bin item.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemState.None">
            <summary>
            The stage of the Recycle Bin item is not specified. The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemState.FirstStageRecycleBin">
            <summary>
            Specifies that the Recycle Bin item is in the user Recycle Bin. The value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemState.SecondStageRecycleBin">
            <summary>
            Specifies that the Recycle Bin Item is in the site collection Recycle Bin. The value = 2.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.RecycleBinItemType">
            <summary>
            Specifies the type of the Recycle Bin item.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.None">
            <summary>
            The type of the Recycle Bin item is not specified. The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.File">
            <summary>
            Specifies that the Recycle Bin item is a file. The value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.FileVersion">
            <summary>
            Specifies that the Recycle Bin item is a historical version of a file. The value = 2.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.ListItem">
            <summary>
            Specifies that the Recycle Bin item is a list item. The value = 3.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.List">
            <summary>
            Specifies that the Recycle Bin item is a list. The value = 4.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.Folder">
            <summary>
            Specifies that the Recycle Bin item is a folder. The value = 5.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.FolderWithLists">
            <summary>
            Specifies that the Recycle Bin item is a folder that contains a list. The value = 6.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.Attachment">
            <summary>
            Specifies that the Recycle Bin item is an attachment. The value = 7.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.ListItemVersion">
            <summary>
            Specifies that the Recycle Bin item is a historical version of a list item. The value = 8.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.CascadeParent">
            <summary>
            Specifies that the Recycle Bin item is a list item that is the parent of one or more related list items. The value = 9.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.Web">
            <summary>
            Specifies that the Recycle Bin item is a site (Web object). The value = 10.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinItemType.App">
            <summary>
            Specifies that that Recycle Bin item is an app. The value = 11
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.RecycleBinOrderBy">
            <summary>
            Specifies the column by which to order a Recycle Bin query.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinOrderBy.Title">
            <summary>
            Name column.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinOrderBy.DirName">
            <summary>
            Original Location column.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinOrderBy.Author">
            <summary>
            Created By column.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinOrderBy.DeletedDate">
            <summary>
            Deleted column.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinOrderBy.Size">
            <summary>
            Size column.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinOrderBy.DeletedBy">
            <summary>
            Deleted By column.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RecycleBinOrderBy.None">
            <summary>
            No ordering is enforced. Can be used only for the first page.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.RelationshipDeleteBehaviorType">
            <summary>
            Specifies the optional relationship behavior of a relationship lookup field.
            https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee537368%28v%3doffice.15%29
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RelationshipDeleteBehaviorType.None">
            <summary>
            Enumeration whose value specifies that no relationship behavior is applied. . Value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RelationshipDeleteBehaviorType.Cascade">
            <summary>
            Enumeration whose value specifies the cascade behavior. Value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RelationshipDeleteBehaviorType.Restrict">
            <summary>
            Enumeration whose value specifies the restrict behavior. Value = 2.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags">
            <summary>
            Options to setup on the <see cref="T:PnP.Core.Model.SharePoint.RenderListDataOptions"/> RenderOptions property
            See https://docs.microsoft.com/en-us/sharepoint/dev/sp-add-ins/working-with-lists-and-list-items-with-rest#sprenderlistdataoptions-options
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.None">
            <summary>
            Return default output
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.ContextInfo">
            <summary>
            Return list context information
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.ListData">
            <summary>
            Return list data (same as None)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.ListSchema">
            <summary>
            Return list schema
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.MenuView">
            <summary>
            Return HTML for the list menu
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.ListContentType">
            <summary>
            Returns information about list content types. Must be combined with the ContextInfo flag
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.FileSystemItemId">
            <summary>
            The returned list will have a FileSystemItemId field on each item if possible. Must be combined with the ListData flag
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.ClientFormSchema">
            <summary>
            Returns the client form schema to add and edit items
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.QuickLaunch">
            <summary>
            Returns QuickLaunch navigation nodes
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.Spotlight">
            <summary>
            Returns Spotlight rendering information
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.Visualization">
            <summary>
            Returns Visualization rendering information
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.ViewMetadata">
            <summary>
            Returns view XML and other information about the current view
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.DisableAutoHyperlink">
            <summary>
            Prevents AutoHyperlink from being run on text fields in this query
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.EnableMediaTAUrls">
            <summary>
            Enables URLs pointing to Media TA service, such as .thumbnailUrl, .videoManifestUrl, .pdfConversionUrls
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.ParentInfo">
            <summary>
            Returns parent folder information
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.PageContextInfo">
            <summary>
            Returns page context info for the current list being rendered
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.ClientSideComponentManifest">
            <summary>
            Return client-side component manifest information associated with the list (reserved for future use)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.ListAvailableContentTypes">
            <summary>
            Return all content-types available on the list
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.FolderContentTypeOrder">
            <summary>
            Return the order of items in the new-item menu
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.GridInitInfo">
            <summary>
            Return information to initialize Grid for quick edit
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.SiteUrlAsMediaTASPItemHost">
            <summary>
            Indicator if the vroom API of the SPItemUrl returned in MediaTAUrlGenerator should use site url as host
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.AddToOneDrive">
            <summary>
            Return the files representing mount points in the list
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.SPFXCustomActions">
            <summary>
            Return SPFX CustomAction
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RenderListDataOptionsFlags.CustomActions">
            <summary>
            Do not return non-SPFX CustomAction
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.RoleType">
            <summary>
            RoleType enumeration used in Role Definitions
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.None">
            <summary>
            Enumeration whose values specify that there are no rights on the Web site
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.Guest">
            <summary>
            Has limited rights to view pages and specific page elements. This role is used to give users access to a particular page, list, or item in a list, without granting rights to view the entire site. Users cannot be added explicitly to the Guest role; users who are given access to lists or document libraries by way of per-list permissions are added automatically to the Guest role. The Guest role cannot be customized or deleted.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.Reader">
            <summary>
            Has rights to view items, personalize Web parts, use alerts, and create a top-level Web site using Self-Service Site Creation. A reader can only read a site; the reader cannot add content. When a reader creates a site using Self-Service Site Creation, the reader becomes the site owner and a member of the Administrator role for the new site. This does not affect the user's role membership for any other site. Rights included: CreateSSCSite, ViewListItems, ViewPages.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.Contributor">
            <summary>
            Has Reader rights, plus rights to add items, edit items, delete items, manage list permissions, manage personal views, personalize Web Part Pages, and browse directories. Includes all rights in the Reader role, plus the following: AddDelPrivateWebParts, AddListItems, BrowseDirectories, CreatePersonalGroups, DeleteListItems, EditListItems, ManagePersonalViews, UpdatePersonalWebParts. Contributors cannot create new lists or document libraries, but they can add content to existing lists and document libraries.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.WebDesigner">
            <summary>
            Has Reader rights, plus rights to add items, edit items, delete items, manage list permissions, manage personal views, personalize Web Part Pages, and browse directories. Includes all rights in the Reader role, plus the following: AddDelPrivateWebParts, AddListItems, BrowseDirectories, CreatePersonalGroups, DeleteListItems, EditListItems, ManagePersonalViews, UpdatePersonalWebParts. Contributors cannot create new lists or document libraries, but they can add content to existing lists and document libraries.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.Administrator">
            <summary>
            Has Contributor rights, plus rights to cancel check-out, delete items, manage lists, add and customize pages, define and apply themes and borders, and link style sheets. Includes all rights in the Contributor role, plus the following: AddAndCustomizePages, ApplyStyleSheets, ApplyThemeAndBorder, CancelCheckout, ManageLists. WebDesigners can modify the structure of the site and create new lists or document libraries.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.Editor">
            <summary>
            Has all rights from other roles, plus rights to manage roles and view usage analysis data. Includes all rights in the WebDesigner role, plus the following: ManageListPermissions, ManageRoles, ManageSubwebs, ViewUsageData. The Administrator role cannot be customized or deleted, and must always contain at least one member. Members of the Administrator role always have access to, or can grant themselves access to, any item in the Web site. 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.Reviewer">
            <summary>
            Has Contributor rights, plus rights to manage lists. Includes all rights in the Contributor role. Editors can create new lists or document libraries.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.RestrictedReader">
            <summary>
            
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.RestrictedGuest">
            <summary>
            
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.RoleType.System">
            <summary>
            
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SearchBoxInNavBar">
            <summary>
            Searchbox in navigation options
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SearchBoxInNavBar.Inherit">
            <summary>
            Inherit site config
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SearchBoxInNavBar.AllPages">
            <summary>
            Show on all pages
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SearchBoxInNavBar.ModernOnly">
            <summary>
            Show on modern pages only
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SearchBoxInNavBar.Hidden">
            <summary>
            Don't show the search box in the navigation bar
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SearchScope">
            <summary>
            Search scopes of the site
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SearchScope.DefaultScope">
            <summary>
            Defines the DefaultScope for the SearchScope of the site
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SearchScope.Tenant">
            <summary>
            Defines the Tenant for the SearchScope of the site
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SearchScope.Hub">
            <summary>
            Defines the Hub for the SearchScope of the site
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SearchScope.Site">
            <summary>
            Defines the Site for the SearchScope of the site
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SharingState">
            <summary>
            Contains the values of the 3 allowed states for Sharing properties.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharingState.Unspecified">
            <summary>
            State 1: Unspecified. Implies that the Tenant Adnin is choosing to let Site and Web Owners specify the behavior for Sharing Property State
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharingState.On">
            <summary>
            State 2: On. Implies that Tenant Admin is forcing Sharing Property State to behave as if they are set to True
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SharingState.Off">
            <summary>
            State 3: Off. Implies that Tenant Admin is forcing Sharing Property State to behave as if they are set to False
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ShowInFiltersPaneStatus">
            <summary>
            Represents status to determine whether filters pane will show the field
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ShowInFiltersPaneStatus.Auto">
            <summary>
            field will be auto determined to show/hide in filters pane based on the list data
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ShowInFiltersPaneStatus.Pinned">
            <summary>
            field will always show in Filters pane
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ShowInFiltersPaneStatus.Removed">
            <summary>
            field will never show in filters pane
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SocialActorType">
            <summary>
            An actor type in following APIs
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorType.User">
            <summary>
            A user
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorType.Document">
            <summary>
            A document
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorType.Site">
            <summary>
            A site
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorType.Tag">
            <summary>
            A tag
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SocialActorTypes">
            <summary>
            Represents an actor type, which defines types of following content to return
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorTypes.None">
            <summary>
            Defines not actor types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorTypes.Users">
            <summary>
            Users actor types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorTypes.Documents">
            <summary>
            Documents actor types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorTypes.Sites">
            <summary>
            Sites actor types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorTypes.Tags">
            <summary>
            Tags actor types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorTypes.ExcludeContentWithoutFeeds">
            <summary>
            The set excludes documents and sites that do not have feeds.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorTypes.IncludeGroupsSites">
            <summary>
            The set includes group sites
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorTypes.WithinLast24Hours">
            <summary>
            The set includes only items created within the last 24 hours
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialActorTypes.All">
            <summary>
            Includes all actor types
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SocialFollowResult">
            <summary>
            The result of the follow operation
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialFollowResult.Ok">
            <summary>
            The status is OK
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialFollowResult.AlreadyFollowing">
            <summary>
            The content is already followed
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialFollowResult.LimitReached">
            <summary>
            The following limit is reached
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialFollowResult.InternalError">
            <summary>
            Something went wrong when follwoing an item
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SocialStatusCode">
            <summary>
            A status code of the following item, a property of <see cref="T:PnP.Core.Model.SharePoint.ISocialActor"/>
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.OK">
            The operation completed successfully
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.InvalidRequest">
            The request is invalid.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.AccessDenied">
            The current user is not authorized to perform the operation.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.ItemNotFound">
            The target of the operation was not found.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.InvalidOperation">
            The operation is invalid for the target's current state.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.ItemNotModified">
            The operation completed without modifying the target.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.InternalError">
            The operation failed because an internal error occurred.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.CacheReadError">
            The operation failed because the server could not access the distributed cache.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.CacheUpdateError">
            The operation succeeded but the server could not update the distributed cache.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.PersonalSiteNotFound">
            No personal site exists for the current user, and no further information is available.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.FailedToCreatePersonalSite">
            No personal site exists for the current user, and a previous attempt to create one failed.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.NotAuthorizedToCreatePersonalSite">
            No personal site exists for the current user, and a previous attempt to create one was not authorized.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.CannotCreatePersonalSite">
            No personal site exists for the current user, and no attempt should be made to create one.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.LimitReached">
            The operation was rejected because an internal limit had been reached.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.AttachmentError">
            The operation failed because an error occurred during the processing of the specified attachment.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.PartialData">
            The operation succeeded with recoverable errors; the returned data is incomplete.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.FeatureDisabled">
            A required SharePoint feature is not enabled.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.StorageQuotaExceeded">
            The site's storage quota has been exceeded.
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SocialStatusCode.DatabaseError">
            The operation failed because the server could not access the database.
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SortDirection">
            <summary>
            Sort direction
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SortDirection.Descending">
            <summary>
            Sort descending
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SortDirection.Ascending">
            <summary>
            Sort ascending
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SPEffectiveInformationRightsManagementSettingsSource">
            <summary>
            The source of settings for the effective IRM of a file.
            https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-server/mt684131(v=office.15)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SPEffectiveInformationRightsManagementSettingsSource.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SPEffectiveInformationRightsManagementSettingsSource.File">
            <summary>
            File
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SPEffectiveInformationRightsManagementSettingsSource.List">
            <summary>
            List
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SPEffectiveInformationRightsManagementSettingsSource.Rule">
            <summary>
            Rule
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SPMigrationNameConflictBehavior">
            <summary>
            Enum for the behavior when a name conflict occurs
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SPMigrationNameConflictBehavior.Fail">
            <summary>
            Returns an error
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SPMigrationNameConflictBehavior.Replace">
            <summary>
            Replaces the file if conflict occurs
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.SPMigrationNameConflictBehavior.KeepBoth">
            <summary>
            Keeps both the files (will append a character / number to the filename)
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TemplateFileType">
            <summary>
            Types of pages that can be created using the AddTemplateFile method
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.TemplateFileType.StandardPage">
            <summary>
            Classic ASPX page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.TemplateFileType.WikiPage">
            <summary>
            Classic wiki page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.TemplateFileType.FormPage">
            <summary>
            Classic form page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.TemplateFileType.ClientSidePage">
            <summary>
            Modern page
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ThumbnailSize">
            <summary>
            Standard size of a thumbnail
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ThumbnailSize.Large">
            <summary>
            A 800x800 scaled thumbnail.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ThumbnailSize.Medium">
            <summary>
            A 176x176 scaled thumbnail.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ThumbnailSize.Small">
            <summary>
            A 96x96 cropped thumbnail.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.UnfurlLinkType">
            <summary>
            Defines the type of resource that was provided via the link to unfurl
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UnfurlLinkType.List">
            <summary>
            The provided link was for a list
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UnfurlLinkType.ListItem">
            <summary>
            The provided link was for a list item
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UnfurlLinkType.Library">
            <summary>
            The provided link was for document library
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UnfurlLinkType.File">
            <summary>
            The provided link was for a file
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UnfurlLinkType.SitePagesLibrary">
            <summary>
            The provided link was for a pages library of page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UnfurlLinkType.SitePage">
            <summary>
            The provided link was for a page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UnfurlLinkType.Unknown">
            <summary>
            The provided link was something else or was invalid
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.UrlFieldFormatType">
            <summary>
            Format of the Url field
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UrlFieldFormatType.Hyperlink">
            <summary>
            Specify that the value must be displayed as a hyperlink.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UrlFieldFormatType.Image">
            <summary>
            Specify that the value must be displayed as an image. 
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.UserCustomActionRegistrationType">
            <summary>
            Specifies the type of object associated with the custom action.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UserCustomActionRegistrationType.None">
            <summary>
            Enumeration whose values specify that the object association is not specified. The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UserCustomActionRegistrationType.List">
            <summary>
            Enumeration whose values specify that the custom action is associated with a list. The value = 1.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UserCustomActionRegistrationType.ContentType">
            <summary>
            Enumeration whose values specify that the custom action is associated with a content type. The value = 2.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UserCustomActionRegistrationType.ProgId">
            <summary>
            Enumeration whose values specify that the custom action is associated with a ProgID. The value = 3.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UserCustomActionRegistrationType.FileType">
            <summary>
            Enumeration whose values specify that the custom action is associated with a file extension. The value = 4.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.UserCustomActionScope">
            <summary>
            Specifies the scope of the custom action.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UserCustomActionScope.Unknown">
            <summary>
            Enumeration whose values specify that the scope of the custom action is not specified. The value = 0.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UserCustomActionScope.Site">
            <summary>
            Enumeration whose values specify that the scope of the custom action is limited to a site collection. The value = 2.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UserCustomActionScope.Web">
            <summary>
            Enumeration whose values specify that the scope of the custom action is limited to a site. The value = 3.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.UserCustomActionScope.List">
            <summary>
            Enumeration whose values specify that the scope of the custom action is limited to a list. The value = 4.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.VariantThemeType">
            <summary>
            Footer Variant theme type
            (see https://github.com/microsoft/fluentui/tree/master/packages/variants)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.VariantThemeType.None">
            <summary>
            no emphasis - appears as normal ( Value = 0 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.VariantThemeType.Neutral">
            <summary>
            neutral variant - light shade of original background as background ( Value = 1 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.VariantThemeType.Soft">
            <summary>
            soft variant - light tint of the primary color as background ( Value = 2 )
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.VariantThemeType.Strong">
            <summary>
            strong variant - primary color as background, text uses original background color; white on brand blue by default ( Value = 3 )
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ViewScope">
            <summary>
            Specifies the recursive scope of a view for a document library.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewScope.Default">
            <summary>
            Show only the files and subfolders of a specific folder.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewScope.Recursive">
            <summary>
            Show all files of all folders.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewScope.RecursiveAll">
            <summary>
            Show all files and all subfolders of all folders.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewScope.FilesOnly">
            <summary>
            Show only the files of a specific folder.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ViewType">
            <summary>
            Value that specifies the type of the list view.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewType.None">
            <summary>
            The type of the list view is not specified
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewType.HTML">
            <summary>
            HTML Type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewType.GRID">
            <summary>
            Datasheet list view type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewType.CALENDAR">
            <summary>
            Calendar list view type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewType.RECURRENCE">
            <summary>
            List view type that displays recurring events
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewType.CHART">
            <summary>
            Chart list view type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewType.GANTT">
            <summary>
            Gantt chart list view type
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ViewType2">
            <summary>
            Modern List View Types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewType2.NONE">
            <summary>
            Empty Value
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewType2.COMPACTLIST">
            <summary>
            Compact List Mode
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewType2.TILES">
            <summary>
            Tiles Mode
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ViewTypeKind">
            <summary>
            Value that specifies the type of the list view.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewTypeKind.None">
            <summary>
            The type of the list view is not specified
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewTypeKind.Html">
            <summary>
            HTML Type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewTypeKind.Grid">
            <summary>
            Datasheet list view type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewTypeKind.Calendar">
            <summary>
            Calendar list view type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewTypeKind.Recurrence">
            <summary>
            List view type that displays recurring events
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewTypeKind.Chart">
            <summary>
            Chart list view type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ViewTypeKind.Gantt">
            <summary>
            Gantt chart list view type
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FollowData">
            <summary>
            A metadata object following requests
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FollowData.ActorType">
            <summary>
            Represents an actor type. Can be either a user, site, document or tag
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IActivityActionStat">
            <summary>
            Statistics for a given action
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityActionStat.ActionCount">
            <summary>
            The number of times the action took place.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityActionStat.ActorCount">
            <summary>
            The number of distinct actors that performed the action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityActionStat.TimeSpentInSeconds">
            <summary>
            The time (seconds) spent for the performed action.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IActivityIncomplete">
            <summary>
            Indicates that a resource was generated with incomplete data. The properties within might provide information about why the data is incomplete.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityIncomplete.MissingDataBeforeDateTime">
            <summary>
            The service does not have source data before the specified time.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityIncomplete.WasThrottled">
            <summary>
            Some data was not recorded due to excessive activity.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityIncomplete.ResultsPending">
            <summary>
            Some data is still pending processing.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityIncomplete.NotSupported">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IActivityStat">
            <summary>
            Defines the site/item analytics for a given interval
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityStat.StartDateTime">
            <summary>
            Start date for the interval (UTC)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityStat.EndDateTime">
            <summary>
            End date for the interval (UTC)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityStat.IsTrending">
            <summary>
            Indicates whether the item is "trending."
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityStat.Create">
            <summary>
            Statistics about the create actions in this interval.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityStat.Delete">
            <summary>
            Statistics about the delete actions in this interval.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityStat.Edit">
            <summary>
            Statistics about the edit actions in this interval.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityStat.Move">
            <summary>
            Statistics about the move actions in this interval.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityStat.Access">
            <summary>
            Statistics about the access actions in this interval.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IActivityStat.IncompleteData">
            <summary>
            Indicates that the statistics in this interval are based on incomplete data.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IAttachment">
            <summary>
            A list item attachment
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IAttachment.FileName">
            <summary>
            Name of the attachment
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IAttachment.FileNameAsPath">
            <summary>
            Name of the attachment as path
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IAttachment.ServerRelativeUrl">
            <summary>
            Server relative URL of the attachment
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IAttachment.ServerRelativePath">
            <summary>
            Server relative URL of the attachment as path
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IAttachment.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IAttachment.GetContentAsync(System.Boolean)">
            <summary>
            Get the content of this attachment.
            </summary>
            <param name="streamContent">Already return the content before all bytes are read, needed for large file downloads</param>
            <returns>Stream containing the binary content of the attachment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IAttachment.GetContent(System.Boolean)">
            <summary>
            Get the content of this attachment.
            </summary>
            <param name="streamContent">Already return the content before all bytes are read, needed for large file downloads</param>
            <returns>Stream containing the binary content of the attachment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IAttachment.GetContentBytesAsync">
            <summary>
            Get the content of this attachment.
            </summary>
            <returns>The binary content of the attachment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IAttachment.GetContentBytes">
            <summary>
            Get the content of the attachment.
            </summary>
            <returns>The binary content of the attachment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IAttachment.RecycleAsync">
            <summary>
            Recycle this list attachment
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IAttachment.Recycle">
            <summary>
            Recycle this list attachment
            </summary>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IAttachmentCollection">
            <summary>
            Collection of list item attachments
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IAttachmentCollection.AddAsync(System.String,System.IO.Stream)">
            <summary>
            Adds a list item attachment
            </summary>
            <param name="name">Name of the list item attachment</param>
            <param name="content">File contents</param>
            <returns>The added list item attachment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IAttachmentCollection.Add(System.String,System.IO.Stream)">
            <summary>
            Adds a list item attachment
            </summary>
            <param name="name">Name of the list item attachment</param>
            <param name="content">File contents</param>
            <returns>The added list item attachment</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IBasePermissions">
            <summary>
            Defines the granted permission mask
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IBasePermissions.Low">
            <summary>
            Minimal granted permission mask
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IBasePermissions.High">
            <summary>
            Maximum granted permission mask
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IBasePermissions.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBasePermissions.Clear(PnP.Core.Model.SharePoint.PermissionKind)">
            <summary>
            Clears the specified permission for the current instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBasePermissions.ClearAll">
            <summary>
            Clears all permissions for the current instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBasePermissions.Has(PnP.Core.Model.SharePoint.PermissionKind)">
            <summary>
            Is this requested <see cref="T:PnP.Core.Model.SharePoint.PermissionKind"/> include?
            </summary>
            <param name="perm"><see cref="T:PnP.Core.Model.SharePoint.PermissionKind"/> permisson</param>
            <returns>True if included, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBasePermissions.HasPermissions(System.UInt32,System.UInt32)">
            <summary>
            Are the requested permission masks included?
            </summary>
            <param name="high">High end mask</param>
            <param name="low">Low end mask</param>
            <returns>True if included, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IBasePermissions.Set(PnP.Core.Model.SharePoint.PermissionKind)">
            <summary>
            Sets the specified permission for the current instance.
            </summary>
            <param name="permissionKind"></param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IComment">
            <summary>
            Public interface to define a comment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.CreatedDate">
            <summary>
            Comment creation date.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.Id">
            <summary>
            Comment id.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.IsLikedByUser">
            <summary>
            Flag that indicates whether the user in the current context liked the comment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.IsReply">
            <summary>
            Comment is a reply to another comment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.ItemId">
            <summary>
            Comment item id.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.LikeCount">
            <summary>
            Number of likes for the comment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.ListId">
            <summary>
            Comment list id.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.ParentId">
            <summary>
            Comment parent ID (0 if not a reply).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.RelativeCreatedDate">
            <summary>
            Gets a string that represents the relative value of the comment's creation date.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.ReplyCount">
            <summary>
            Number of replies to the comment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.Text">
            <summary>
            Comment text.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.Author">
            <summary>
            Comment author.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.LikedBy">
            <summary>
            List of users who have liked the comment.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.Replies">
            <summary>
            Replies to the comment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.Mentions">
            <summary>
            List of users who are at mentioned in this comment.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComment.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IComment.LikeAsync">
            <summary>
            Likes the comment for the user in the current context.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IComment.Like">
            <summary>
            Likes the comment for the user in the current context.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IComment.UnlikeAsync">
            <summary>
            Unlikes the comment for the user in the current context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IComment.Unlike">
            <summary>
            Unlikes the comment for the user in the current context.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ICommentCollection">
            <summary>
            Public interface to define a collection of comment objects.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICommentCollection.AddAsync(System.String)">
            <summary>
            Adds a comment to a list item.
            </summary>
            <param name="text">Comment to add</param>
            <returns>Newly added comment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICommentCollection.Add(System.String)">
            <summary>
            Adds a comment to a list item.
            </summary>
            <param name="text">Comment to add</param>
            <returns>Newly added comment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICommentCollection.AddBatchAsync(System.String)">
            <summary>
            Adds a comment to a list item.
            </summary>
            <param name="text">Comment to add</param>
            <returns>Newly added comment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICommentCollection.AddBatch(System.String)">
            <summary>
            Adds a comment to a list item.
            </summary>
            <param name="text">Comment to add</param>
            <returns>Newly added comment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICommentCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a comment to a list item.
            </summary>
            <param name="text">Comment to add</param>
            <param name="batch">Batch to use</param>
            <returns>Newly added comment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICommentCollection.AddBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a comment to a list item.
            </summary>
            <param name="text">Comment to add</param>
            <param name="batch">Batch to use</param>
            <returns>Newly added comment</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICommentCollection.DeleteAllAsync">
            <summary>
            Delete all comments in this collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICommentCollection.DeleteAll">
            <summary>
            Delete all comments in this collection.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICommentCollection.GetAtMentioningString(System.String,System.String,System.String)">
            <summary>
            Constructs the at mentioning string to be used when at mentioning someone in a comment or reply
            </summary>
            <param name="userName">Name of the user to show in front of the @ (e.g. @Bert) </param>
            <param name="userPrincipalName">The UPN of the user represented in the at mentioning</param>
            <param name="email">The email of the user represented in the at mentioning. If not specified the UPN is used for email as well</param>
            <returns>The formatted at mentioning html</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ICommentLikeUserEntity">
            <summary>
            Represents a single user within a comment's likedBy list in the comments API.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICommentLikeUserEntity.CreationDate">
            <summary>
            when did the user do the "like".
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICommentLikeUserEntity.Mail">
            <summary>
            The user's email.
            SPO REST property : Email
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICommentLikeUserEntity.Id">
            <summary>
            The user's numerical ID.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICommentLikeUserEntity.LoginName">
            <summary>
            The user's loginName.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICommentLikeUserEntity.Name">
            <summary>
            The user's name.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ICommentLikeUserEntityCollection">
            <summary>
            Public interface to define a collection of userEntity objects
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IComplianceTag">
            <summary>
            Public interface to define a ComplianceTag / Retention label object of SharePoint Online
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.AcceptMessagesOnlyFromSendersOrMembers">
            <summary>
            Specifies AcceptMessagesOnlyFromSendersOrMembers for the tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.AccessType">
            <summary>
            Specifies AccessType for the tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.AllowAccessFromUnmanagedDevice">
            <summary>
            Specifies AllowAccessFromUnmanagedDevice for the tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.AutoDelete">
            <summary>
            Specifies "Will we auto Delete after the Retention Period passed"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.BlockDelete">
            <summary>
            Specifies ComplianceTag BlockDelete
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.BlockEdit">
            <summary>
            Specifies ComplianceTag Enable Block edits
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.ContainsSiteLabel">
            <summary>
            Specifies whether this tag contains siteLabeling
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.DisplayName">
            <summary>
            Specifies the Display name for the tag in UI
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.EncryptionRMSTemplateId">
            <summary>
            Specifies the RMS Template id for the tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.HasRetentionAction">
            <summary>
            Specifies whether this tag has retention action
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.IsEventTag">
            <summary>
            Specifies if this is an event tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.Notes">
            <summary>
            Specifies  notes for the tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.RequireSenderAuthenticationEnabled">
            <summary>
            Specifies RequireSenderAuthenticationEnabled for the tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.ReviewerEmail">
            <summary>
            Specifies  ReviewerEmail for the tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.SharingCapabilities">
            <summary>
            Specifies SharingCapabilities for the tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.SuperLock">
            <summary>
            Specifies if this is an event tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.TagDuration">
            <summary>
            Specifies ComplianceTag TagDuration 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.TagId">
            <summary>
            Specifies ComplianceTag ID
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.TagName">
            <summary>
            Specifies ComplianceTag Name
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IComplianceTag.TagRetentionBasedOn">
            <summary>
            Specifies ComplianceTag Retention Based on Field
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IContentType">
            <summary>
            Public interface to define a Content Type object of SharePoint Online
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.StringId">
            <summary>
            The unique ID of the Content Type as string
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.Id">
            <summary>
            The unique ID of the Content Type as object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.ClientFormCustomFormatter">
            <summary>
            Gets or Sets the Client Form Custom Formatter of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.Description">
            <summary>
            Gets or Sets the description of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.DisplayFormTemplateName">
            <summary>
            Gets or Sets the Display Form template name of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.DisplayFormUrl">
            <summary>
            Gets or Sets the Display Form URL of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.DocumentTemplate">
            <summary>
            Gets or Sets the Document Template of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.DocumentTemplateUrl">
            <summary>
            Gets or Sets the DocumentTemplate URL of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.EditFormTemplateName">
            <summary>
            Gets or Sets the Edit Form template name of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.EditFormUrl">
            <summary>
            Gets or Sets the Edit Form URL of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.Group">
            <summary>
            Gets or Sets the group of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.Hidden">
            <summary>
            Gets or Sets that specifies whether the Content Type is hidden
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.JSLink">
            <summary>
            Gets or Sets the JS Link of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.MobileDisplayFormUrl">
            <summary>
            Gets or Sets the Mobile Display Form URL of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.MobileEditFormUrl">
            <summary>
            Gets or Sets the Mobile Edit Form URL of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.MobileNewFormUrl">
            <summary>
            Gets or Sets the Mobile New Form URL of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.Name">
            <summary>
            Gets or Sets the name of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.NewFormTemplateName">
            <summary>
            Gets or Sets the New Form template's name of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.NewFormUrl">
            <summary>
            Gets or Sets the New Form URL of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.ReadOnly">
            <summary>
            Gets or Sets whether the Content Type is read only
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.SchemaXml">
            <summary>
            Gets or Sets the Schema XML of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.SchemaXmlWithResourceTokens">
            <summary>
            Gets or Sets the Schema XML with resource tokens of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.Scope">
            <summary>
            Gets or Sets the scope of the Content Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.Sealed">
            <summary>
            Gets or Sets whether the Content Type is sealed
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.FieldLinks">
            <summary>
            Gets the collection of field links of the Content Type.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.Fields">
            <summary>
            Gets the collection of fields of the Content Type.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentType.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentType.PublishAsync">
            <summary>
            Publishes a content type from the hub to the sites in the SharePoint environment
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentType.Publish">
            <summary>
            Publishes a content type from the hub to the sites in the SharePoint environment
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentType.UnpublishAsync">
            <summary>
            Unpublishes a content type from the hub to the sites in the SharePoint environment
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentType.Unpublish">
            <summary>
            Unublishes a content type from the hub to the sites in the SharePoint environment
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentType.IsPublishedAsync">
            <summary>
            Checks if a content type is published from the hub to the sites in the SharePoint environment
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentType.IsPublished">
            <summary>
            Checks if a content type is published from the hub to the sites in the SharePoint environment
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentType.AsDocumentSetAsync">
            <summary>
            Returns the content type as a document set
            </summary>
            <returns>The content type as a document set</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentType.AsDocumentSet">
            <summary>
            Returns the content type as a document set
            </summary>
            <returns>The content type as a document set</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentType.AddFieldAsync(PnP.Core.Model.SharePoint.IField)">
            <summary>
            Adds a field to the content type
            </summary>
            <param name="field"><see cref="T:PnP.Core.Model.SharePoint.IField"/> to add to this content type</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentType.AddField(PnP.Core.Model.SharePoint.IField)">
            <summary>
            Adds a field to the content type
            </summary>
            <param name="field"><see cref="T:PnP.Core.Model.SharePoint.IField"/> to add to this content type</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IContentTypeCollection">
            <summary>
            Public interface to define a collection of ContentType objects of SharePoint Online
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddBatchAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Add a content type
            Check the documentation for a well formed Content Type Id:
            https://docs.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/aa543822(v=office.14)
            </summary>
            <param name="id">Id of the content type</param>
            <param name="name">Name of the content type</param>
            <param name="description">Description of the content type</param>
            <param name="group">Group of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddBatch(System.String,System.String,System.String,System.String)">
            <summary>
            Add a content type
            Check the documentation for a well formed Content Type Id:
            https://docs.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/aa543822(v=office.14)
            </summary>
            <param name="id">Id of the content type</param>
            <param name="name">Name of the content type</param>
            <param name="description">Description of the content type</param>
            <param name="group">Group of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,System.String,System.String,System.String)">
            <summary>
            Add a content type
            Check the documentation for a well formed Content Type Id:
            https://docs.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/aa543822(v=office.14)
            </summary>
            <param name="batch"><see cref="T:PnP.Core.Services.Batch"/> to use</param>
            <param name="id">Id of the content type</param>
            <param name="name">Name of the content type</param>
            <param name="description">Description of the content type</param>
            <param name="group">Group of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddBatch(PnP.Core.Services.Batch,System.String,System.String,System.String,System.String)">
            <summary>
            Add a content type
            Check the documentation for a well formed Content Type Id:
            https://docs.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/aa543822(v=office.14)
            </summary>
            <param name="batch"><see cref="T:PnP.Core.Services.Batch"/> to use</param>
            <param name="id">Id of the content type</param>
            <param name="name">Name of the content type</param>
            <param name="description">Description of the content type</param>
            <param name="group">Group of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Add a content type
            Check the documentation for a well formed Content Type Id:
            https://docs.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/aa543822(v=office.14)
            </summary>
            <param name="id">Id of the content type</param>
            <param name="name">Name of the content type</param>
            <param name="description">Description of the content type</param>
            <param name="group">Group of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.Add(System.String,System.String,System.String,System.String)">
            <summary>
            Add a content type
            Check the documentation for a well formed Content Type Id:
            https://docs.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/aa543822(v=office.14)
            </summary>
            <param name="id">Id of the content type</param>
            <param name="name">Name of the content type</param>
            <param name="description">Description of the content type</param>
            <param name="group">Group of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddAvailableContentTypeBatchAsync(System.String)">
            <summary>
            Add an existing content type
            </summary>
            <param name="id">Id of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddAvailableContentTypeBatch(System.String)">
            <summary>
            Add an existing content type
            </summary>
            <param name="id">Id of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddAvailableContentTypeBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Add an existing content type
            </summary>
            <param name="batch"><see cref="T:PnP.Core.Services.Batch"/> to use</param>
            <param name="id">Id of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddAvailableContentTypeBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Add an existing content type
            </summary>
            <param name="batch"><see cref="T:PnP.Core.Services.Batch"/> to use</param>
            <param name="id">Id of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddAvailableContentTypeAsync(System.String)">
            <summary>
            Add an existing content type
            </summary>
            <param name="id">Id of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddAvailableContentType(System.String)">
            <summary>
            Add an existing content type
            </summary>
            <param name="id">Id of the content type</param>
            <returns>The newly added content type</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddAvailableContentTypeFromHubAsync(System.String,PnP.Core.Model.SharePoint.AddContentTypeFromHubOptions)">
            <summary>
            Add a content type from the content type hub
            </summary>
            <param name="id">Id of the content type</param>
            <param name="options">Getting a content type from the hub might be async depending on current system load, optionnally provide options to control how if and how the waiting will happen</param>
            <returns>Null if the add was actually done, a <see cref="T:PnP.Core.Model.SharePoint.ILongRunningOperation"/> instance otherwise (e.g. when async and you've not chosen to wait for completion)</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddAvailableContentTypeFromHub(System.String,PnP.Core.Model.SharePoint.AddContentTypeFromHubOptions)">
            <summary>
            Add a content type from the content type hub
            </summary>
            <param name="id">Id of the content type</param>
            <param name="options">Getting a content type from the hub might be async depending on current system load, optionnally provide options to control how if and how the waiting will happen</param>
            <returns>Null if the add was actually done, a <see cref="T:PnP.Core.Model.SharePoint.ILongRunningOperation"/> instance otherwise (e.g. when async and you've not chosen to wait for completion)</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddDocumentSetAsync(System.String,System.String,System.String,System.String,PnP.Core.Model.SharePoint.DocumentSetOptions)">
            <summary>
            Creates a document set
            </summary>
            <param name="id">Id of the document set</param>
            <param name="name">Name of the document set</param>
            <param name="description">Description of the document set</param>
            <param name="group">Group of the document set</param>
            <param name="options">Options for creating the document set</param>
            <returns>The newly added document set</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeCollection.AddDocumentSet(System.String,System.String,System.String,System.String,PnP.Core.Model.SharePoint.DocumentSetOptions)">
            <summary>
            Creates a document set
            </summary>
            <param name="id">Id of the document set</param>
            <param name="name">Name of the document set</param>
            <param name="description">Description of the document set</param>
            <param name="group">Group of the document set</param>
            <param name="options">Options for creating the document set</param>
            <returns>The newly added document set</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IContentTypeHub">
            <summary>
            Public interface to define the Content Type Hub object of SharePoint Online
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentTypeHub.Fields">
            <summary>
            Collection of fields in the current content type hub
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentTypeHub.ContentTypes">
            <summary>
            Collection of content types in the content type hub
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeHub.GetSiteIdAsync">
            <summary>
            Gets the site id of the content type hub
            </summary>
            <returns>Site id of the ct hub</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IContentTypeHub.GetSiteId">
            <summary>
            Gets the site id of the content type hub
            </summary>
            <returns>Site id of the ct hub</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IContentTypeId">
            <summary>
            Public interface to define a Content Type Id object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentTypeId.StringValue">
            <summary>
            The unique ID of the Content Type as string
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IContentTypeIdCollection">
            <summary>
            Public interface to define a collection of ContentType objects of SharePoint Online
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IContentTypeInfo">
            <summary>
            The contentTypeInfo resource indicates the SharePoint content type of an item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentTypeInfo.Id">
            <summary>
            The id of the content type.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IContentTypeInfo.Name">
            <summary>
            The name of the content type.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ICopyJobProgress">
            <summary>
            Represents the progress of a migration job
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICopyJobProgress.JobState">
            <summary>
            The state of the migration job currently in progress
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICopyJobProgress.Logs">
            <summary>
            List of all the logs currently generated by the migration job
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ICopyMigrationInfo">
            <summary>
            Represents the migration information after creating a migration job
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICopyMigrationInfo.EncryptionKey">
            <summary>
            AES256CBC encryption key used to decrypt messages from job/manifest queue
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICopyMigrationInfo.JobId">
            <summary>
            Return a unique Job ID associated with this asynchronous read
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICopyMigrationInfo.JobQueueUri">
            <summary>
            URL for accessing Azure queue used for returning notification of copy and move process
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICopyMigrationInfo.SourceListItemUniqueIds">
            <summary>
            Return the source
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IDocumentSet">
            <summary>
            Public interface to define a Document Set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IDocumentSet.ContentTypeId">
            <summary>
            Content Type Id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IDocumentSet.AllowedContentTypes">
            <summary>
            Content types allowed in document set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IDocumentSet.DefaultContents">
            <summary>
            Default contents of document set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IDocumentSet.ShouldPrefixNameToFile">
            <summary>
            Indicates whether to add the name of the document set to each file name.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IDocumentSet.WelcomePageUrl">
            <summary>
            Welcome page absolute URL.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IDocumentSet.SharedColumns">
            <summary>
            Columns edited on the document set that synchronize to all documents in the set. 
            These are read-only on the documents themselves.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IDocumentSet.WelcomePageColumns">
            <summary>
            Specifies columns to show on the welcome page for the document set.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IDocumentSet.UpdateAsync(PnP.Core.Model.SharePoint.DocumentSetOptions)">
            <summary>
            Updates the document set
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IDocumentSet.Update(PnP.Core.Model.SharePoint.DocumentSetOptions)">
            <summary>
            Updates the document set
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IDocumentSetContent">
            <summary>
            Represents the default content of document set in SharePoint.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IDocumentSetContent.ContentType">
            <summary>
            Content type information of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IDocumentSetContent.FileName">
            <summary>
            Name of the file in resource folder that should be added as a default content or a template in the document set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IDocumentSetContent.FolderName">
            <summary>
            Folder name in which the file will be placed when a new document set is created in the library.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings">
            <summary>
            Public interface to define a EffectiveInformationRightsManagementSettings object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.AllowPrint">
            <summary>
            Gets whether print is allowed for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.AllowScript">
            <summary>
            Gets whether script is alloed for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.AllowWriteCopy">
            <summary>
            Gets whether writing copy is allowed for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.DisableDocumentBrowserView">
            <summary>
            Gets whether document browser view is disabled for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.DocumentAccessExpireDays">
            <summary>
            Gets the access expiry in days for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.DocumentLibraryProtectionExpireDate">
            <summary>
            Gets the document library protection expiry date.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.EnableDocumentAccessExpire">
            <summary>
            Gets access expiry for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.EnableDocumentBrowserPublishingView">
            <summary>
            Gets whether document browser publishing view is enabled for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.EnableGroupProtection">
            <summary>
            Gets whether group protection is enabled on this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.EnableLicenseCacheExpire">
            <summary>
            Gets whether license cache expiry is enabled on this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.GroupName">
            <summary>
            Gets the IRM group name of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.IrmEnabled">
            <summary>
            Gets whether IRM is enabled on this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.LicenseCacheExpireDays">
            <summary>
            Gets the license cache expiry in days for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.PolicyDescription">
            <summary>
            Gets the policy description for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.PolicyTitle">
            <summary>
            Gets the policy title for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.SettingSource">
            <summary>
            Gets the source of this setting.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEffectiveInformationRightsManagementSettings.TemplateId">
            <summary>
            Gets the IRM template id for this file.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IEventReceiverDefinition">
            <summary>
            Base class that defines general properties of an event receiver for lists and webs
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEventReceiverDefinition.ReceiverId">
            <summary>
            The identifier of the receiver for the event.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEventReceiverDefinition.ReceiverAssembly">
            <summary>
            The fully-qualified name of the assembly that contains the event receiver for the feature.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEventReceiverDefinition.ReceiverName">
            <summary>
            The name of the receiver for the event.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEventReceiverDefinition.ReceiverClass">
            <summary>
            The class name of the event receiver for the feature.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEventReceiverDefinition.SequenceNumber">
            <summary>
            The integer that represents the relative sequence of the event.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEventReceiverDefinition.Synchronization">
            <summary>
            Enumeration that specifies the synchronization state for the event receiver.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEventReceiverDefinition.EventType">
            <summary>
            The types of events that can be handled by event receivers.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEventReceiverDefinition.ReceiverUrl">
            <summary>
            The URL of the receiver for the event.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IEventReceiverDefinition.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IEventReceiverDefinitionCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IEventReceiverDefinitionCollection.AddAsync(PnP.Core.Model.SharePoint.EventReceiverOptions)">
            <summary>
            Adds a new eventreceiver to the current web or list
            </summary>
            <param name="eventReceiverOptions">Options used when creating the new eventreceiver</param>
            <returns>The newly created eventreceiver</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IEventReceiverDefinitionCollection.Add(PnP.Core.Model.SharePoint.EventReceiverOptions)">
            <summary>
            Adds a new eventreceiver to the current web or list
            </summary>
            <param name="eventReceiverOptions">Options used when creating the new eventreceiver</param>
            <returns>The newly created eventreceiver</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IEventReceiverDefinitionCollection.AddBatchAsync(PnP.Core.Model.SharePoint.EventReceiverOptions)">
            <summary>
            Adds a new eventreceiver to the current web or list
            </summary>
            <param name="eventReceiverOptions">Options used when creating the new eventreceiver</param>
            <returns>The newly created eventreceiver</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IEventReceiverDefinitionCollection.AddBatch(PnP.Core.Model.SharePoint.EventReceiverOptions)">
            <summary>
            Adds a new eventreceiver to the current web or list
            </summary>
            <param name="eventReceiverOptions">Options used when creating the new eventreceiver</param>
            <returns>The newly created eventreceiver</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IEventReceiverDefinitionCollection.AddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.EventReceiverOptions)">
            <summary>
            Adds a new eventreceiver to the current web or list
            </summary>
            <param name="batch">Batch to use</param>
            <param name="eventReceiverOptions">Options used when creating the new eventreceiver</param>
            <returns>The newly created eventreceiver</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IEventReceiverDefinitionCollection.AddBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.EventReceiverOptions)">
            <summary>
            Adds a new eventreceiver to the current web or list
            </summary>
            <param name="batch">Batch to use</param>
            <param name="eventReceiverOptions">Options used when creating the new eventreceiver</param>
            <returns>The newly created eventreceiver</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IField">
            <summary>
            Public interface to define a Field object of SharePoint Online
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.AutoIndexed">
            <summary>
            Gets or sets a Boolean value that specifies whether the field is auto-indexed
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.CanBeDeleted">
            <summary>
            Specifies whether or not the field can be deleted
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.ClientSideComponentId">
            <summary>
            Gets or Sets the client side component Id associated with the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.ClientSideComponentProperties">
            <summary>
            Gets or Sets the properties of the client side component associated with the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.ClientValidationFormula">
            <summary>
            Gets or Sets the validation formula
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.ClientValidationMessage">
            <summary>
            Gets or Sets the client validation message of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.CustomFormatter">
            <summary>
            Gets or Sets custom formatter of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.DefaultFormula">
            <summary>
            Gets or sets the default formula for a calculated field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.DefaultValue">
            <summary>
            Gets or Sets the default value of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Description">
            <summary>
            Gets or Sets the description of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Direction">
            <summary>
            Specifies the direction of the reading order for the field. A string that contains LTR if the reading order is left-to-right, 
            RTL if it is right-to-left or none
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.EnforceUniqueValues">
            <summary>
            Gets or Sets whether the field enforces unique values
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.EntityPropertyName">
            <summary>
            Gets the name of the entity property for the list item entity that uses this field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Filterable">
            <summary>
            Returns whether the field can be filtered
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.FromBaseType">
            <summary>
            Gets a Boolean value that indicates whether the field derives from a base field type.      
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Group">
            <summary>
            Gets or Sets the group of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Hidden">
            <summary>
            Specifies whether the field is displayed in the list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Id">
            <summary>
            Provides the id of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Indexed">
            <summary>
            Gets or Sets whether the field is indexed
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.IndexStatus">
            <summary>
            Describes whether a field is indexed, and whether the data
            in the index is complete
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.InternalName">
            <summary>
            Specifies the internal name of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.JSLink">
            <summary>
            Gets or sets the name of an external JS file containing any client rendering logic for fields of this type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.ReadOnlyField">
            <summary>
            Specifies whether values in the field can be modified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Required">
            <summary>
            Gets or Sets whether the field is required
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.SchemaXml">
            <summary>
            Specifies the schema that defines the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Scope">
            <summary>
            Specifies the ServerRelativeUrl of the of the web site folder in which the field belongs to
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Sealed">
            <summary>
            Specifies whether the field can be changed or deleted
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.ShowInFiltersPane">
            <summary>
            Represents status to determine whether filters pane will show the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Sortable">
            <summary>
            Returns whether the field can be sorted
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.StaticName">
            <summary>
            Specifies the static name of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Title">
            <summary>
            Gets or Sets the title of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.FieldTypeKind">
            <summary>
            Gets or Sets the field type kind of the field
            https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-server/ee540543%28v%3doffice.15%29
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.TypeAsString">
            <summary>
            Specifies the FieldTypeKind of the field as a string value
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.TypeDisplayName">
            <summary>
            Specifies the display name for FieldTypeKind of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.TypeShortDescription">
            <summary>
            Specifies the description of the FieldTypeKind of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.ValidationFormula">
            <summary>
            Specifies the formula referred by the field and gets evaluated when a list item is added or updated in the list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.ValidationMessage">
            <summary>
            Specifies the message to display if validation formula fails for the field when a list item is added or updated in the list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.MaxLength">
            <summary>
            Specifies the maximum number of characters that can be typed in the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.CurrencyLocaleId">
            <summary>
            Gets or Sets the Locale Id of the currency
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.DateFormat">
            <summary>
            Gets or Sets the Date Format 
            Valid for DateTime field, Calculated field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.DisplayFormat">
            <summary>
            Gets or Sets the display format of the field
            CAUTION: Is an integer value since according to field type, the display format enum may change
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.EditFormat">
            <summary>
            Determines whether to display the choice field as radio buttons or as a drop-down list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.ShowAsPercentage">
            <summary>
            Gets or Sets whether the field should be shown as percentage
            Valid for Number field, Calculated field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.AllowHyperlink">
            <summary>
            Gets or sets a value that specifies whether a hyperlink is allowed as a value of the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.AppendOnly">
            <summary>
            Gets or sets a value that specifies whether all changes to the value of the field are displayed in list forms.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.NumberOfLines">
            <summary>
            Gets or sets a value that specifies the number of lines of text to display for the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.RestrictedMode">
            <summary>
            Gets or sets a value that specifies whether the field supports a subset of rich formatting.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.RichText">
            <summary>
            Gets or sets a value that specifies whether the field supports rich formatting.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.UnlimitedLengthInDocumentLibrary">
            <summary>
            Gets or sets a value that specifies whether the field supports unlimited length in document libraries.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.MaximumValue">
            <summary>
            Gets or sets the maximum value of a number field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.MinimumValue">
            <summary>
            Gets or sets the minimum value of a number field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Formula">
            <summary>
            Specifies the formula that is used for calculation in the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.OutputType">
            <summary>
            Gets or sets the type of a calculated field output
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.EnableLookup">
            <summary>
            Gets or sets whether the lookup should be enabled for computed field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.FillInChoice">
            <summary>
            Gets or sets whether choice field can be filled in by user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Mappings">
            <summary>
            Gets the mappings of a choice field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Choices">
            <summary>
            Gets or sets the choices of choice field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.DateTimeCalendarType">
            <summary>
            Gets or sets the type of calendar to use of a DateTime field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.FriendlyDisplayFormat">
            <summary>
            Gets or sets the friendly format type of a DateTime field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.AllowMultipleValues">
            <summary>
            Gets or sets whether the lookup fields allows multiple values
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.DependentLookupInternalNames">
            <summary>
            Gets the dependent lookup internal names of a lookup field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.IsDependentLookup">
            <summary>
            Check whether a lookup field is a dependent lookup field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.IsRelationship">
            <summary>
            Specifies whether this Lookup field is discoverable from the List being looked up to
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.LookupField">
            <summary>
            Specifies the name of the Field used as the lookup values
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.LookupList">
            <summary>
            Specifies the id (GUID) of the List that contains the Field to use as the lookup values
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.LookupWebId">
            <summary>
            Specifies the id of the Site that contains the List which contains the
            Field used as the lookup values
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.PrimaryFieldId">
            <summary>
            Specifies the GUID of the primary lookup field if this is a dependent lookup field. Otherwise, it is empty string
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.RelationshipDeleteBehavior">
            <summary>
            Specifies the Delete Behavior of the Lookup Field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.AllowDisplay">
            <summary>
            Gets or sets whether to allow display if the user name
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Presence">
            <summary>
            Gets or sets whether to display the presence indicator of the user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.SelectionGroup">
            <summary>
            Gets or sets the Id of the group to which the users to select belong to
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.SelectionMode">
            <summary>
            Gets or sets the selection mode of the user field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.AnchorId">
            <summary>
            Gets or sets the GUID of the anchor Term object for a TaxonomyField
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.CreateValuesInEditForm">
            <summary>
            Gets or sets a Boolean value that specifies whether the new Term objects can be added to the TermSet while typing in the TaxonomyField editor control.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.IsKeyword">
            <summary>
            Gets or sets a Boolean value that indicates whether the TaxonomyField value points to the Enterprise Keywords TermSet object.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.IsPathRendered">
            <summary>
            Gets or sets a Boolean value that specifies whether the default Label objects of all the parent Term objects of a Term in the TaxonomyField object 
            will be rendered in addition to the default label of that Term.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.IsAnchorValid">
            <summary>
            Gets a Boolean value that specifies whether the Term object identified by the AnchorId property is valid.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.IsTermSetValid">
            <summary>
            Gets a Boolean value that specifies whether the TermSet object identified by the TermSetId property exists and is available for tagging.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.Open">
            <summary>
            Gets or sets a Boolean value that specifies whether the new Term objects can be added to the TermSet while typing in the TaxonomyField editor control.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.SspId">
            <summary>
            Gets or sets the GUID that identifies the TermStore object, which contains the Enterprise Keywords for the site that the current TaxonomyField belongs to.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.TermSetId">
            <summary>
            Gets or sets the GUID of the TermSet object that contains the Term objects used by the current TaxonomyField object.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.TextField">
            <summary>
            Gets or sets the GUID that identifies the hidden text field in an item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.UserCreated">
            <summary>
            Gets or sets a Boolean value that specifies whether the TaxonomyField object is linked to a customized TermSet object.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.TargetTemplate">
            <summary>
            Gets or sets the Web-relative URL of the target page that is used to construct the hyperlink on each Term object when the TaxonomyField object is rendered.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IField.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.NewFieldUrlValue(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:PnP.Core.Model.SharePoint.IFieldUrlValue"/> object
            </summary>
            <param name="url">Url value</param>
            <param name="description">Optional description value</param>
            <returns>Configured <see cref="T:PnP.Core.Model.SharePoint.IFieldUrlValue"/> object</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.NewFieldLookupValue(System.Int32)">
            <summary>
            Creates a new <see cref="T:PnP.Core.Model.SharePoint.IFieldLookupValue"/> object
            </summary>
            <param name="lookupId">Id of the lookup value</param>
            <returns>Configured <see cref="T:PnP.Core.Model.SharePoint.IFieldLookupValue"/> object</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.NewFieldUserValue(System.Int32)">
            <summary>
            Creates a new <see cref="T:PnP.Core.Model.SharePoint.IFieldUserValue"/> object
            </summary>
            <param name="userId">Id of the user</param>
            <returns>Configured <see cref="T:PnP.Core.Model.SharePoint.IFieldUserValue"/> object</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.NewFieldUserValue(PnP.Core.Model.Security.ISharePointPrincipal)">
            <summary>
            Creates a new <see cref="T:PnP.Core.Model.SharePoint.IFieldUserValue"/> object
            </summary>
            <param name="principal"><see cref="T:PnP.Core.Model.Security.ISharePointUser"/> or <see cref="T:PnP.Core.Model.Security.ISharePointGroup"/></param>
            <returns>Configured <see cref="T:PnP.Core.Model.SharePoint.IFieldUserValue"/> object</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.NewFieldTaxonomyValue(System.Guid,System.String,System.Int32)">
            <summary>
            Creates a new <see cref="T:PnP.Core.Model.SharePoint.IFieldTaxonomyValue"/> object
            </summary>
            <param name="termId">Name of the term to set</param>
            <param name="label">Label of the term to set</param>
            <param name="wssId">Optionally provide the wssId value</param>
            <returns>Configured <see cref="T:PnP.Core.Model.SharePoint.IFieldTaxonomyValue"/> object</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.NewFieldValueCollection">
            <summary>
            Creates a new collection to hold <see cref="T:PnP.Core.Model.SharePoint.IFieldValue"/> objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.NewFieldValueCollection(System.Collections.Generic.IEnumerable{PnP.Core.Model.SharePoint.IFieldValue})">
            <summary>
            Creates a new collection to hold <see cref="T:PnP.Core.Model.SharePoint.IFieldValue"/> objects
            </summary>
            <param name="fieldValues">Collection of field values to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.NewFieldValueCollection(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Guid,System.String}})">
            <summary>
            Creates a new collection to hold <see cref="T:PnP.Core.Model.SharePoint.IFieldTaxonomyValue"/> objects
            </summary>
            <param name="fieldValues">Collection of field values to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.UpdateAndPushChangesAsync">
            <summary>
            Updates the field and pushes changes down to lists consuming this field
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.UpdateAndPushChanges">
            <summary>
            Updates the field and pushes changes down to lists consuming this field
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.UpdateAndPushChangesBatchAsync">
            <summary>
            Updates the field and pushes changes down to lists consuming this field
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.UpdateAndPushChangesBatch">
            <summary>
            Updates the field and pushes changes down to lists consuming this field
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.UpdateAndPushChangesBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Updates the field and pushes changes down to lists consuming this field
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IField.UpdateAndPushChangesBatch(PnP.Core.Services.Batch)">
            <summary>
            Updates the field and pushes changes down to lists consuming this field
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldCollection">
            <summary>
            Public interface to define a collection of Field objects of SharePoint Online
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddTextBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldTextOptions)">
            <summary>
            Adds a new Text field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddTextBatch(System.String,PnP.Core.Model.SharePoint.FieldTextOptions)">
            <summary>
            Adds a new Text field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddTextBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldTextOptions)">
            <summary>
            Adds a new Text field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddTextBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldTextOptions)">
            <summary>
            Adds a new Text field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddTextAsync(System.String,PnP.Core.Model.SharePoint.FieldTextOptions)">
            <summary>
            Adds a new Text field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddText(System.String,PnP.Core.Model.SharePoint.FieldTextOptions)">
            <summary>
            Adds a new Text field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddMultilineTextBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldMultilineTextOptions)">
            <summary>
            Adds a new multiline Text field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddMultilineTextBatch(System.String,PnP.Core.Model.SharePoint.FieldMultilineTextOptions)">
            <summary>
            Adds a new multiline Text field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddMultilineTextBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldMultilineTextOptions)">
            <summary>
            Adds a new multiline Text field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddMultilineTextBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldMultilineTextOptions)">
            <summary>
            Adds a new multiline Text field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddMultilineTextAsync(System.String,PnP.Core.Model.SharePoint.FieldMultilineTextOptions)">
            <summary>
            Adds a new multiline Text field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddMultilineText(System.String,PnP.Core.Model.SharePoint.FieldMultilineTextOptions)">
            <summary>
            Adds a new multiline Text field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddNumberBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldNumberOptions)">
            <summary>
            Adds a new Number field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddNumberBatch(System.String,PnP.Core.Model.SharePoint.FieldNumberOptions)">
            <summary>
            Adds a new Number field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddNumberBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldNumberOptions)">
            <summary>
            Adds a new Number field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddNumberBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldNumberOptions)">
            <summary>
            Adds a new Number field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddNumberAsync(System.String,PnP.Core.Model.SharePoint.FieldNumberOptions)">
            <summary>
            Adds a new Number field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddNumber(System.String,PnP.Core.Model.SharePoint.FieldNumberOptions)">
            <summary>
            Adds a new Number field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddBooleanBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldBooleanOptions)">
            <summary>
            Adds a new Boolean field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddBooleanBatch(System.String,PnP.Core.Model.SharePoint.FieldBooleanOptions)">
            <summary>
            Adds a new Boolean field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddBooleanBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldBooleanOptions)">
            <summary>
            Adds a new Boolean field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddBooleanBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldBooleanOptions)">
            <summary>
            Adds a new Boolean field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddBooleanAsync(System.String,PnP.Core.Model.SharePoint.FieldBooleanOptions)">
            <summary>
            Adds a new Boolean field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddBoolean(System.String,PnP.Core.Model.SharePoint.FieldBooleanOptions)">
            <summary>
            Adds a new Boolean field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddDateTimeBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldDateTimeOptions)">
            <summary>
            Adds a new DateTime field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddDateTimeBatch(System.String,PnP.Core.Model.SharePoint.FieldDateTimeOptions)">
            <summary>
            Adds a new DateTime field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddDateTimeBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldDateTimeOptions)">
            <summary>
            Adds a new DateTime field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddDateTimeBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldDateTimeOptions)">
            <summary>
            Adds a new DateTime field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddDateTimeAsync(System.String,PnP.Core.Model.SharePoint.FieldDateTimeOptions)">
            <summary>
            Adds a new DateTime field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddDateTime(System.String,PnP.Core.Model.SharePoint.FieldDateTimeOptions)">
            <summary>
            Adds a new DateTime field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCurrencyBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldCurrencyOptions)">
            <summary>
            Adds a new Currency field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCurrencyBatch(System.String,PnP.Core.Model.SharePoint.FieldCurrencyOptions)">
            <summary>
            Adds a new Currency field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCurrencyBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldCurrencyOptions)">
            <summary>
            Adds a new Currency field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCurrencyBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldCurrencyOptions)">
            <summary>
            Adds a new Currency field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCurrencyAsync(System.String,PnP.Core.Model.SharePoint.FieldCurrencyOptions)">
            <summary>
            Adds a new Currency field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCurrency(System.String,PnP.Core.Model.SharePoint.FieldCurrencyOptions)">
            <summary>
            Adds a new Currency field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCalculatedBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldCalculatedOptions)">
            <summary>
            Adds a new Calculated field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCalculatedBatch(System.String,PnP.Core.Model.SharePoint.FieldCalculatedOptions)">
            <summary>
            Adds a new Calculated field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCalculatedBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldCalculatedOptions)">
            <summary>
            Adds a new Calculated field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCalculatedBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldCalculatedOptions)">
            <summary>
            Adds a new Calculated field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCalculatedAsync(System.String,PnP.Core.Model.SharePoint.FieldCalculatedOptions)">
            <summary>
            Adds a new Calculated field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddCalculated(System.String,PnP.Core.Model.SharePoint.FieldCalculatedOptions)">
            <summary>
            Adds a new Calculated field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceMultiBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldChoiceMultiOptions)">
            <summary>
            Adds a new MultiChoice field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceMultiBatch(System.String,PnP.Core.Model.SharePoint.FieldChoiceMultiOptions)">
            <summary>
            Adds a new MultiChoice field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceMultiBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldChoiceMultiOptions)">
            <summary>
            Adds a new MultiChoice field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceMultiBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldChoiceMultiOptions)">
            <summary>
            Adds a new MultiChoice field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceMultiAsync(System.String,PnP.Core.Model.SharePoint.FieldChoiceMultiOptions)">
            <summary>
            Adds a new MultiChoice field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceMulti(System.String,PnP.Core.Model.SharePoint.FieldChoiceMultiOptions)">
            <summary>
            Adds a new MultiChoice field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldChoiceOptions)">
            <summary>
            Adds a new Choice field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceBatch(System.String,PnP.Core.Model.SharePoint.FieldChoiceOptions)">
            <summary>
            Adds a new Choice field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldChoiceOptions)">
            <summary>
            Adds a new Choice field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldChoiceOptions)">
            <summary>
            Adds a new Choice field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoiceAsync(System.String,PnP.Core.Model.SharePoint.FieldChoiceOptions)">
            <summary>
            Adds a new Choice field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddChoice(System.String,PnP.Core.Model.SharePoint.FieldChoiceOptions)">
            <summary>
            Adds a new Choice field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddTaxonomy(System.String,PnP.Core.Model.SharePoint.FieldTaxonomyOptions)">
            <summary>
            Adds a new Taxonomy field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddTaxonomyAsync(System.String,PnP.Core.Model.SharePoint.FieldTaxonomyOptions)">
            <summary>
            Adds a new Taxonomy field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddTaxonomyMulti(System.String,PnP.Core.Model.SharePoint.FieldTaxonomyOptions)">
            <summary>
            Adds a new Taxonomy Multi field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddTaxonomyMultiAsync(System.String,PnP.Core.Model.SharePoint.FieldTaxonomyOptions)">
            <summary>
            Adds a new Taxonomy Multi field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupBatch(System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupAsync(System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookup(System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupMultiBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup Multi field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupMultiBatch(System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup Multi field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupMultiBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup Multi field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupMultiBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup Multi field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupMultiAsync(System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup Multi field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddLookupMulti(System.String,PnP.Core.Model.SharePoint.FieldLookupOptions)">
            <summary>
            Adds a new Lookup Multi field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new User field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserBatch(System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new User field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserMultiBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new User Multi field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserMultiBatch(System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new User Multi field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new User field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new User field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserMultiBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new User Multi field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserMultiBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new User Multi field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserAsync(System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new User field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUser(System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new User field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserMulti(System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new Multi User field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUserMultiAsync(System.String,PnP.Core.Model.SharePoint.FieldUserOptions)">
            <summary>
            Adds a new Multi User field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUrlBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldUrlOptions)">
            <summary>
            Adds a new URL field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUrlBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.FieldUrlOptions)">
            <summary>
            Adds a new URL field to the collection
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUrlBatchAsync(System.String,PnP.Core.Model.SharePoint.FieldUrlOptions)">
            <summary>
            Adds a new URL field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUrlBatch(System.String,PnP.Core.Model.SharePoint.FieldUrlOptions)">
            <summary>
            Adds a new URL field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUrlAsync(System.String,PnP.Core.Model.SharePoint.FieldUrlOptions)">
            <summary>
            Adds a new URL field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddUrl(System.String,PnP.Core.Model.SharePoint.FieldUrlOptions)">
            <summary>
            Adds a new URL field to the collection
            </summary>
            <param name="title">The title of the field</param>
            <param name="options">The specific options for field creation</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddFieldAsXmlBatchAsync(System.String,System.Boolean,PnP.Core.Model.SharePoint.AddFieldOptionsFlags)">
            <summary>
            Adds a new field from its XML schema
            </summary>
            <param name="schemaXml">
            A Collaborative Application Markup Language (CAML) string that contains the schema.
            It must not be a null reference(Nothing in Visual Basic). 
            It must not be empty.It must be a valid Collaborative Application Markup Language(CAML) string according to the schema specified in [MS-WSSFO2], section 2.2.9.3.3.1.
            </param>
            <param name="addToDefaultView">Specifies to add the field to the default list view.
            <c>true</c> if the field is added to the default list view; otherwise, <c>false</c>.</param>
            <param name="options">An AddFieldOptionsFlags value that specifies the field options.</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddFieldAsXmlBatch(System.String,System.Boolean,PnP.Core.Model.SharePoint.AddFieldOptionsFlags)">
            <summary>
            Adds a new field from its XML schema
            </summary>
            <param name="schemaXml">
            A Collaborative Application Markup Language (CAML) string that contains the schema.
            It must not be a null reference(Nothing in Visual Basic). 
            It must not be empty.It must be a valid Collaborative Application Markup Language(CAML) string according to the schema specified in [MS-WSSFO2], section 2.2.9.3.3.1.
            </param>
            <param name="addToDefaultView">Specifies to add the field to the default list view.
            <c>true</c> if the field is added to the default list view; otherwise, <c>false</c>.</param>
            <param name="options">An AddFieldOptionsFlags value that specifies the field options.</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddFieldAsXmlBatchAsync(PnP.Core.Services.Batch,System.String,System.Boolean,PnP.Core.Model.SharePoint.AddFieldOptionsFlags)">
            <summary>
            Adds a new field from its XML schema
            </summary>
            <param name="batch">Batch to use</param>
            <param name="schemaXml">
            A Collaborative Application Markup Language (CAML) string that contains the schema.
            It must not be a null reference(Nothing in Visual Basic). 
            It must not be empty.It must be a valid Collaborative Application Markup Language(CAML) string according to the schema specified in [MS-WSSFO2], section 2.2.9.3.3.1.
            </param>
            <param name="addToDefaultView">Specifies to add the field to the default list view.
            <c>true</c> if the field is added to the default list view; otherwise, <c>false</c>.</param>
            <param name="options">An AddFieldOptionsFlags value that specifies the field options.</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddFieldAsXmlBatch(PnP.Core.Services.Batch,System.String,System.Boolean,PnP.Core.Model.SharePoint.AddFieldOptionsFlags)">
            <summary>
            Adds a new field from its XML schema
            </summary>
            <param name="batch">Batch to use</param>
            <param name="schemaXml">
            A Collaborative Application Markup Language (CAML) string that contains the schema.
            It must not be a null reference(Nothing in Visual Basic). 
            It must not be empty.It must be a valid Collaborative Application Markup Language(CAML) string according to the schema specified in [MS-WSSFO2], section 2.2.9.3.3.1.
            </param>
            <param name="addToDefaultView">Specifies to add the field to the default list view.
            <c>true</c> if the field is added to the default list view; otherwise, <c>false</c>.</param>
            <param name="options">An AddFieldOptionsFlags value that specifies the field options.</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddFieldAsXmlAsync(System.String,System.Boolean,PnP.Core.Model.SharePoint.AddFieldOptionsFlags)">
            <summary>
            Adds a new field from its XML schema
            </summary>
            <param name="schemaXml">
            A Collaborative Application Markup Language (CAML) string that contains the schema.
            It must not be a null reference(Nothing in Visual Basic). 
            It must not be empty.It must be a valid Collaborative Application Markup Language(CAML) string according to the schema specified in [MS-WSSFO2], section 2.2.9.3.3.1.
            </param>
            <param name="addToDefaultView">Specifies to add the field to the default list view.
            <c>true</c> if the field is added to the default list view; otherwise, <c>false</c>.</param>
            <param name="options">An AddFieldOptionsFlags value that specifies the field options.</param>
            <returns>The added field</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldCollection.AddFieldAsXml(System.String,System.Boolean,PnP.Core.Model.SharePoint.AddFieldOptionsFlags)">
            <summary>
            Adds a new field from its XML schema
            </summary>
            <param name="schemaXml">
            A Collaborative Application Markup Language (CAML) string that contains the schema.
            It must not be a null reference(Nothing in Visual Basic). 
            It must not be empty.It must be a valid Collaborative Application Markup Language(CAML) string according to the schema specified in [MS-WSSFO2], section 2.2.9.3.3.1.
            </param>
            <param name="addToDefaultView">Specifies to add the field to the default list view.
            <c>true</c> if the field is added to the default list view; otherwise, <c>false</c>.</param>
            <param name="options">An AddFieldOptionsFlags value that specifies the field options.</param>
            <returns>The added field</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldLink">
            <summary>
            Public interface to define a FieldLink object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLink.DisplayName">
            <summary>
            Gets or sets the display name of the field in the field link.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLink.FieldInternalName">
            <summary>
            Gets or sets the field internal name specified in the field link.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLink.Hidden">
            <summary>
            Gets or sets a Boolean value that specifies whether the field is displayed in forms that can be edited.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLink.Id">
            <summary>
            Gets a value that specifies the GUID of the FieldLink.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLink.Name">
            <summary>
            Gets a value that specifies the name of the FieldLink.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLink.ReadOnly">
            <summary>
            Gets or sets whether the field is read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLink.Required">
            <summary>
            Gets or sets whether the field is required.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLink.ShowInDisplayForm">
            <summary>
            Gets or sets whether the field should be shown in display form.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLink.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldLinkCollection">
            <summary>
            Public interface to define a collection of FieldLink objects of SharePoint Online
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldLinkCollection.AddBatchAsync(PnP.Core.Model.SharePoint.IField)">
            <summary>
            Adds a field link via a batch
            </summary>
            <param name="field">Field to add as field link</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldLinkCollection.AddBatch(PnP.Core.Model.SharePoint.IField)">
            <summary>
            Adds a field link via a batch
            </summary>
            <param name="field">Field to add as field link</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldLinkCollection.AddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.IField)">
            <summary>
            Adds a field link via a batch
            </summary>
            <param name="batch">Batcht to add this request to</param>
            <param name="field">Field to add as field link</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldLinkCollection.AddBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.IField)">
            <summary>
            Adds a field link via a batch
            </summary>
            <param name="batch">Batcht to add this request to</param>
            <param name="field">Field to add as field link</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldLinkCollection.AddAsync(PnP.Core.Model.SharePoint.IField,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a field link for the given field
            </summary>
            <param name="field">Field to add as field link</param>
            <param name="displayName">Display name of the field</param>
            <param name="hidden">Field is hidden</param>
            <param name="required">Field is required</param>
            <param name="readOnly">Field is read only</param>
            <param name="showInDisplayForm">Show the field in the display form</param>
            <returns>added FieldLink</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldLinkCollection.Add(PnP.Core.Model.SharePoint.IField,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a field link for the given field
            </summary>
            <param name="field">Field to add as field link</param>
            <param name="displayName">Display name of the field</param>
            <param name="hidden">Field is hidden</param>
            <param name="required">Field is required</param>
            <param name="readOnly">Field is read only</param>
            <param name="showInDisplayForm">Show the field in the display form</param>
            <returns>added FieldLink</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldLocationValue">
            <summary>
            Represents a location field value
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLocationValue.DisplayName">
            <summary>
            Name identifiying this location
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLocationValue.LocationUri">
            <summary>
            Uri identifying this location
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLocationValue.Street">
            <summary>
            Streetname
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLocationValue.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLocationValue.State">
            <summary>
            State
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLocationValue.CountryOrRegion">
            <summary>
            Country of region
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLocationValue.PostalCode">
            <summary>
            Postal/zip code
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLocationValue.Latitude">
            <summary>
            Latitude of the location
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLocationValue.Longitude">
            <summary>
            Longitude of the location
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldLookupValue">
            <summary>
            Represents a lookup field value
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLookupValue.LookupId">
            <summary>
            Id of the looked-up item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLookupValue.LookupValue">
            <summary>
            Value of the key property of the looked-up item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldLookupValue.IsSecretFieldValue">
            <summary>
            Is the value a secret value?
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldStringValues">
            <summary>
            Public interface to define a FieldStringValues object
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldTaxonomyValue">
            <summary>
            Represents a taxonomy field value
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldTaxonomyValue.Label">
            <summary>
            Taxonomy label
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldTaxonomyValue.TermId">
            <summary>
            Taxonomy term id
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldUrlValue">
            <summary>
            Represents the value in a field of type Url
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldUrlValue.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldUrlValue.Description">
            <summary>
            Description of the Url
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldUserValue">
            <summary>
            Represents a user retrieved via a list item field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldUserValue.Principal">
            <summary>
            Principal describing the user or group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldUserValue.Email">
            <summary>
            Email of the user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldUserValue.Title">
            <summary>
            Title/name of the user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldUserValue.Sip">
            <summary>
            SIP address of the user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldUserValue.Picture">
            <summary>
            Profile picture url for the user
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldValue">
            <summary>
            Represents a field value object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldValue.Field">
            <summary>
            Field linked to this field value
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFieldValueCollection">
            <summary>
            Collection of 'special' field values
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFieldValueCollection.Values">
            <summary>
            The 'special' field values
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldValueCollection.RemoveLookupValue(System.Int32)">
            <summary>
            Removes <see cref="T:PnP.Core.Model.SharePoint.IFieldLookupValue"/> from the collection if found
            </summary>
            <param name="lookupId">Id of the <see cref="T:PnP.Core.Model.SharePoint.IFieldLookupValue"/> to remove</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFieldValueCollection.RemoveTaxonomyFieldValue(System.Guid)">
            <summary>
            Removes <see cref="T:PnP.Core.Model.SharePoint.IFieldTaxonomyValue"/> from the collection if found
            </summary>
            <param name="termId">Id of the <see cref="T:PnP.Core.Model.SharePoint.IFieldTaxonomyValue"/> to remove</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFile">
            <summary>
            Public interface to define a File object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.CheckInComment">
            <summary>
            Returns the comment that was specified when the document was checked into the document library
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.CheckOutType">
            <summary>
            Gets a value that specifies the type of check out associated with the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.ContentTag">
            <summary>
            Returns internal version of content, used to validate document equality for read purposes.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.CustomizedPageStatus">
            <summary>
            Gets a value that specifies the customization status of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.ListId">
            <summary>
            Gets the id of the list containing the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.ETag">
            <summary>
            Gets a value that specifies the ETag value.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.HasAlternateContentStreams">
            <summary>
            Indicates whether this file has alternate streams with content.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.IrmEnabled">
            <summary>
            Gets or sets whether Irm is enabled on the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.Length">
            <summary>
            Gets the file size of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.LinkingUri">
            <summary>
            Gets the linking URI of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.LinkingUrl">
            <summary>
            Gets the linking URL of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.MajorVersion">
            <summary>
            Gets a value that specifies the major version of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.MinorVersion">
            <summary>
            Gets a value that specifies the minor version of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.Name">
            <summary>
            Gets the name of the file including the extension.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.PageRenderType">
            <summary>
            Gets the list page render type of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.Level">
            <summary>
            Level of the file (published or draft)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.ServerRedirectedUrl">
            <summary>
            Gets the URL which opens the document in Office Web Apps.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.ServerRelativeUrl">
            <summary>
            Gets the relative URL of the file based on the URL for the server.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.SiteId">
            <summary>
            Gets the Id of the Site collection in which the file is stored.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.TimeCreated">
            <summary>
            Gets a value that specifies when the file was created.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.TimeLastModified">
            <summary>
            Gets a value that specifies when the file was last modified.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.Title">
            <summary>
            Gets a value that specifies the display name of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.UIVersion">
            <summary>
            Gets a value that specifies the implementation-specific version identifier of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.UIVersionLabel">
            <summary>
            Gets a value that specifies the implementation-specific version identifier of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.UniqueId">
            <summary>
            Gets the unique Id of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.VroomDriveID">
            <summary>
            Get the Graph Drive ID of the drive to which the file belongs.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.VroomItemID">
            <summary>
            Get the Graph DriveItem ID of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.WebId">
            <summary>
            Gets the Id of the site in which the file is stored.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.ListItemAllFields">
            <summary>
            Gets a value that specifies the list item field values for the list item corresponding to the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.EffectiveInformationRightsManagementSettings">
            <summary>
            Gets the Information Rights Management settings of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.InformationRightsManagementSettings">
            <summary>
            Gets the Information Rights Management settings of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.Properties">
            <summary>
            Gets the properties of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.VersionEvents">
            <summary>
            Gets a value that returns a collection of file version event objects that represent the version events of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.Versions">
            <summary>
            Gets a value that returns a collection of file version objects that represent the versions of the file.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.Author">
            <summary>
            Gets a value that specifies the user who added the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.CheckedOutByUser">
            <summary>
            Gets a value that returns the user who has checked out the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.LockedByUser">
            <summary>
            Gets a value that returns the user who has locked the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.ModifiedBy">
            <summary>
            Gets a value that returns the last user who has modified the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFile.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetShareLinksAsync">
            <summary>
            Gets the share links on the file item
            </summary>
            <returns>Collection of share links existing on the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetShareLinks">
            <summary>
            Gets the share links on the file item
            </summary>
            <returns>Collection of share links existing on the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.DeleteShareLinksAsync">
            <summary>
            Deletes the share links on the file item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.DeleteShareLinks">
            <summary>
            Deletes the share links on the file item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CreateAnonymousSharingLinkAsync(PnP.Core.Model.Security.AnonymousLinkOptions)">
            <summary>
            Creates an anonymous sharing link for a file
            </summary>
            <param name="anonymousLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CreateAnonymousSharingLink(PnP.Core.Model.Security.AnonymousLinkOptions)">
            <summary>
            Creates an anonymous sharing link for a file
            </summary>
            <param name="anonymousLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CreateOrganizationalSharingLinkAsync(PnP.Core.Model.Security.OrganizationalLinkOptions)">
            <summary>
            Creates an organization sharing link for a file
            </summary>
            <param name="organizationalLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CreateOrganizationalSharingLink(PnP.Core.Model.Security.OrganizationalLinkOptions)">
            <summary>
            Creates an organization sharing link for a file
            </summary>
            <param name="organizationalLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CreateUserSharingLinkAsync(PnP.Core.Model.Security.UserLinkOptions)">
            <summary>
            Creates a user sharing link for a file
            </summary>
            <param name="userLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CreateUserSharingLink(PnP.Core.Model.Security.UserLinkOptions)">
            <summary>
            Creates a user sharing link for a file
            </summary>
            <param name="userLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CreateSharingInviteAsync(PnP.Core.Model.Security.InviteOptions)">
            <summary>
            Creates a sharing invite to a specific user
            </summary>
            <param name="inviteOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CreateSharingInvite(PnP.Core.Model.Security.InviteOptions)">
            <summary>
            Creates a sharing invite to a specific user
            </summary>
            <param name="inviteOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetContentAsync(System.Boolean)">
            <summary>
            Get the content of the file.
            </summary>
            <param name="streamContent">Already return the content before all bytes are read, needed for large file downloads</param>
            <returns>Stream containing the binary content of the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetContent(System.Boolean)">
            <summary>
            Get the content of the file.
            </summary>
            <param name="streamContent">Already return the content before all bytes are read, needed for large file downloads</param>
            <returns>Stream containing the binary content of the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetContentBytesAsync">
            <summary>
            Get the content of the file.
            </summary>
            <returns>The binary content of the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetContentBytes">
            <summary>
            Get the content of the file.
            </summary>
            <returns>The binary content of the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.PublishAsync(System.String)">
            <summary>
            Publish a major version of the current file.
            <param name="comment">The comments to add on file publishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.Publish(System.String)">
            <summary>
            Publish a major version of the current file.
            <param name="comment">The comments to add on file publishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.PublishBatchAsync(System.String)">
            <summary>
            Publish a major version of the current file.
            <param name="comment">The comments to add on file publishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.PublishBatch(System.String)">
            <summary>
            Publish a major version of the current file.
            <param name="comment">The comments to add on file publishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.PublishBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Publish a major version of the current file.
            <param name="batch">The batch instance to use.</param>
            <param name="comment">The comments to add on file publishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.PublishBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Publish a major version of the current file.
            <param name="batch">The batch instance to use.</param>
            <param name="comment">The comments to add on file publishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UnpublishAsync(System.String)">
            <summary>
            Unpublish the latest major version of the current file.
            <param name="comment">The comments to add on file unpublishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.Unpublish(System.String)">
            <summary>
            Unpublish the latest major version of the current file.
            <param name="comment">The comments to add on file unpublishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UnpublishBatchAsync(System.String)">
            <summary>
            Unpublish the latest major version of the current file.
            <param name="comment">The comments to add on file unpublishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UnpublishBatch(System.String)">
            <summary>
            Unpublish the latest major version of the current file.
            <param name="comments">The comments to add on file unpublishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UnpublishBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Unpublish the latest major version of the current file.
            <param name="batch">The batch instance to use.</param>
            <param name="comment">The comments to add on file unpublishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UnpublishBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Unpublish the latest major version of the current file.
            <param name="batch">The batch instance to use.</param>
            <param name="comment">The comments to add on file unpublishing.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CheckoutAsync">
            <summary>
            Checks out the file.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.Checkout">
            <summary>
            Checks out the file.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CheckoutBatchAsync">
            <summary>
            Checks out the file.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CheckoutBatch">
            <summary>
            Checks out the file.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CheckoutBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Checks out the file.
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CheckoutBatch(PnP.Core.Services.Batch)">
            <summary>
            Checks out the file.
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UndoCheckoutAsync">
            <summary>
            Release the checked out file without saving the changes.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UndoCheckout">
            <summary>
            Release the checked out file without saving the changes.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UndoCheckoutBatchAsync">
            <summary>
            Release the checked out file without saving the changes.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UndoCheckoutBatch">
            <summary>
            Release the checked out file without saving the changes.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UndoCheckoutBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Release the checked out file without saving the changes.
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.UndoCheckoutBatch(PnP.Core.Services.Batch)">
            <summary>
            Release the checked out file without saving the changes.
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CheckinAsync(System.String,PnP.Core.Model.SharePoint.CheckinType)">
            <summary>
            Checks in the file.
            <param name="comment">The check in comment.</param>
            <param name="checkinType">The type of check in to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.Checkin(System.String,PnP.Core.Model.SharePoint.CheckinType)">
            <summary>
            Checks in the file.
            <param name="comment">The check in comment.</param>
            <param name="checkinType">The type of check in to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CheckinBatchAsync(System.String,PnP.Core.Model.SharePoint.CheckinType)">
            <summary>
            Checks in the file.
            <param name="comment">The check in comment.</param>
            <param name="checkinType">The type of check in to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CheckinBatch(System.String,PnP.Core.Model.SharePoint.CheckinType)">
            <summary>
            Checks in the file.
            <param name="comment">The check in comment.</param>
            <param name="checkinType">The type of check in to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CheckinBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.CheckinType)">
            <summary>
            Checks in the file.
            <param name="comment">The check in comment.</param>
            <param name="checkinType">The type of check in to use.</param>
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CheckinBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.CheckinType)">
            <summary>
            Checks in the file.
            <param name="comment">The check in comment.</param>
            <param name="checkinType">The type of check in to use.</param>
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ApproveAsync(System.String)">
            <summary>
            Approves the file.
            <param name="comment">The approval comment</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.Approve(System.String)">
            <summary>
            Approves the file.
            <param name="comment">The approval comment</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ApproveBatch(System.String)">
            <summary>
            Approves the file.
            <param name="comment">The approval comment</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ApproveBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Approves the file.
            <param name="comment">The approval comment</param>
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ApproveBatchAsync(System.String)">
            <summary>
            Approves the file.
            <param name="comment">The approval comment</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ApproveBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Approves the file.
            <param name="comment">The approval comment</param>
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CopyToAsync(System.String,System.Boolean,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a file to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <param name="options">Options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CopyTo(System.String,System.Boolean,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a file to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <param name="options">Options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CopyToBatchAsync(System.String,System.Boolean,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a file to the destination URL.
            </summary>
            <param name="destinationUrl">The destination  URL including file name.</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <param name="options">Options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CopyToBatch(System.String,System.Boolean,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a file to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <param name="options">Options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CopyToBatchAsync(PnP.Core.Services.Batch,System.String,System.Boolean,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a file to the destination URL.
            </summary>
            <param name="batch">The batch instance to use.</param>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <param name="options">Options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.CopyToBatch(PnP.Core.Services.Batch,System.String,System.Boolean,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a file to the destination URL.
            </summary>
            <param name="batch">The batch instance to use.</param>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <param name="options">Options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.MoveToAsync(System.String,PnP.Core.Model.SharePoint.MoveOperations,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Move a file to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="moveOperations">combinable flags to indicate the type of move operations.</param>
            <param name="options">Options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.MoveTo(System.String,PnP.Core.Model.SharePoint.MoveOperations,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Move a file to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="moveOperations">combinable flags to indicate the type of move operations.</param>
            <param name="options">Options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.MoveToBatchAsync(System.String,PnP.Core.Model.SharePoint.MoveOperations,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Move a file to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="moveOperations">combinable flags to indicate the type of move operations.</param>
            <param name="options">Options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.MoveToBatch(System.String,PnP.Core.Model.SharePoint.MoveOperations,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Move a file to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="moveOperations">combinable flags to indicate the type of move operations.</param>
            <param name="options">Options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.MoveToBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.MoveOperations,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Move a file to the destination URL.
            </summary>
            <param name="batch">The batch instance to use.</param>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="moveOperations">combinable flags to indicate the type of move operations.</param>
            <param name="options">Options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.MoveToBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.MoveOperations,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Move a file to the destination URL.
            </summary>
            <param name="batch">The batch instance to use.</param>
            <param name="destinationUrl">The destination URL including file name.</param>
            <param name="moveOperations">combinable flags to indicate the type of move operations.</param>
            <param name="options">Options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.RecycleAsync">
            <summary>
            Send the file to recycle bin.
            </summary>
            <returns>The Id of the created recycle bin item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.Recycle">
            <summary>
            Send the file to recycle bin.
            </summary>
            <returns>The Id of the created recycle bin item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.RecycleBatchAsync">
            <summary>
            Send the file to recycle bin.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.RecycleBatch">
            <summary>
            Send the file to recycle bin.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.RecycleBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Send the file to recycle bin.
            </summary>
            <param name="batch">The batch instance to use.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.RecycleBatch(PnP.Core.Services.Batch)">
            <summary>
            Send the file to recycle bin
            </summary>
            <param name="batch">The batch instance to use.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ClassifyAndExtractAsync">
            <summary>
            Requests Syntex AI models to classify and extract information from this file 
            </summary>
            <returns>Information about the classify and extract request</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ClassifyAndExtract">
            <summary>
            Requests Syntex AI models to classify and extract information from this file 
            </summary>
            <returns>Information about the classify and extract request</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ClassifyAndExtractBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Requests Syntex AI models to classify and extract information from this file 
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns>Information about the classify and extract request</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ClassifyAndExtractBatch(PnP.Core.Services.Batch)">
            <summary>
            Requests Syntex AI models to classify and extract information from this file 
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns>Information about the classify and extract request</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ClassifyAndExtractBatchAsync">
            <summary>
            Requests Syntex AI models to classify and extract information from this file 
            </summary>
            <returns>Information about the classify and extract request</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ClassifyAndExtractBatch">
            <summary>
            Requests Syntex AI models to classify and extract information from this file 
            </summary>
            <returns>Information about the classify and extract request</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetThumbnailsAsync(PnP.Core.Model.SharePoint.ThumbnailOptions)">
            <summary>
            Returns a list of thumbnails for this file
            </summary>
            <param name="options">Optionally specify which thumbnails you need</param>
            <returns>The requested thumbnails</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetThumbnails(PnP.Core.Model.SharePoint.ThumbnailOptions)">
            <summary>
            Returns a list of thumbnails for this file
            </summary>
            <param name="options">Optionally specify which thumbnails you need</param>
            <returns>The requested thumbnails</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetThumbnailsBatchAsync(PnP.Core.Model.SharePoint.ThumbnailOptions)">
            <summary>
            Returns a list of thumbnails for this file
            </summary>
            <param name="options">Optionally specify which thumbnails you need</param>
            <returns>The requested thumbnails</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetThumbnailsBatch(PnP.Core.Model.SharePoint.ThumbnailOptions)">
            <summary>
            Returns a list of thumbnails for this file
            </summary>
            <param name="options">Optionally specify which thumbnails you need</param>
            <returns>The requested thumbnails</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetThumbnailsBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.ThumbnailOptions)">
            <summary>
            Returns a list of thumbnails for this file
            </summary>
            <param name="batch">The batch instance to use.</param>
            <param name="options">Optionally specify which thumbnails you need</param>
            <returns>The requested thumbnails</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetThumbnailsBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.ThumbnailOptions)">
            <summary>
            Returns a list of thumbnails for this file
            </summary>
            <param name="batch">The batch instance to use.</param>
            <param name="options">Optionally specify which thumbnails you need</param>
            <returns>The requested thumbnails</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetAnalyticsAsync(PnP.Core.Model.SharePoint.AnalyticsOptions)">
            <summary>
            Gets file analytics
            </summary>
            <param name="options">Defines which analytics are needed</param>
            <returns>The requested analytics data</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetAnalytics(PnP.Core.Model.SharePoint.AnalyticsOptions)">
            <summary>
            Gets file analytics
            </summary>
            <param name="options">Defines which analytics are needed</param>
            <returns>The requested analytics data</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ConvertToAsync(PnP.Core.Model.SharePoint.ConvertToOptions)">
            <summary>
            Converts the file to PDF, JPG, Html or Glb
            </summary>
            <param name="options">Defines the file conversion options</param>
            <returns>Stream of the converted file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.ConvertTo(PnP.Core.Model.SharePoint.ConvertToOptions)">
            <summary>
            Converts the file to PDF, JPG, Html or Glb
            </summary>
            <param name="options">Defines the file conversion options</param>
            <returns>Stream of the converted file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetPreviewAsync(PnP.Core.Model.SharePoint.PreviewOptions)">
            <summary>
            This action allows you to obtain short-lived embeddable URLs for an item in order to render a temporary preview.
            The 'page' and 'zoom' options may not be available for all preview apps, but will be applied if the preview app supports it.
            </summary>
            <param name="options">Options for configuring the created preview URL</param>
            <returns>FilePreview object. Either getUrl, postUrl, or both might be returned depending on the current state of embed support for the specified options.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFile.GetPreview(PnP.Core.Model.SharePoint.PreviewOptions)">
            <summary>
            This action allows you to obtain short-lived embeddable URLs for an item in order to render a temporary preview.
            The 'page' and 'zoom' options may not be available for all preview apps, but will be applied if the preview app supports it.
            </summary>
            <param name="options">Options for configuring the created preview URL</param>
            <returns>FilePreview object. Either getUrl, postUrl, or both might be returned depending on the current state of embed support for the specified options.</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFileCollection">
            <summary>
            Public interface to define a collection of File objects
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFileCollection.AddAsync(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Add a file to the file collection using batching (async)
            </summary>
            <param name="name">The name of the file.</param>
            <param name="content">The content of the file.</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <returns>The added file object.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFileCollection.Add(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Add a file to the file collection using batching (sync)
            </summary>
            <param name="name">The name of the file.</param>
            <param name="content">The content of the file.</param>
            <param name="overwrite">Indicates whether the file should be overwritten if already existing.</param>
            <returns>The added file object.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFileCollection.AddTemplateFileAsync(System.String,PnP.Core.Model.SharePoint.TemplateFileType)">
            <summary>
            Adds a file based upon an out of the box template
            </summary>
            <param name="serverRelativePageName">Server relative url of the page to add</param>
            <param name="templateFileType">Type of template file to add</param>
            <returns>The added <see cref="T:PnP.Core.Model.SharePoint.IFile"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFileCollection.AddTemplateFile(System.String,PnP.Core.Model.SharePoint.TemplateFileType)">
            <summary>
            Adds a file based upon an out of the box template
            </summary>
            <param name="serverRelativePageName">Server relative url of the page to add</param>
            <param name="templateFileType">Type of template file to add</param>
            <returns>The added <see cref="T:PnP.Core.Model.SharePoint.IFile"/></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFilePreview">
            <summary>
            Response object from a Graph Preview call on an IFile object
            Either getUrl, postUrl, or both might be returned depending on the current state of embed support for the specified options.
            postParameters is a string formatted as application/x-www-form-urlencoded, and if performing a POST to the postUrl the content-type should be set accordingly. For example:
            POST https://www.onedrive.com/embed_by_post
            Content-Type: application/x-www-form-urlencoded
            param1=value&amp;param2=another%20value
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFilePreview.GetUrl">
            <summary>
            URL suitable for embedding using HTTP GET (iframes, etc.)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFilePreview.PostUrl">
            <summary>
            URL suitable for embedding using HTTP POST (form post, JS, etc.)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFilePreview.PostParameters">
            <summary>
            POST parameters to include if using postUrl
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFileVersion">
            <summary>
            Public interface to define a FileVersion object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersion.CheckInComment">
            <summary>
            Gets a value that specifies the check-in comment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersion.Created">
            <summary>
            Gets a value that specifies the creation date and time for the file version.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersion.Id">
            <summary>
            Gets the internal identifier for the file version.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersion.IsCurrentVersion">
            <summary>
            Gets a value that specifies whether the file version is the current version.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersion.Size">
            <summary>
            Gets the size of this version of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersion.Url">
            <summary>
            Gets a value that specifies the relative URL of the file version based on the URL for the site or subsite.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersion.VersionLabel">
            <summary>
            Gets a value that specifies the implementation specific identifier of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersion.CreatedBy">
            <summary>
            The <see cref="T:PnP.Core.Model.Security.ISharePointUser"/> that created this version
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersion.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFileVersion.GetContentAsync(System.Boolean)">
            <summary>
            Get the content of this file version.
            </summary>
            <param name="streamContent">Already return the content before all bytes are read, needed for large file downloads</param>
            <returns>Stream containing the binary content of the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFileVersion.GetContent(System.Boolean)">
            <summary>
            Get the content of this file version.
            </summary>
            <param name="streamContent">Already return the content before all bytes are read, needed for large file downloads</param>
            <returns>Stream containing the binary content of the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFileVersion.GetContentBytesAsync">
            <summary>
            Get the content of this file version.
            </summary>
            <returns>The binary content of the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFileVersion.GetContentBytes">
            <summary>
            Get the content of the file version.
            </summary>
            <returns>The binary content of the file</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFileVersionCollection">
            <summary>
            Collection of file versions
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFileVersionCollection.GetById(System.Int32,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFileVersion,System.Object}}[])">
            <summary>
            Method to select a file version by Id
            </summary>
            <param name="id">The Id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting file version instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFileVersionCollection.GetByIdAsync(System.Int32,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFileVersion,System.Object}}[])">
            <summary>
            Method to select a file version by Id asynchronously
            </summary>
            <param name="id">The Id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting file version instance, if any</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFileVersionEvent">
            <summary>
            Represents an event object happened on a file
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersionEvent.EventType">
            <summary>
            Type of the event
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersionEvent.Editor">
            <summary>
            Gets the editor of this version of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersionEvent.EditorEmail">
            <summary>
            Gets the e-mail address of the editor of this version of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFileVersionEvent.Time">
            <summary>
            The UTC time of this event.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFileVersionEventCollection">
            <summary>
            Collection of file version events
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFlowInstance">
            <summary>
            Describes a flow instance linked to a library/list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFlowInstance.Id">
            <summary>
            Unique id defining the flow instance
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFlowInstance.DisplayName">
            <summary>
            Display name of the flow instance
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFlowInstance.Definition">
            <summary>
            JSON definition of the flow instance
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFolder">
            <summary>
            Public interface to define a Folder object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.Exists">
            <summary>
            Gets whether the folder exists,
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.IsWOPIEnabled">
            <summary>
            Indicate whether the folder is enabled for WOPI default action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.ItemCount">
            <summary>
            Gets a value that specifies the count of items in the list folder.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.Name">
            <summary>
            Gets the name of the folder.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.ProgID">
            <summary>
            Gets a string that identifies the application in which the folder was created.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.ServerRelativeUrl">
            <summary>
            Gets the server-relative URL of the list folder.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.TimeCreated">
            <summary>
            Gets the creation time of the folder.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.TimeLastModified">
            <summary>
            Gets the last modification time of the folder.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.UniqueId">
            <summary>
            Gets the Unique Id of the folder.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.WelcomePage">
            <summary>
            Gets or sets a value that specifies folder-relative URL for the list folder welcome page.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.ContentTypeOrder">
            <summary>
            Default ordered list of content types on a list, before adjustments
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.UniqueContentTypeOrder">
            <summary>
            Ordered list of content types on a list: controls order of items in the "New" menu and "List Settings" page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.ListItemAllFields">
            <summary>
            Gets the list item field values for the list item corresponding to the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.ParentFolder">
            <summary>
            Gets the parent list folder of the folder.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.Properties">
            <summary>
            Gets the collection of all files contained in the folder.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.StorageMetrics">
            <summary>
            Get the storage metrics of the folder.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.Folders">
            <summary>
            Gets the collection of list folders contained in the list folder.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.Files">
            <summary>
            Gets the collection of files contained in the folder
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFolder.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.AddFolderAsync(System.String)">
            <summary>
            Add a folder to the current folder.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.AddFolder(System.String)">
            <summary>
            Add a folder to the current folder.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.AddFolderBatchAsync(System.String)">
            <summary>
            Add a folder to the current folder via batch.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.AddFolderBatch(System.String)">
            <summary>
            Add a folder to the current folder via batch.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.AddFolderBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Add a folder to the current folder via batch.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <param name="batch">Batch to add the reques to</param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.AddFolderBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Add a folder to the current folder via batch.
            </summary>
            <param name="name">The name of the folder to add.</param>
            <param name="batch">Batch to add the reques to </param>
            <returns>The added folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CopyToAsync(System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a folder to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CopyTo(System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a folder to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CopyToBatchAsync(System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a folder to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CopyToBatch(System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a folder to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CopyToBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a folder to the destination URL.
            </summary>
            <param name="batch">The batch instance to use.</param>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CopyToBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Copies a folder to the destination URL.
            </summary>
            <param name="batch">The batch instance to use.</param>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the copy operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.MoveToAsync(System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Moves a folder to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.MoveTo(System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Moves a folder to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.MoveToBatchAsync(System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Moves a folder to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.MoveToBatch(System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Moves a folder to the destination URL.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.MoveToBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Moves a folder to the destination URL.
            </summary>
            <param name="batch">The batch instance to use.</param>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.MoveToBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.MoveCopyOptions)">
            <summary>
            Moves a folder to the destination URL.
            </summary>
            <param name="batch">The batch instance to use.</param>
            <param name="destinationUrl">The destination URL.</param>
            <param name="options">options of the move operation.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.EnsureFolderAsync(System.String)">
            <summary>
            Ensures a (hiarchy) of folders exists on a given folder
            </summary>
            <param name="folderRelativeUrl">a (hiarchy) of folders (e.g. folderA/folderB/FolderC) </param>
            <returns>The <see cref="T:PnP.Core.Model.SharePoint.IFolder"/> representing the final folder in the hiarchy (e.g. FolderC)</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.EnsureFolder(System.String)">
            <summary>
            Ensures a (hiarchy) of folders exists on a given folder
            </summary>
            <param name="folderRelativeUrl">a (hiarchy) of folders (e.g. folderA/folderB/FolderC) </param>
            <returns>The <see cref="T:PnP.Core.Model.SharePoint.IFolder"/> representing the final folder in the hiarchy (e.g. FolderC)</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.ClassifyAndExtractOffPeakAsync">
            <summary>
            Classifies and extracts all unprocessed files in this folder and it's sub folders via the Syntex off-peak queue
            </summary>
            <returns>Information about the created classify and extract requests</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.ClassifyAndExtractOffPeak">
            <summary>
            Classifies and extracts all unprocessed files in this folder and it's sub folders via the Syntex off-peak queue
            </summary>
            <returns>Information about the created classify and extract requests</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.FindFilesAsync(System.String)">
            <summary>
            Find files in the folder, can be slow as it iterates over all the files in the folder and it's sub folders. If performance
            is key, then try using a search based solution
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of found files as type <see cref="T:PnP.Core.Model.SharePoint.IFile"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.FindFiles(System.String)">
            <summary>
            Find files in the folder, can be slow as it iterates over all the files in the folder and it's sub folders. If performance
            is key, then try using a search based solution
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of found files as type <see cref="T:PnP.Core.Model.SharePoint.IFile"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.GetShareLinksAsync">
            <summary>
            Gets the share links on the file item
            </summary>
            <returns>Collection of share links existing on the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.GetShareLinks">
            <summary>
            Gets the share links on the file item
            </summary>
            <returns>Collection of share links existing on the file</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.DeleteShareLinksAsync">
            <summary>
            Deletes the share links on the file item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.DeleteShareLinks">
            <summary>
            Deletes the share links on the file item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CreateAnonymousSharingLinkAsync(PnP.Core.Model.Security.AnonymousLinkOptions)">
            <summary>
            Creates an anonymous sharing link for a file
            </summary>
            <param name="anonymousLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CreateAnonymousSharingLink(PnP.Core.Model.Security.AnonymousLinkOptions)">
            <summary>
            Creates an anonymous sharing link for a file
            </summary>
            <param name="anonymousLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CreateOrganizationalSharingLinkAsync(PnP.Core.Model.Security.OrganizationalLinkOptions)">
            <summary>
            Creates an organization sharing link for a file
            </summary>
            <param name="organizationalLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CreateOrganizationalSharingLink(PnP.Core.Model.Security.OrganizationalLinkOptions)">
            <summary>
            Creates an organization sharing link for a file
            </summary>
            <param name="organizationalLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CreateUserSharingLinkAsync(PnP.Core.Model.Security.UserLinkOptions)">
            <summary>
            Creates a user sharing link for a file
            </summary>
            <param name="userLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CreateUserSharingLink(PnP.Core.Model.Security.UserLinkOptions)">
            <summary>
            Creates a user sharing link for a file
            </summary>
            <param name="userLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CreateSharingInviteAsync(PnP.Core.Model.Security.InviteOptions)">
            <summary>
            Creates a sharing invite to a specific user
            </summary>
            <param name="inviteOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolder.CreateSharingInvite(PnP.Core.Model.Security.InviteOptions)">
            <summary>
            Creates a sharing invite to a specific user
            </summary>
            <param name="inviteOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFolderCollection">
            <summary>
            Public interface to define a collection of Folder objects
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolderCollection.AddBatchAsync(System.String)">
            <summary>
            Add a folder
            </summary>
            <param name="name">The name of the folder to add</param>
            <returns>The newly added folder</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolderCollection.AddBatch(System.String)">
            <summary>
            Add a folder
            </summary>
            <param name="name">The name of the folder to add</param>
            <returns>The newly added folder</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolderCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Add a folder using a specific batch instance
            </summary>
            <param name="batch">The batch instance to use</param>
            <param name="name">The name of the folder to add</param>
            <returns>The newly added folder</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolderCollection.AddBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Add a folder using a specific batch instance
            </summary>
            <param name="batch">The batch instance to use</param>
            <param name="name">The name of the folder to add</param>
            <returns>The newly added folder</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolderCollection.AddAsync(System.String)">
            <summary>
            Add a folder
            </summary>
            <param name="name">The name of the folder to add</param>
            <returns>The newly added folder</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFolderCollection.Add(System.String)">
            <summary>
            Add a folder
            </summary>
            <param name="name">The name of the folder to add</param>
            <returns>The newly added folder</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFollowing">
            <summary>
            An entry point to the social following APIs
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.GetFollowersForAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IPersonProperties,System.Object}}[])">
            <summary>
            Gets the people who are following the specified user.
            </summary>
            <param name="accountName">The account name of the user, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="selectors">Specific properties to return</param>
            <returns>An instance of <see cref="T:PnP.Core.Model.SharePoint.IPersonProperties"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.GetFollowersFor(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IPersonProperties,System.Object}}[])">
            <summary>
            Gets the people who are following the specified user.
            </summary>
            <param name="accountName">The account name of the user, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="selectors">Specific properties to return</param>
            <returns>An instance of <see cref="T:PnP.Core.Model.SharePoint.IPersonProperties"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.GetPeopleFollowedByAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IPersonProperties,System.Object}}[])">
            <summary>
            Gets the people who the specified user is following.
            </summary>
            <param name="accountName">The account name of the user, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="selectors">Specific properties to return</param>
            <returns>An instance of <see cref="T:PnP.Core.Model.SharePoint.IPersonProperties"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.GetPeopleFollowedBy(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IPersonProperties,System.Object}}[])">
            <summary>
            Gets the people who the specified user is following.
            </summary>
            <param name="accountName">The account name of the user, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="selectors">Specific properties to return</param>
            <returns>An instance of <see cref="T:PnP.Core.Model.SharePoint.IPersonProperties"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.AmIFollowingAsync(System.String)">
            <summary>
            Checks whether the current user is following the specified user.
            </summary>
            <param name="accountName">The account name of the user, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <returns><i>True</i> if the current user follows the specified user</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.AmIFollowing(System.String)">
            <summary>
            Checks whether the current user is following the specified user.
            </summary>
            <param name="accountName">The account name of the user, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <returns><i>True</i> if the current user follows the specified user</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.AmIFollowedByAsync(System.String)">
            <summary>
            Checks whether the specified user is following the current user.
            </summary>
            <param name="accountName">The account name of the user, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <returns><i>True</i> if the specified user follows the current user</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.AmIFollowedBy(System.String)">
            <summary>
            Checks whether the specified user is following the current user.
            </summary>
            <param name="accountName">The account name of the user, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <returns><i>True</i> if the specified user follows the current user</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.GetFollowingInfoAsync">
            <summary>
            Gets following information for the current user
            </summary>
            <returns>An instance of <see cref="T:PnP.Core.Model.SharePoint.IFollowingInfo"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.GetFollowingInfo">
            <summary>
            Gets following information for the current user
            </summary>
            <returns>An instance of <see cref="T:PnP.Core.Model.SharePoint.IFollowingInfo"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.Follow(PnP.Core.Model.SharePoint.FollowData)">
            <summary>
            Makes the current user start following a user, document, site, or tag.
            </summary>
            <param name="data">Depending on what entity your're going to follow, can be an instance of <see cref="T:PnP.Core.Model.FollowTagData"/>, <see cref="T:PnP.Core.Model.FollowDocumentData"/>, <see cref="T:PnP.Core.Model.FollowPersonData"/> or <see cref="T:PnP.Core.Model.FollowSiteData"/></param>
            <returns>A result, the follow status or an error</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.FollowAsync(PnP.Core.Model.SharePoint.FollowData)">
            <summary>
            Makes the current user start following a user, document, site, or tag.
            </summary>
            <param name="data">Depending on what entity your're going to follow, can be an instance of <see cref="T:PnP.Core.Model.FollowTagData"/>, <see cref="T:PnP.Core.Model.FollowDocumentData"/>, <see cref="T:PnP.Core.Model.FollowPersonData"/> or <see cref="T:PnP.Core.Model.FollowSiteData"/></param>
            <returns>A result, the follow status or an error</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.StopFollowing(PnP.Core.Model.SharePoint.FollowData)">
            <summary>
            Makes the current user stop following a user, document, site, or tag.
            </summary>
            <param name="data">Depending on what entity your're going to stop following, can be an instance of <see cref="T:PnP.Core.Model.FollowTagData"/>, <see cref="T:PnP.Core.Model.FollowDocumentData"/>, <see cref="T:PnP.Core.Model.FollowPersonData"/> or <see cref="T:PnP.Core.Model.FollowSiteData"/></param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.StopFollowingAsync(PnP.Core.Model.SharePoint.FollowData)">
            <summary>
            Makes the current user stop following a user, document, site, or tag.
            </summary>
            <param name="data">Depending on what entity your're going to stop following, can be an instance of <see cref="T:PnP.Core.Model.FollowTagData"/>, <see cref="T:PnP.Core.Model.FollowDocumentData"/>, <see cref="T:PnP.Core.Model.FollowPersonData"/> or <see cref="T:PnP.Core.Model.FollowSiteData"/></param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.IsFollowed(PnP.Core.Model.SharePoint.FollowData)">
            <summary>
            Indicates whether the current user is following a specified user, document, site, or tag.
            </summary>
            <param name="data">Depending on what entity your're going to stop following, can be an instance of <see cref="T:PnP.Core.Model.FollowTagData"/>, <see cref="T:PnP.Core.Model.FollowDocumentData"/>, <see cref="T:PnP.Core.Model.FollowPersonData"/> or <see cref="T:PnP.Core.Model.FollowSiteData"/></param>
            <returns><i>True</i> if the current user is following a specified user, document, site, or tag.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.IsFollowedAsync(PnP.Core.Model.SharePoint.FollowData)">
            <summary>
            Indicates whether the current user is following a specified user, document, site, or tag.
            </summary>
            <param name="data">Depending on what entity your're going to stop following, can be an instance of <see cref="T:PnP.Core.Model.FollowTagData"/>, <see cref="T:PnP.Core.Model.FollowDocumentData"/>, <see cref="T:PnP.Core.Model.FollowPersonData"/> or <see cref="T:PnP.Core.Model.FollowSiteData"/></param>
            <returns><i>True</i> if the current user is following a specified user, document, site, or tag.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.FollowedByMe(PnP.Core.Model.SharePoint.SocialActorTypes)">
            <summary>
            Gets users, documents, sites, and tags that the current user is following.
            </summary>
            <param name="types">The actor type to include. You can include many actory using bitwise operatoins. I.e. to include document and site types use <i>SocialActorTypes.Documents | SocialActorTypes.Sites</i></param>
            <returns>A collection of <see cref="T:PnP.Core.Model.SharePoint.ISocialActor"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.FollowedByMeAsync(PnP.Core.Model.SharePoint.SocialActorTypes)">
            <summary>
            Gets users, documents, sites, and tags that the current user is following.
            </summary>
            <param name="types">The actor type to include. You can include many actory using bitwise operatoins. I.e. to include document and site types use <i>SocialActorTypes.Documents | SocialActorTypes.Sites</i></param>
            <returns>A collection of <see cref="T:PnP.Core.Model.SharePoint.ISocialActor"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.FollowedByMeCount(PnP.Core.Model.SharePoint.SocialActorTypes)">
            <summary>
            Gets the count of users, documents, sites, and tags that the current user is following.
            </summary>
            <param name="types">The actor type to include. You can include many actory using bitwise operatoins. I.e. to include document and site types use <i>SocialActorTypes.Documents | SocialActorTypes.Sites</i></param>
            <returns>The number of followed items</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.FollowedByMeCountAsync(PnP.Core.Model.SharePoint.SocialActorTypes)">
            <summary>
            Gets the count of users, documents, sites, and tags that the current user is following.
            </summary>
            <param name="types">The actor type to include. You can include many actory using bitwise operatoins. I.e. to include document and site types use <i>SocialActorTypes.Documents | SocialActorTypes.Sites</i></param>
            <returns>The number of followed items</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.MyFollowers">
            <summary>
            Gets the users who are following the current user.
            </summary>
            <returns>A collection of <see cref="T:PnP.Core.Model.SharePoint.ISocialActor"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.MyFollowersAsync">
            <summary>
            Gets the users who are following the current user.
            </summary>
            <returns>A collection of <see cref="T:PnP.Core.Model.SharePoint.ISocialActor"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.MySuggestions">
            <summary>
            Gets users who the current user might want to follow.
            </summary>
            <returns>A collection of <see cref="T:PnP.Core.Model.SharePoint.ISocialActor"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFollowing.MySuggestionsAsync">
            <summary>
            Gets users who the current user might want to follow.
            </summary>
            <returns>A collection of <see cref="T:PnP.Core.Model.SharePoint.ISocialActor"/></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFollowingInfo">
            <summary>
            Represents metadata information about your following data
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFollowingInfo.MyFollowedDocumentsUri">
            <summary>
            The Uri to see all your followed documents
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFollowingInfo.MyFollowedSitesUri">
            <summary>
            The Uri to see all your followed sites
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFollowingInfo.SocialActor">
            <summary>
            A metadata for a following entity
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings">
            <summary>
            Public interface to define a InformationRightsManagementFileSettings object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.AllowPrint">
            <summary>
            Gets or sets whether print is allowed for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.AllowScript">
            <summary>
            Gets or sets whether script is alloed for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.AllowWriteCopy">
            <summary>
            Gets or sets whether writing copy is allowed for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.DisableDocumentBrowserView">
            <summary>
            Gets or sets whether document browser view is disabled for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.DocumentAccessExpireDays">
            <summary>
            Gets or sets the access expiry in days for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.EnableDocumentAccessExpire">
            <summary>
            Gets or sets access expiry for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.EnableDocumentBrowserPublishingView">
            <summary>
            Gets or sets whether document browser publishing view is enabled for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.EnableGroupProtection">
            <summary>
            Gets or sets whether group protection is enabled on this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.EnableLicenseCacheExpire">
            <summary>
            Gets or sets whether license cache expiry is enabled on this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.GroupName">
            <summary>
            Gets or sets the IRM group name of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.IrmEnabled">
            <summary>
            Gets or sets whether IRM is enabled on this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.LicenseCacheExpireDays">
            <summary>
            Gets or sets the license cache expiry in days for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.PolicyDescription">
            <summary>
            Gets or sets the policy description for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.PolicyTitle">
            <summary>
            Gets or sets the policy title for this file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementFileSettings.TemplateId">
            <summary>
            Gets or sets the IRM template id for this file.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings">
            <summary>
            Public interface to define a InformationRightsManagementSettings object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.AllowPrint">
            <summary>
            Allow viewers to print the IRM protected Office document
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.AllowScript">
            <summary>
            Allow viewers to run script and screen reader to function on the IRM protected Office document
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.AllowWriteCopy">
            <summary>
            Allow viewers to write on a copy of the downloaded document
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.DisableDocumentBrowserView">
            <summary>
            Prevent opening documents in the browser for this Document Library
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.DocumentAccessExpireDays">
            <summary>
            After download, document access rights will expire after these number of days (1-365)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.DocumentLibraryProtectionExpireDate">
            <summary>
            Stop restricting access to the library at
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.EnableDocumentAccessExpire">
            <summary>
            Enable restricting access to the library at a given date (<see cref="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.DocumentLibraryProtectionExpireDate"/>)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.EnableDocumentBrowserPublishingView">
            <summary>
            Prevent opening documents in the browser for this Document Library
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.EnableGroupProtection">
            <summary>
            Allow group protection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.EnableLicenseCacheExpire">
            <summary>
            Enable document access rights expiration. Set the number of days via <see cref="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.DocumentAccessExpireDays"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.GroupName">
            <summary>
            Group name used for group protection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.LicenseCacheExpireDays">
            <summary>
            Users must verify their credentials using this interval (days)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.PolicyDescription">
            <summary>
            Permission policy description:
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.PolicyTitle">
            <summary>
            Permission policy title
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.TemplateId">
            <summary>
            IRM template ID (not used?)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IInformationRightsManagementSettings.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ILikedByInformation">
            <summary>
            Defines if and who liked a list item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ILikedByInformation.IsLikedByUser">
            <summary>
            Is this list item liked?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ILikedByInformation.LikeCount">
            <summary>
            Number of likes this list item got.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ILikedByInformation.LikedBy">
            <summary>
            The people that liked this list item.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IList">
            <summary>
            Public interface to define a List object of SharePoint Online
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.Id">
            <summary>
            The Unique ID of the List object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.Title">
            <summary>
            Gets or sets the list title
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.Description">
            <summary>
            Gets or sets the description of the list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.DocumentTemplate">
            <summary>
            Gets or sets a value that specifies the identifier of the document template for the new list.
            SP REST property name: DocumentTemplateUrl.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.OnQuickLaunch">
            <summary>
            Gets or sets a value that specifies whether the new list is displayed on the Quick Launch of the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.TemplateType">
            <summary>
            Gets or sets a value that specifies the list server template of the new list.
            https://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.client.listtemplatetype.aspx
            SP REST property name: BaseTemplate
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.EnableVersioning">
            <summary>
            Gets or sets whether verisioning is enabled on the list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.EnableMinorVersions">
            <summary>
            Gets or sets whether minor verisioning is enabled on the list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.DraftVersionVisibility">
            <summary>
            Gets or sets the DraftVersionVisibility for the list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.EnableModeration">
            <summary>
            Gets or sets whether moderation/content approval is enabled on the list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.RootFolder">
            <summary>
            Gets the root folder of the list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.MinorVersionLimit">
            <summary>
            Gets or sets the MinorVersionLimit  for versioning, just in case it is enabled on the list
            SP REST property name: MajorWithMinorVersionsLimit.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.MaxVersionLimit">
            <summary>
            Gets or sets the MinorVersionLimit  for verisioning, just in case it is enabled on the list
            SP REST property name: MajorVersionLimit.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.ContentTypesEnabled">
            <summary>
            Gets or sets whether content types are enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.Hidden">
            <summary>
            Gets or sets whether to hide the list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.ForceCheckout">
            <summary>
            Gets or sets whether to force checkout of documents in the library
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.EnableAttachments">
            <summary>
            Gets or sets whether attachments are enabled. Defaults to true.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.EnableFolderCreation">
            <summary>
            Gets or sets whether folder is enabled. Defaults to true.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.TemplateFeatureId">
            <summary>
            Gets or sets the Guid for TemplateFeature
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.FieldDefaults">
            <summary>
            Defines a list of default values for the Fields of the List Instance
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.NoCrawl">
            <summary>
            Defines if the current list or library has to be included in crawling, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.ListExperience">
            <summary>
            Defines the current list UI/UX experience (valid for SPO only).
            SP REST property name: ListExperienceOptions.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.DefaultDisplayFormUrl">
            <summary>
            Defines a value that specifies the location of the default display form for the list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.DefaultEditFormUrl">
            <summary>
            Defines a value that specifies the URL of the edit form to use for list items in the list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.DefaultNewFormUrl">
            <summary>
            Defines a value that specifies the location of the default new form for the list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.Direction">
            <summary>
            Defines a value that specifies the reading order of the list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.ImageUrl">
            <summary>
            Defines a value that specifies the URI for the icon of the list, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.IrmExpire">
            <summary>
            Defines if IRM Expire property, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.IrmReject">
            <summary>
            Defines the IRM Reject property, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.IrmEnabled">
            <summary>
            Defines if IRM is enabled for this list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.IsApplicationList">
            <summary>
            Defines a value that specifies a flag that a client application can use to determine whether to display the list, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.IsCatalog">
            <summary>
            Gets a bool value that indicates whether the list is a gallery, such list templates, Web Parts, or Master Pages.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.IsDefaultDocumentLibrary">
            <summary>
            Is this library the default document library of this site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.IsPrivate">
            <summary>
            Gets a bool value that indicates whether the document library is a private list with restricted permissions, such as for Solutions
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.IsSiteAssetsLibrary">
            <summary>
            Is this library the site's site asset library
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.IsSystemList">
            <summary>
            Specifies whether the list is system list that does not contain end user data and created by system account.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.ReadSecurity">
            <summary>
            Defines the Read Security property, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.WriteSecurity">
            <summary>
            Defines the Write Security property, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.ValidationFormula">
            <summary>
            Defines a value that specifies the data validation criteria for a list item, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.ValidationMessage">
            <summary>
            Defines a value that specifies the error message returned when data validation fails for a list item, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.ListItemEntityTypeFullName">
            <summary>
            The entity needed when updating list items
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.ItemCount">
            <summary>
            Number of items in the library
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.Created">
            <summary>
            Specifies the date and time that the list was created.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.LastItemDeletedDate">
            <summary>
            Specifies when an item in the list was last deleted. If no item has yet been deleted from the list
            the list creation time is returned.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.LastItemModifiedDate">
            <summary>
            Specifies when an item, field, or property of the list was last modified. If no item has been created in the list,
            the list creation time is returned.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.LastItemUserModifiedDate">
            <summary>
            Specifies when an item of the list was last modified by a non-system update. A non-system update is a change to a list item that is visible to users.
            If no item has been created in the list, the list creation time is returned.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.Items">
            <summary>
            Collection of list items in the current List object
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.ContentTypes">
            <summary>
            Collection of content types for this list
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.Fields">
            <summary>
            Collection of fields for this list
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.InformationRightsManagementSettings">
            <summary>
            Load the IRM settings of this list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.Views">
            <summary>
            Get a list of the views
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.Webhooks">
            <summary>
            Collection of list webhooks
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.EventReceivers">
            <summary>
            Event Receivers defined in this list
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IList.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.Recycle">
            <summary>
            Moves this list into the site collection recycle bin, returns the recyle bin item id
            </summary>
            <returns>Id of the recycle bin item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.RecycleAsync">
            <summary>
            Moves this list into the site collection recycle bin, returns the recyle bin item id
            </summary>
            <returns>Id of the recycle bin item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.RecycleBatch">
            <summary>
            Moves this list into the site collection recycle bin, returns the recyle bin item id
            </summary>
            <returns>Id of the recycle bin item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.RecycleBatchAsync">
            <summary>
            Moves this list into the site collection recycle bin, returns the recyle bin item id
            </summary>
            <returns>Id of the recycle bin item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.RecycleBatch(PnP.Core.Services.Batch)">
            <summary>
            Moves this list into the site collection recycle bin, returns the recyle bin item id
            </summary>
            <param name="batch">Batch to add the request to</param>
            <returns>Id of the recycle bin item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.RecycleBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Moves this list into the site collection recycle bin, returns the recyle bin item id
            </summary>
            <param name="batch">Batch to add the request to</param>
            <returns>Id of the recycle bin item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQueryAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="query">query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQuery(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="query">query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQueryAsync(PnP.Core.Model.SharePoint.CamlQueryOptions,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="queryOptions"><see cref="T:PnP.Core.Model.SharePoint.CamlQueryOptions"/> defining the query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQuery(PnP.Core.Model.SharePoint.CamlQueryOptions,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="queryOptions"><see cref="T:PnP.Core.Model.SharePoint.CamlQueryOptions"/> defining the query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQueryBatchAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="query">query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQueryBatch(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="query">query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQueryBatchAsync(PnP.Core.Model.SharePoint.CamlQueryOptions,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="queryOptions"><see cref="T:PnP.Core.Model.SharePoint.CamlQueryOptions"/> defining the query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQueryBatch(PnP.Core.Model.SharePoint.CamlQueryOptions,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="queryOptions"><see cref="T:PnP.Core.Model.SharePoint.CamlQueryOptions"/> defining the query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQueryBatchAsync(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="batch">Batch to add this request to </param>
            <param name="query">query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQueryBatch(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="batch">Batch to add this request to </param>
            <param name="query">query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQueryBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.CamlQueryOptions,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="batch">Batch to add this request to </param>
            <param name="queryOptions"><see cref="T:PnP.Core.Model.SharePoint.CamlQueryOptions"/> defining the query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadItemsByCamlQueryBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.CamlQueryOptions,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Loads list items based up on a CAML query
            </summary>
            <param name="batch">Batch to add this request to </param>
            <param name="queryOptions"><see cref="T:PnP.Core.Model.SharePoint.CamlQueryOptions"/> defining the query to execute</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadListDataAsStreamAsync(PnP.Core.Model.SharePoint.RenderListDataOptions)">
            <summary>
            Loads list items based up on a CAML query and the RenderListDataAsStream API
            </summary>
            <param name="renderOptions"><see cref="T:PnP.Core.Model.SharePoint.RenderListDataOptions"/> defining the query to execute</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadListDataAsStream(PnP.Core.Model.SharePoint.RenderListDataOptions)">
            <summary>
            Loads list items based up on a CAML query and the RenderListDataAsStream API
            </summary>
            <param name="renderOptions"><see cref="T:PnP.Core.Model.SharePoint.RenderListDataOptions"/> defining the query to execute</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadListDataAsStreamBatchAsync(PnP.Core.Model.SharePoint.RenderListDataOptions)">
            <summary>
            Loads list items based up on a CAML query and the RenderListDataAsStream API
            </summary>
            <param name="renderOptions"><see cref="T:PnP.Core.Model.SharePoint.RenderListDataOptions"/> defining the query to execute</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadListDataAsStreamBatch(PnP.Core.Model.SharePoint.RenderListDataOptions)">
            <summary>
            Loads list items based up on a CAML query and the RenderListDataAsStream API
            </summary>
            <param name="renderOptions"><see cref="T:PnP.Core.Model.SharePoint.RenderListDataOptions"/> defining the query to execute</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadListDataAsStreamBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.RenderListDataOptions)">
            <summary>
            Loads list items based up on a CAML query and the RenderListDataAsStream API
            </summary>
            <param name="batch">Batch to add this request to </param>
            <param name="renderOptions"><see cref="T:PnP.Core.Model.SharePoint.RenderListDataOptions"/> defining the query to execute</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.LoadListDataAsStreamBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.RenderListDataOptions)">
            <summary>
            Loads list items based up on a CAML query and the RenderListDataAsStream API
            </summary>
            <param name="batch">Batch to add this request to </param>
            <param name="renderOptions"><see cref="T:PnP.Core.Model.SharePoint.RenderListDataOptions"/> defining the query to execute</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetComplianceTag">
            <summary>
            Retrieves the compliance tag / retention label for this list
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetComplianceTagAsync">
            <summary>
            Retrieves the compliance tag / retention label for this list
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetComplianceTagBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Retrieves the compliance tag / retention label for this list
            </summary>
            <param name="batch">Batch to add this request to </param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetComplianceTagBatch(PnP.Core.Services.Batch)">
            <summary>
            Retrieves the compliance tag / retention label for this list
            </summary>
            <param name="batch">Batch to add this request to </param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetComplianceTagBatchAsync">
            <summary>
            Retrieves the compliance tag / retention label for this list
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetComplianceTagBatch">
            <summary>
            Retrieves the compliance tag / retention label for this list
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.SetComplianceTag(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliance tag / retention label for this list
            </summary>
            <param name="complianceTagValue">Compliance tag</param>
            <param name="blockDelete">Prevent deletion of the list (Hold)</param>
            <param name="blockEdit">Prevent editing of the list (Record)</param>
            <param name="syncToItems">If true the compliance tag is synced to the list items in this list</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.SetComplianceTagAsync(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliance tag / retention label for this list
            </summary>
            <param name="complianceTagValue">Compliance tag</param>
            <param name="blockDelete">Prevent deletion of the list (Hold)</param>
            <param name="blockEdit">Prevent editing of the list (Record)</param>
            <param name="syncToItems">If true the compliance tag is synced to the list items in this list</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.SetComplianceTagBatch(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliance tag / retention label for this list
            </summary>
            <param name="complianceTagValue">Compliance tag</param>
            <param name="blockDelete">Prevent deletion of the list (Hold)</param>
            <param name="blockEdit">Prevent editing of the list (Record)</param>
            <param name="syncToItems">If true the compliance tag is synced to the list items in this list</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.SetComplianceTagBatchAsync(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliance tag / retention label for this list
            </summary>
            <param name="complianceTagValue">Compliance tag</param>
            <param name="blockDelete">Prevent deletion of the list (Hold)</param>
            <param name="blockEdit">Prevent editing of the list (Record)</param>
            <param name="syncToItems">If true the compliance tag is synced to the list items in this list</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.SetComplianceTagBatch(PnP.Core.Services.Batch,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliance tag / retention label for this list
            </summary>
            <param name="batch">Batch to add this request to </param>
            <param name="complianceTagValue">Compliance tag</param>
            <param name="blockDelete">Prevent deletion of the list (Hold)</param>
            <param name="blockEdit">Prevent editing of the list (Record)</param>
            <param name="syncToItems">If true the compliance tag is synced to the list items in this list</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.SetComplianceTagBatchAsync(PnP.Core.Services.Batch,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliance tag / retention label for this list
            </summary>
            <param name="batch">Batch to add this request to </param>
            <param name="complianceTagValue">Compliance tag</param>
            <param name="blockDelete">Prevent deletion of the list (Hold)</param>
            <param name="blockEdit">Prevent editing of the list (Record)</param>
            <param name="syncToItems">If true the compliance tag is synced to the list items in this list</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.AddListFolder(System.String,System.String,System.String)">
            <summary>
            Adds a folder
            </summary>
            <param name="path"></param>
            <param name="parentFolder"></param>
            <param name="contentTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.AddListFolderAsync(System.String,System.String,System.String)">
            <summary>
            Adds a folder
            </summary>
            <param name="path"></param>
            <param name="parentFolder"></param>
            <param name="contentTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.AddListFolderBatch(System.String,System.String,System.String)">
            <summary>
            Adds a folder
            </summary>
            <param name="path"></param>
            <param name="parentFolder"></param>
            <param name="contentTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.AddListFolderBatchAsync(System.String,System.String,System.String)">
            <summary>
            Adds a folder
            </summary>
            <param name="path"></param>
            <param name="parentFolder"></param>
            <param name="contentTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.AddListFolderBatch(PnP.Core.Services.Batch,System.String,System.String,System.String)">
            <summary>
            Adds a folder
            </summary>
            <param name="batch">Batch to add this request to </param>
            <param name="path"></param>
            <param name="parentFolder"></param>
            <param name="contentTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.AddListFolderBatchAsync(PnP.Core.Services.Batch,System.String,System.String,System.String)">
            <summary>
            Adds a folder
            </summary>
            <param name="batch">Batch to add this request to </param>
            <param name="path"></param>
            <param name="parentFolder"></param>
            <param name="contentTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.ClassifyAndExtractAsync(System.Boolean,System.Int32)">
            <summary>
            Classifies and extracts all unprocessed files in the list
            </summary>
            <param name="force">Also classify and extract files that were processed before</param>
            <param name="pageSize">Page size used when loading the files in this library</param>
            <returns>Information about the created classify and extract requests</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.ClassifyAndExtract(System.Boolean,System.Int32)">
            <summary>
            Classifies and extracts all unprocessed files in the list
            </summary>
            <param name="force">Also classify and extract files that were processed before</param>
            <param name="pageSize">Page size used when loading the files in this library</param>
            <returns>Information about the created classify and extract requests</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.ClassifyAndExtractOffPeakAsync">
            <summary>
            Classifies and extracts all unprocessed files in the list via the Syntex off-peak queue
            </summary>
            <returns>Information about the created classify and extract requests</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.ClassifyAndExtractOffPeak">
            <summary>
            Classifies and extracts all unprocessed files in the list via the Syntex off-peak queue
            </summary>
            <returns>Information about the created classify and extract requests</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetFlowInstancesAsync">
            <summary>
            Returns a list of flow instances connected to this list
            </summary>
            <returns>List of connected flow instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetFlowInstances">
            <summary>
            Returns a list of flow instances connected to this list
            </summary>
            <returns>List of connected flow instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetFlowInstancesBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Returns a list of flow instances connected to this list
            </summary>
            <param name="batch">Batch to add this request to </param>
            <returns>List of connected flow instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetFlowInstancesBatch(PnP.Core.Services.Batch)">
            <summary>
            Returns a list of flow instances connected to this list
            </summary>
            <param name="batch">Batch to add this request to </param>
            <returns>List of connected flow instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetFlowInstancesBatchAsync">
            <summary>
            Returns a list of flow instances connected to this list
            </summary>
            <returns>List of connected flow instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetFlowInstancesBatch">
            <summary>
            Returns a list of flow instances connected to this list
            </summary>
            <returns>List of connected flow instances</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.ReorderContentTypesAsync(System.Collections.Generic.List{System.String})">
            <summary>
            Reorders the content types on the list. This controls the order of content types in the "New" menu and "List Settings" page
            </summary>
            <param name="contentTypeIdList">Ordered list of content type ids to set</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.ReorderContentTypes(System.Collections.Generic.List{System.String})">
            <summary>
            Reorders the content types on the list. This controls the order of content types in the "New" menu and "List Settings" page
            </summary>
            <param name="contentTypeIdList">Ordered list of content type ids to set</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetContentTypeOrderAsync">
            <summary>
            Returns the current list or content types in the current order
            </summary>
            <returns>Ordered list of content type id's, returns null when the list is not enabled to use content types</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.GetContentTypeOrder">
            <summary>
            Returns the current list or content types in the current order
            </summary>
            <returns>Ordered list of content type id's, returns null when the list is not enabled to use content types</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.FindFiles(System.String)">
            <summary>
            Find files in the list, can be slow as it iterates over all the files in the list. If performance
            is key, then try using a search based solution
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of found files as type <see cref="T:PnP.Core.Model.SharePoint.IFile"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IList.FindFilesAsync(System.String)">
            <summary>
            Find files in the list, can be slow as it iterates over all the files in the list. If performance
            is key, then try using a search based solution
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of found files as type <see cref="T:PnP.Core.Model.SharePoint.IFile"/></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IListCollection">
            <summary>
            Public interface to define a collection of List objects of SharePoint Online
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.AddAsync(System.String,PnP.Core.Model.SharePoint.ListTemplateType)">
            <summary>
            Adds a new list
            </summary>
            <param name="title">Title of the list</param>
            <param name="templateType">Template type</param>
            <returns>Newly added list</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.Add(System.String,PnP.Core.Model.SharePoint.ListTemplateType)">
            <summary>
            Adds a new list
            </summary>
            <param name="title">Title of the list</param>
            <param name="templateType">Template type</param>
            <returns>Newly added list</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.ListTemplateType)">
            <summary>
            Adds a new list
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">Title of the list</param>
            <param name="templateType">Template type</param>
            <returns>Newly added list</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.AddBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.SharePoint.ListTemplateType)">
            <summary>
            Adds a new list
            </summary>
            <param name="batch">Batch to use</param>
            <param name="title">Title of the list</param>
            <param name="templateType">Template type</param>
            <returns>Newly added list</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.AddBatchAsync(System.String,PnP.Core.Model.SharePoint.ListTemplateType)">
            <summary>
            Adds a new list
            </summary>
            <param name="title">Title of the list</param>
            <param name="templateType">Template type</param>
            <returns>Newly added list</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.AddBatch(System.String,PnP.Core.Model.SharePoint.ListTemplateType)">
            <summary>
            Adds a new list
            </summary>
            <param name="title">Title of the list</param>
            <param name="templateType">Template type</param>
            <returns>Newly added list</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByTitle(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Select a list by title
            </summary>
            <param name="title">The title to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByTitleAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Select a list by title
            </summary>
            <param name="title">The title to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByTitleBatchAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Select a list by title
            </summary>
            <param name="title">The title to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByTitleBatch(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Select a list by title
            </summary>
            <param name="title">The title to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByTitleBatchAsync(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Select a list by title
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="title">The title to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByTitleBatch(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Select a list by title
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="title">The title to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetById(System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by id
            </summary>
            <param name="id">The id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByIdAsync(System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by id
            </summary>
            <param name="id">The id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByIdBatch(System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by id
            </summary>
            <param name="id">The id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByIdBatchAsync(System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by id
            </summary>
            <param name="id">The id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByIdBatch(PnP.Core.Services.Batch,System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by id
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="id">The id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByIdBatchAsync(PnP.Core.Services.Batch,System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by id
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="id">The id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByServerRelativeUrl(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by server relative url
            </summary>
            <param name="serverRelativeUrl">The server relative url of the list to return</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByServerRelativeUrlAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by server relative url
            </summary>
            <param name="serverRelativeUrl">The server relative url of the list to return</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByServerRelativeUrlBatch(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by server relative url
            </summary>
            <param name="serverRelativeUrl">The server relative url of the list to return</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByServerRelativeUrlBatchAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by server relative url
            </summary>
            <param name="serverRelativeUrl">The server relative url of the list to return</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByServerRelativeUrlBatch(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by server relative url
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="serverRelativeUrl">The server relative url of the list to return</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.GetByServerRelativeUrlBatchAsync(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Method to select a list by server relative url
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="serverRelativeUrl">The server relative url of the list to return</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.EnsureSiteAssetsLibraryAsync(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Ensures there's an Asset Library in the site, if not present it will be created
            </summary>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The asset library</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.EnsureSiteAssetsLibrary(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Ensures there's an Asset Library in the site, if not present it will be created
            </summary>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The asset library</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.EnsureSiteAssetsLibraryBatchAsync(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Ensures there's an Asset Library in the site, if not present it will be created
            </summary>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The asset library</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.EnsureSiteAssetsLibraryBatch(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Ensures there's an Asset Library in the site, if not present it will be created
            </summary>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The asset library</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.EnsureSiteAssetsLibraryBatchAsync(PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Ensures there's an Asset Library in the site, if not present it will be created
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The asset library</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListCollection.EnsureSiteAssetsLibraryBatch(PnP.Core.Services.Batch,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IList,System.Object}}[])">
            <summary>
            Ensures there's an Asset Library in the site, if not present it will be created
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The asset library</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IListItem">
            <summary>
            Public interface to define a SharePoint Online list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.Id">
            <summary>
            Id of the list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.Title">
            <summary>
            Title value of the list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.CommentsDisabled">
            <summary>
            Determines if comments are disabled for the list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.CommentsDisabledScope">
            <summary>
            The scope for which comments are disabled
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.ContentType">
            <summary>
            The content type for the list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.FieldValuesAsHtml">
            <summary>
            All the field values for the list item as HTML
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.FieldValuesAsText">
            <summary>
            All the field values for the list item as text
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.FieldValuesForEdit">
            <summary>
            All the field values for the list item for editing
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.File">
            <summary>
            The file, if any, associated with the list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.FileSystemObjectType">
            <summary>
            The <seealso cref="T:PnP.Core.Model.SharePoint.FileSystemObjectType"/> for the list item, such as Folder or File
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.Folder">
            <summary>
            The folder, if any, represented by the list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.ParentList">
            <summary>
            The list for the list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.Properties">
            <summary>
            The properties of the list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.ServerRedirectedEmbedUri">
            <summary>
            The URI used to render the WOPI (Web Application Open Platform Interface) frame
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.ServerRedirectedEmbedUrl">
            <summary>
            The URL used to render the WOPI (Web Application Open Platform Interface) frame
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.UniqueId">
            <summary>
            The unique identifier of the list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.LikedByInformation">
            <summary>
            Information about the likes on this list item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.Versions">
            <summary>
            Gets a value that returns a collection of list item version objects that represent the versions of the list item
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.AttachmentFiles">
            <summary>
            Collection of attachments for this list item
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItem.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.GetDisplayNameAsync">
            <summary>
            Gets the display name of the list item.
            </summary>
            <returns>The display name or <c>null</c>.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.GetDisplayName">
            <summary>
            Gets the display name of the list item.
            </summary>
            <returns>The display name or <c>null</c>.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.IsFileAsync">
            <summary>
            Checks if this <see cref="T:PnP.Core.Model.SharePoint.IListItem"/> is a file
            </summary>
            <returns>Returns true if this <see cref="T:PnP.Core.Model.SharePoint.IListItem"/> is a file.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.IsFile">
            <summary>
            Checks if this <see cref="T:PnP.Core.Model.SharePoint.IListItem"/> is a file
            </summary>
            <returns>Returns true if this <see cref="T:PnP.Core.Model.SharePoint.IListItem"/> is a file.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.IsFolderAsync">
            <summary>
            Checks if this <see cref="T:PnP.Core.Model.SharePoint.IListItem"/> is a folder
            </summary>
            <returns>Returns true if this <see cref="T:PnP.Core.Model.SharePoint.IListItem"/> is a folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.IsFolder">
            <summary>
            Checks if this <see cref="T:PnP.Core.Model.SharePoint.IListItem"/> is a folder
            </summary>
            <returns>Returns true if this <see cref="T:PnP.Core.Model.SharePoint.IListItem"/> is a folder.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.GetParentFolderAsync">
            <summary>
            Returns the <see cref="T:PnP.Core.Model.SharePoint.IFolder"/> that holds this item
            </summary>
            <returns>The <see cref="T:PnP.Core.Model.SharePoint.IFolder"/> for this item is returned, if the item itself is a folder then the item is returned as <see cref="T:PnP.Core.Model.SharePoint.IFolder"/>.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.GetParentFolder">
            <summary>
            Returns the <see cref="T:PnP.Core.Model.SharePoint.IFolder"/> that holds this item
            </summary>
            <returns>The <see cref="T:PnP.Core.Model.SharePoint.IFolder"/> for this item is returned, if the item itself is a folder then the item is returned as <see cref="T:PnP.Core.Model.SharePoint.IFolder"/>.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SystemUpdateAsync">
            <summary>
            Performs a system update of the list item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SystemUpdate">
            <summary>
            Performs a system update of the list item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SystemUpdateBatchAsync">
            <summary>
            Performs a system update of the list item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SystemUpdateBatch">
            <summary>
            Performs a system update of the list item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SystemUpdateBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Performs a system update of the list item
            </summary>
            <param name="batch">Batch to add the systemupdate request to</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SystemUpdateBatch(PnP.Core.Services.Batch)">
            <summary>
            Performs a system update of the list item
            </summary>
            <param name="batch">Batch to add the systemupdate request to</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.UpdateOverwriteVersionAsync">
            <summary>
            Performs a UpdateOverwriteVersion of the list item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.UpdateOverwriteVersion">
            <summary>
            Performs a UpdateOverwriteVersion of the list item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.UpdateOverwriteVersionBatchAsync">
            <summary>
            Performs a UpdateOverwriteVersion of the list item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.UpdateOverwriteVersionBatch">
            <summary>
            Performs a UpdateOverwriteVersion of the list item
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.UpdateOverwriteVersionBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Performs a UpdateOverwriteVersion of the list item
            </summary>
            <param name="batch">Batch to add the UpdateOverwriteVersion request to</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.UpdateOverwriteVersionBatch(PnP.Core.Services.Batch)">
            <summary>
            Performs a UpdateOverwriteVersion of the list item
            </summary>
            <param name="batch">Batch to add the UpdateOverwriteVersion request to</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.AreCommentsDisabledAsync">
            <summary>
            Are comments disabled for this <see cref="T:PnP.Core.Model.SharePoint.IListItem"/>?
            </summary>
            <returns>True if disabled, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.AreCommentsDisabled">
            <summary>
            Are comments disabled for this <see cref="T:PnP.Core.Model.SharePoint.IListItem"/>?
            </summary>
            <returns>True if disabled, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SetCommentsDisabledAsync(System.Boolean)">
            <summary>
            Enable/Disable comments for this list item
            </summary>
            <param name="commentsDisabled">Do comments need to enabled or disabled</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SetCommentsDisabled(System.Boolean)">
            <summary>
            Enable/Disable comments for this list item
            </summary>
            <param name="commentsDisabled">Do comments need to enabled or disabled</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SetComplianceTag(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliancetag / retention label for this list item
            </summary>
            <param name="complianceTag">The tag/label to set for this list item</param>
            <param name="isTagPolicyHold">Whether the tag is hold</param>
            <param name="isTagPolicyRecord">Whether the tag is record</param>
            <param name="isEventBasedTag">Whether the tag is Event based, this is not used</param>
            <param name="isTagSuperLock">Whether the tag is Sec 17 tag,no allow change even for site admin</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SetComplianceTagAsync(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliancetag / retention label for this list item
            </summary>
            <param name="complianceTag">The tag/label to set for this list item</param>
            <param name="isTagPolicyHold">Whether the tag is hold</param>
            <param name="isTagPolicyRecord">Whether the tag is record</param>
            <param name="isEventBasedTag">Whether the tag is Event based, this is not used</param>
            <param name="isTagSuperLock">Whether the tag is Sec 17 tag,no allow change even for site admin</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SetComplianceTagBatch(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliancetag / retention label for this list item
            </summary>
            <param name="complianceTag">The tag/label to set for this list item</param>
            <param name="isTagPolicyHold">Whether the tag is hold</param>
            <param name="isTagPolicyRecord">Whether the tag is record</param>
            <param name="isEventBasedTag">Whether the tag is Event based, this is not used</param>
            <param name="isTagSuperLock">Whether the tag is Sec 17 tag,no allow change even for site admin</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SetComplianceTagBatchAsync(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliancetag / retention label for this list item
            </summary>
            <param name="complianceTag">The tag/label to set for this list item</param>
            <param name="isTagPolicyHold">Whether the tag is hold</param>
            <param name="isTagPolicyRecord">Whether the tag is record</param>
            <param name="isEventBasedTag">Whether the tag is Event based, this is not used</param>
            <param name="isTagSuperLock">Whether the tag is Sec 17 tag,no allow change even for site admin</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SetComplianceTagBatch(PnP.Core.Services.Batch,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliancetag / retention label for this list item
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="complianceTag">The tag/label to set for this list item</param>
            <param name="isTagPolicyHold">Whether the tag is hold</param>
            <param name="isTagPolicyRecord">Whether the tag is record</param>
            <param name="isEventBasedTag">Whether the tag is Event based, this is not used</param>
            <param name="isTagSuperLock">Whether the tag is Sec 17 tag,no allow change even for site admin</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.SetComplianceTagBatchAsync(PnP.Core.Services.Batch,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a compliancetag / retention label for this list item
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="complianceTag">The tag/label to set for this list item</param>
            <param name="isTagPolicyHold">Whether the tag is hold</param>
            <param name="isTagPolicyRecord">Whether the tag is record</param>
            <param name="isEventBasedTag">Whether the tag is Event based, this is not used</param>
            <param name="isTagSuperLock">Whether the tag is Sec 17 tag,no allow change even for site admin</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.NewFieldUrlValue(PnP.Core.Model.SharePoint.IField,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:PnP.Core.Model.SharePoint.IFieldUrlValue"/> object
            </summary>
            <param name="fieldToUpdate"><see cref="T:PnP.Core.Model.SharePoint.IField"/> representing the field to set</param>
            <param name="url">Url value</param>
            <param name="description">Optional description value</param>
            <returns>Configured <see cref="T:PnP.Core.Model.SharePoint.IFieldUrlValue"/> object</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.NewFieldLookupValue(PnP.Core.Model.SharePoint.IField,System.Int32)">
            <summary>
            Creates a new <see cref="T:PnP.Core.Model.SharePoint.IFieldLookupValue"/> object
            </summary>
            <param name="fieldToUpdate"><see cref="T:PnP.Core.Model.SharePoint.IField"/> representing the field to set</param>
            <param name="lookupId">Id of the lookup value</param>
            <returns>Configured <see cref="T:PnP.Core.Model.SharePoint.IFieldLookupValue"/> object</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.NewFieldUserValue(PnP.Core.Model.SharePoint.IField,System.Int32)">
            <summary>
            Creates a new <see cref="T:PnP.Core.Model.SharePoint.IFieldUserValue"/> object
            </summary>
            <param name="fieldToUpdate"><see cref="T:PnP.Core.Model.SharePoint.IField"/> representing the field to set</param>
            <param name="userId">Id of the user</param>
            <returns>Configured <see cref="T:PnP.Core.Model.SharePoint.IFieldUserValue"/> object</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.NewFieldUserValue(PnP.Core.Model.SharePoint.IField,PnP.Core.Model.Security.ISharePointPrincipal)">
            <summary>
            Creates a new <see cref="T:PnP.Core.Model.SharePoint.IFieldUserValue"/> object
            </summary>
            <param name="fieldToUpdate"><see cref="T:PnP.Core.Model.SharePoint.IField"/> representing the field to set</param>
            <param name="principal"><see cref="T:PnP.Core.Model.Security.ISharePointUser"/> or <see cref="T:PnP.Core.Model.Security.ISharePointGroup"/></param>
            <returns>Configured <see cref="T:PnP.Core.Model.SharePoint.IFieldUserValue"/> object</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.NewFieldTaxonomyValue(PnP.Core.Model.SharePoint.IField,System.Guid,System.String,System.Int32)">
            <summary>
            Creates a new <see cref="T:PnP.Core.Model.SharePoint.IFieldTaxonomyValue"/> object
            </summary>
            <param name="fieldToUpdate"><see cref="T:PnP.Core.Model.SharePoint.IField"/> representing the field to set</param>
            <param name="termId">Name of the term to set</param>
            <param name="label">Label of the term to set</param>
            <param name="wssId">Optionally provide the wssId value</param>
            <returns>Configured <see cref="T:PnP.Core.Model.SharePoint.IFieldTaxonomyValue"/> object</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.NewFieldValueCollection(PnP.Core.Model.SharePoint.IField)">
            <summary>
            Creates a new collection to hold <see cref="T:PnP.Core.Model.SharePoint.IFieldValue"/> objects
            </summary>
            <param name="fieldToUpdate"><see cref="T:PnP.Core.Model.SharePoint.IField"/> representing the field to set</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.Recycle">
            <summary>
            Recycle the current item
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.RecycleAsync">
            <summary>
            Recycle the current item
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.RecycleBatch">
            <summary>
            Recycle the current item
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.RecycleBatchAsync">
            <summary>
            Recycle the current item
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.RecycleBatch(PnP.Core.Services.Batch)">
            <summary>
            Recycle the current item
            </summary>
            <param name="batch">Batch to add the request to</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.RecycleBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Recycle the current item
            </summary>
            <param name="batch">Batch to add the request to</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.GetCommentsAsync(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IComment,System.Object}}[])">
            <summary>
            Get list item comments
            </summary>
            <param name="selectors">The expressions declaring the fields to select</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.GetComments(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IComment,System.Object}}[])">
            <summary>
            Get list item comments
            </summary>
            <param name="selectors">The expressions declaring the fields to select</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.CreateAnonymousSharingLinkAsync(PnP.Core.Model.Security.AnonymousLinkOptions)">
            <summary>
            Creates an anonymous sharing link for a list item
            </summary>
            <param name="anonymousLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.CreateAnonymousSharingLink(PnP.Core.Model.Security.AnonymousLinkOptions)">
            <summary>
            Creates an anonymous sharing link for a list item
            </summary>
            <param name="anonymousLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.CreateOrganizationalSharingLinkAsync(PnP.Core.Model.Security.OrganizationalLinkOptions)">
            <summary>
            Creates an organization sharing link for a list item
            </summary>
            <param name="organizationalLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.CreateOrganizationalSharingLink(PnP.Core.Model.Security.OrganizationalLinkOptions)">
            <summary>
            Creates an organization sharing link for a list item
            </summary>
            <param name="organizationalLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.CreateUserSharingLinkAsync(PnP.Core.Model.Security.UserLinkOptions)">
            <summary>
            Creates a user sharing link for a list item
            </summary>
            <param name="userLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItem.CreateUserSharingLink(PnP.Core.Model.Security.UserLinkOptions)">
            <summary>
            Creates a user sharing link for a list item
            </summary>
            <param name="userLinkOptions"></param>
            <returns>Permission that has been created</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IListItemCollection">
            <summary>
            Public interface to define a collection of ListItem objects of SharePoint Online
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.AddAsync(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,PnP.Core.Model.SharePoint.FileSystemObjectType)">
            <summary>
            Adds a new list item
            </summary>
            <param name="values">Values to add to list item</param>
            <param name="folderPath">Optional folder path to add the item to.</param>
            <param name="underlyingObjectType">Type of object to create. Defaults to File/ListItem</param>
            <returns>Newly added list item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.Add(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,PnP.Core.Model.SharePoint.FileSystemObjectType)">
            <summary>
            Adds a new list item
            </summary>
            <param name="values">Values to add to list item</param>
            <param name="folderPath">Optional folder path to add the item to.</param>
            <param name="underlyingObjectType">Type of object to create. Defaults to File/ListItem</param>
            <returns>Newly added list item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.AddBatchAsync(PnP.Core.Services.Batch,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,PnP.Core.Model.SharePoint.FileSystemObjectType)">
            <summary>
            Adds a new list item
            </summary>
            <param name="batch">Batch to use</param>
            <param name="values">Values to add to list item</param>
            <param name="folderPath">Optional folder path to add the item to.</param>
            <param name="underlyingObjectType">Type of object to create. Defaults to File/ListItem</param>
            <returns>Newly added list item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.AddBatch(PnP.Core.Services.Batch,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,PnP.Core.Model.SharePoint.FileSystemObjectType)">
            <summary>
            Adds a new list item
            </summary>
            <param name="batch">Batch to use</param>
            <param name="values">Values to add to list item</param>
            <param name="folderPath">Optional folder path to add the item to.</param>
            <param name="underlyingObjectType">Type of object to create. Defaults to File/ListItem</param>
            <returns>Newly added list item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.AddBatchAsync(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,PnP.Core.Model.SharePoint.FileSystemObjectType)">
            <summary>
            Adds a new list item
            </summary>
            <param name="values">Values to add to list item</param>
            <param name="folderPath">Optional folder path to add the item to.</param>
            <param name="underlyingObjectType">Type of object to create. Defaults to File/ListItem</param>
            <returns>Newly added list item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.AddBatch(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,PnP.Core.Model.SharePoint.FileSystemObjectType)">
            <summary>
            Adds a new list item
            </summary>
            <param name="values">Values to add to list item</param>
            <param name="folderPath">Optional folder path to add the item to.</param>
            <param name="underlyingObjectType">Type of object to create. Defaults to File/ListItem</param>
            <returns>Newly added list item</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.Contains(System.Int32)">
            <summary>
            Checks if the collection contains a listitem with a given id
            </summary>
            <param name="id">Id to check for</param>
            <returns>True if found, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.GetById(System.Int32,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Method to select a list item by Id
            </summary>
            <param name="id">The Id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list item instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.GetByIdAsync(System.Int32,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItem,System.Object}}[])">
            <summary>
            Method to select a list item by Id asynchronously
            </summary>
            <param name="id">The Id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list item instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.RecycleById(System.Int32)">
            <summary>
            Recycle the list item
            </summary>
            <param name="id">Id of the item to recycle</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.RecycleByIdAsync(System.Int32)">
            <summary>
            Recycle the list item
            </summary>
            <param name="id">Id of the item to recycle</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.RecycleByIdBatch(System.Int32)">
            <summary>
            Recycle the list item
            </summary>
            <param name="id">Id of the item to recycle</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.RecycleByIdBatchAsync(System.Int32)">
            <summary>
            Recycle the list item
            </summary>
            <param name="id">Id of the item to recycle</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.RecycleByIdBatch(PnP.Core.Services.Batch,System.Int32)">
            <summary>
            Recycle the list item
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="id">Id of the item to recycle</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemCollection.RecycleByIdBatchAsync(PnP.Core.Services.Batch,System.Int32)">
            <summary>
            Recycle the list item
            </summary>
            <param name="batch">Batch to add the request to</param>
            <param name="id">Id of the item to recycle</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IListItemVersion">
            <summary>
            Public interface to define a ListItemVersion object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItemVersion.Created">
            <summary>
            Gets a value that specifies the creation date and time for the list item version.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItemVersion.Id">
            <summary>
            Gets the internal identifier for the list item version.
            SP REST property name: VersionId.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItemVersion.IsCurrentVersion">
            <summary>
            Gets a value that specifies whether the list item version is the current version.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItemVersion.VersionLabel">
            <summary>
            Gets a value that specifies the implementation specific identifier of the file.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItemVersion.CreatedBy">
            <summary>
            The <see cref="T:PnP.Core.Model.Security.ISharePointUser"/> that created this version.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItemVersion.Fields">
            <summary>
            Fields of this list item version.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItemVersion.FileVersion">
            <summary>
            <see cref="T:PnP.Core.Model.SharePoint.IFileVersion"/> of this list item version
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListItemVersion.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IListItemVersionCollection">
            <summary>
            Collection of file versions
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemVersionCollection.GetById(System.Int32,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItemVersion,System.Object}}[])">
            <summary>
            Method to select a list item version by Id
            </summary>
            <param name="id">The Id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list item version instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListItemVersionCollection.GetByIdAsync(System.Int32,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IListItemVersion,System.Object}}[])">
            <summary>
            Method to select a list item version by Id asynchronously
            </summary>
            <param name="id">The Id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting list item version instance, if any</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IListSubscription">
            <summary>
            Defines a structure for a webhook subscription
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListSubscription.Id">
            <summary>
            Subscription unique Id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListSubscription.ClientState">
            <summary>
            A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListSubscription.ExpirationDateTime">
            <summary>
            Expiration date for the webhook
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListSubscription.NotificationUrl">
            <summary>
            A url, where the notification request will be sent
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IListSubscription.Resource">
            <summary>
            Resource identifier, usually a list id
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IListSubscriptionCollection">
            <summary>
            A collection of list webhook subscriptions
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.AddAsync(System.String,System.DateTime,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="expirationDate">A date, when the subscription will expire. Expiration date should not be greater than 6 months period.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.Add(System.String,System.DateTime,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="expirationDate">A date, when the subscription will expire. Expiration date should not be greater than 6 months period.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.AddBatchAsync(System.String,System.DateTime,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="expirationDate">A date, when the subscription will expire. Expiration date should not be greater than 6 months period.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.AddBatch(System.String,System.DateTime,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="expirationDate">A date, when the subscription will expire. Expiration date should not be greater than 6 months period.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,System.DateTime,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="batch">Batch to use</param>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="expirationDate">A date, when the subscription will expire. Expiration date should not be greater than 6 months period.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.AddBatch(PnP.Core.Services.Batch,System.String,System.DateTime,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="batch">Batch to use</param>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="expirationDate">A date, when the subscription will expire. Expiration date should not be greater than 6 months period.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.AddAsync(System.String,System.Int32,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="validityInMonths">How many months the subscription should stay valid. The maximum is 6 months.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.Add(System.String,System.Int32,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="validityInMonths">How many months the subscription should stay valid. The maximum is 6 months.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.AddBatchAsync(System.String,System.Int32,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="validityInMonths">How many months the subscription should stay valid. The maximum is 6 months.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.AddBatch(System.String,System.Int32,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="validityInMonths">How many months the subscription should stay valid. The maximum is 6 months.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,System.Int32,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="batch">Batch to use</param>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="validityInMonths">How many months the subscription should stay valid. The maximum is 6 months.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.AddBatch(PnP.Core.Services.Batch,System.String,System.Int32,System.String)">
            <summary>
            Adds a new webhook subscription
            </summary>
            <param name="batch">Batch to use</param>
            <param name="notificationUrl">A url, where the notification request will be sent</param>
            <param name="clientState">A string, which represents client information. You can use this for validating notifications, tagging different subscriptions, or other reasons.</param>
            <param name="validityInMonths">How many months the subscription should stay valid. The maximum is 6 months.</param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.GetByIdAsync(System.Guid)">
            <summary>
            Gets webhook subscription
            </summary>
            <param name="subscriptionId">Subscription's Id, a <see cref="T:System.Guid"/></param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IListSubscriptionCollection.GetById(System.Guid)">
            <summary>
            Gets webhook subscription
            </summary>
            <param name="subscriptionId">Subscription's Id, a <see cref="T:System.Guid"/></param>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IListSubscription"/> instance</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ILongRunningOperation">
            <summary>
            Represents a Microsoft graph async, long running, operation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ILongRunningOperation.Location">
            <summary>
            Location to call to request the current status of an async, long running, operation
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ILongRunningOperation.WaitForCompletionAsync(PnP.Core.Model.SharePoint.LongRunningOperationOptions)">
            <summary>
            Waits for the async, long running, operation to finish
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ILongRunningOperation.WaitForCompletion(PnP.Core.Model.SharePoint.LongRunningOperationOptions)">
            <summary>
            Waits for the async, long running, operation to finish
            </summary>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IManagedProperty">
            <summary>
            Managed property used for search configuration
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IManagedProperty.Name">
            <summary>
            Name of the managed property
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IManagedProperty.Aliases">
            <summary>
            Aliases used for this managed property
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IManagedProperty.Mappings">
            <summary>
            Mappings with crawled properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IManagedProperty.Type">
            <summary>
            Type of managed property
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IManagedProperty.Pid">
            <summary>
            Property pid
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IPersonProperties">
            <summary>
            A metadata for a person
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.AccountName">
            <summary>
            Person's account name in a form of "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.DisplayName">
            <summary>
            Persons' display name
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.Email">
            <summary>
            Person's email
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.IsFollowed">
            <summary>
            Whether the current user is followed or not
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.LatestPost">
            <summary>
            Person's latest post url
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.PersonalSiteHostUrl">
            <summary>
            Person's site host url
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.PersonalUrl">
            <summary>
            Person's personal url
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.PictureUrl">
            <summary>
            Profile photo url
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.Title">
            <summary>
            Person's title
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.UserUrl">
            <summary>
            User url
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.DirectReports">
            <summary>
            Direct reports for the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.ExtendedManagers">
            <summary>
            Extended managers for the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.ExtendedReports">
            <summary>
            Extended reports for the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.Peers">
            <summary>
            Current user's peers
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPersonProperties.UserProfileProperties">
            <summary>
            User profile properties key-value collection
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IPropertyValues">
            <summary>
            Public interface to define a PropertyValues object
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPropertyValues.GetString(System.String,System.String)">
            <summary>
            Get string typed property bag value. If does not contain, returns given default value.
            </summary>
            <param name="key">Key of the property bag entry to return</param>
            <param name="defaultValue">Default value of the property bag</param>
            <returns>Value of the property bag entry as string</returns>        
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPropertyValues.GetInteger(System.String,System.Int32)">
            <summary>
            Get int typed property bag value. If does not contain, returns given default value.
            </summary>
            <param name="key">Key of the property bag entry to return</param>
            <param name="defaultValue">Default value of the property bag</param>
            <returns>Value of the property bag entry as int</returns>        
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPropertyValues.GetBoolean(System.String,System.Boolean)">
            <summary>
            Get boolean typed property bag value. If does not contain, returns given default value.
            </summary>
            <param name="key">Key of the property bag entry to return</param>
            <param name="defaultValue">Default value of the property bag</param>
            <returns>Value of the property bag entry as boolean</returns>        
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPropertyValues.UpdateAsync">
            <summary>
            Update the property bag
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPropertyValues.Update">
            <summary>
            Update the property bag
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IRecycleBinItem">
            <summary>
            Public interface to define a RecycleBinItem object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.AuthorEmail">
            <summary>
            Gets the e-mail address of the user who created the recycle bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.AuthorName">
            <summary>
            Gets the name of the user who created the recycle bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.DeletedByEmail">
            <summary>
            Gets the e-mail address of the user who deleted the recycle bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.DeletedByName">
            <summary>
            Gets the name of the user who deleted the recycle bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.DeletedDate">
            <summary>
            Gets a value that specifies when the Recycle Bin item was moved to the Recycle Bin.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.DeletedDateLocalFormatted">
            <summary>
            Gets a value that specifies when the Recycle Bin item was moved to the Recycle Bin formatted in the local date.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.DirName">
            <summary>
            Gets a value that specifies the site relative URL of the list or folder that originally contained the Recycle Bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.Id">
            <summary>
            Gets a value that specifies the identifier of the Recycle Bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.ItemState">
            <summary>
            Gets a value that specifies the Recycle Bin stage of the Recycle Bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.ItemType">
            <summary>
            Gets a value that specifies the type of the Recycle Bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.LeafName">
            <summary>
            Gets a value that specifies the leaf name of the Recycle Bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.Title">
            <summary>
            Gets a value that specifies the title of the Recycle Bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.Size">
            <summary>
            Gets a value that specifies the size of the Recycle Bin item in bytes.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.Author">
            <summary>
            Gets a value that specifies the user who created the Recycle Bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.DeletedBy">
            <summary>
            Gets a value that specifies the user who deleted the Recycle Bin item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRecycleBinItem.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.RestoreAsync">
            <summary>
            Restores the recycle bin item to its original location.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.Restore">
            <summary>
            Restores the recycle bin item to its original location.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.RestoreBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Restores the recycle bin item to its original location using a specific batch instance
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.RestoreBatch(PnP.Core.Services.Batch)">
            <summary>
            Restores the recycle bin item to its original location using a specific batch instance
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.RestoreBatchAsync">
            <summary>
            Restores the recycle bin item to its original location using the current context batch instance
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.RestoreBatch">
            <summary>
            Restores the recycle bin item to its original location using the current context batch instance
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.MoveToSecondStageAsync">
            <summary>
            Move the recycle bin item to the second stage recycle bin
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.MoveToSecondStage">
            <summary>
            Move the recycle bin item to the second stage recycle bin
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.MoveToSecondStageBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Move the recycle bin item to the second stage recycle bin using a specific batch instance
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.MoveToSecondStageBatch(PnP.Core.Services.Batch)">
            <summary>
            Move the recycle bin item to the second stage recycle bin using a specific batch instance
            <param name="batch">The batch instance to use.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.MoveToSecondStageBatchAsync">
            <summary>
            Move the recycle bin item to the second stage recycle bin using the current context batch instance
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItem.MoveToSecondStageBatch">
            <summary>
            Move the recycle bin item to the second stage recycle bin using the current context batch instance
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IRecycleBinItemCollection">
            <summary>
            Public interface to define a collection of RecycleBinItem objects
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllAsync">
            <summary>
            Permanently deletes all Recycle Bin items.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAll">
            <summary>
            Permanently deletes all Recycle Bin items.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Permanently deletes all Recycle Bin items using a specific batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllBatch(PnP.Core.Services.Batch)">
            <summary>
            Permanently deletes all Recycle Bin items using a specific batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllBatchAsync">
            <summary>
            Permanently deletes all Recycle Bin items using the current context batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllBatch">
            <summary>
            Permanently deletes all Recycle Bin items using the current context batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllSecondStageItemsAsync">
            <summary>
            Permanently deletes second stage Recycle Bin items.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllSecondStageItems">
            <summary>
            Permanently deletes second stage Recycle Bin items.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllSecondStageItemsBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Permanently deletes second stage Recycle Bin items using a specific batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllSecondStageItemsBatch(PnP.Core.Services.Batch)">
            <summary>
            Permanently deletes second stage Recycle Bin items using a specific batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllSecondStageItemsBatchAsync">
            <summary>
            Permanently deletes second stage Recycle Bin items using the current context batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.DeleteAllSecondStageItemsBatch">
            <summary>
            Permanently deletes all Recycle Bin items using the current context batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.MoveAllToSecondStageAsync">
            <summary>
            Move all Recycle Bin items to second stage.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.MoveAllToSecondStage">
            <summary>
            Move all Recycle Bin items to second stage.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.MoveAllToSecondStageBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Move all Recycle Bin items to second stage using a specific batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.MoveAllToSecondStageBatch(PnP.Core.Services.Batch)">
            <summary>
            Move all Recycle Bin items to second stage using a specific batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.MoveAllToSecondStageBatchAsync">
            <summary>
            Move all Recycle Bin items to second stage using the current context batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.MoveAllToSecondStageBatch">
            <summary>
            Move all Recycle Bin items to second stage using the current context batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.RestoreAllAsync">
            <summary>
            Restores all Recycle Bin items to their original locations.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.RestoreAll">
            <summary>
            Restores all Recycle Bin items to their original locations.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.RestoreAllBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Restores all Recycle Bin items to their original locations using a specific batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.RestoreAllBatch(PnP.Core.Services.Batch)">
            <summary>
            Restores all Recycle Bin items to their original locations using a specific batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.RestoreAllBatchAsync">
            <summary>
            Restores all Recycle Bin items to their original locations using the current context batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.RestoreAllBatch">
            <summary>
            Restores all Recycle Bin items to their original locations using the current context batch instance.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.GetById(System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IRecycleBinItem,System.Object}}[])">
            <summary>
            Method to select a recycle bin item (<c>IRecycleBinItem</c>) by id
            </summary>
            <param name="id">The Id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting recycle bin item instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IRecycleBinItemCollection.GetByIdAsync(System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IRecycleBinItem,System.Object}}[])">
            <summary>
            Method to select a recycle bin item (<c>IRecycleBinItem</c>) by id asynchronously
            </summary>
            <param name="id">The Id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting recycle bin item instance, if any</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IRegionalSettings">
            <summary>
            Public interface to define a RegionalSettings object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.AM">
            <summary>
            Gets the string that is used to represent A.M..
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.CollationLCID">
            <summary>
            Gets the locale identifier (LCID) for the collation rules that are used on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.DateFormat">
            <summary>
            Gets the date format that is used.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.DateSeparator">
            <summary>
            Gets the separator that is used for dates.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.DecimalSeparator">
            <summary>
            Gets the separator that is used for decimals.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.DigitGrouping">
            <summary>
            Gets the separator that is used in grouping digits.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.FirstDayOfWeek">
            <summary>
            Gets the first day of the week used in calendars.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.IsEastAsia">
            <summary>
            Gets a Boolean value that indicates whether the Web site locale is an East Asian locale.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.IsRightToLeft">
            <summary>
            Gets the separator that is used for decimals.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.IsUIRightToLeft">
            <summary>
            Gets a Boolean value that indicates whether the Web site user interface (UI) uses a right-to-left language.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.ListSeparator">
            <summary>
            Gets the separator used in lists.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.LocaleId">
            <summary>
            Gets or sets the locale ID in use.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.NegativeSign">
            <summary>
            Gets the symbol that is used to represent a negative sign.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.NegNumberMode">
            <summary>
            Gets the negative number mode that is used for displaying negative numbers in calculated fields based on the locale of the server.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.PM">
            <summary>
            Gets the string that is used to represent P.M..
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.PositiveSign">
            <summary>
            Gets the symbol that is used to represent a positive sign.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.ShowWeeks">
            <summary>
            Gets Boolean value that specifies whether to display the week number in day or week views of a calendar.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.ThousandSeparator">
            <summary>
            Gets the thousand separator used for numbers.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.Time24">
            <summary>
            Gets or sets a Boolean value that specifies whether to use a 24-hour time format in representing the hours of the day.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.TimeMarkerPosition">
            <summary>
            Gets a value that indicates whether A.M. and P.M. appear before or after the time string.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.TimeSeparator">
            <summary>
            Gets the time separator that is used.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.All">
            <summary>
            Gets all properties of this entity
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.TimeZone">
            <summary>
            Gets the time zone that is used.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IRegionalSettings.TimeZones">
            <summary>
            Gets the collection of time zones used in SharePoint Online.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISearchRefinementResult">
            <summary>
            Search refinement result
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISearchRefinementResult.Count">
            <summary>
            Number of matches for this refinement
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISearchRefinementResult.Name">
            <summary>
            Refinement name
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISearchRefinementResult.Token">
            <summary>
            Refinement token
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISearchRefinementResult.Value">
            <summary>
            Refinement value
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISearchResult">
            <summary>
            Result of search query
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISearchResult.ElapsedTime">
            <summary>
            Time in milliseconds the search query took server side
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISearchResult.TotalRows">
            <summary>
            Total rows that match the provided query
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISearchResult.TotalRowsIncludingDuplicates">
            <summary>
            Total rows, including duplicates, that match the provided query
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISearchResult.Rows">
            <summary>
            Collection of search results
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISearchResult.Refinements">
            <summary>
            Collection of refinement results
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISecurableObject">
            <summary>
            Defines the properties and methods for securable object (Web, List, ListItem)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISecurableObject.RoleAssignments">
            <summary>
            Role Assignments defined on this securable object
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISecurableObject.HasUniqueRoleAssignments">
            <summary>
            Returns if the securable object has unique role assignments
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.BreakRoleInheritance(System.Boolean,System.Boolean)">
            <summary>
            Creates unique role assignments for this securable object.
            </summary>
            <param name="copyRoleAssignments">Specifies whether to copy the role assignments from the parent securable object. If the value is false, the collection of role assignments must contain only 1 role assignment containing the current user after the operation.</param>
            <param name="clearSubscopes">If the securable object is a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects in the current site and in the sites which inherit role assignments from the current site must be cleared and those securable objects will inherit role assignments from the current site after this call. If the securable object is a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged. If the securable object is not a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects must be cleared and those securable objects will inherit role assignments from the current securable object after this call. If the securable object is not a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.BreakRoleInheritanceAsync(System.Boolean,System.Boolean)">
            <summary>
            Creates unique role assignments for this securable object.
            </summary>
            <param name="copyRoleAssignments">Specifies whether to copy the role assignments from the parent securable object. If the value is false, the collection of role assignments must contain only 1 role assignment containing the current user after the operation.</param>
            <param name="clearSubscopes">If the securable object is a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects in the current site and in the sites which inherit role assignments from the current site must be cleared and those securable objects will inherit role assignments from the current site after this call. If the securable object is a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged. If the securable object is not a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects must be cleared and those securable objects will inherit role assignments from the current securable object after this call. If the securable object is not a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.BreakRoleInheritanceBatch(PnP.Core.Services.Batch,System.Boolean,System.Boolean)">
            <summary>
            Creates unique role assignments for this securable object.
            </summary>
            <param name="batch">Batch add this request to</param>
            <param name="copyRoleAssignments">Specifies whether to copy the role assignments from the parent securable object. If the value is false, the collection of role assignments must contain only 1 role assignment containing the current user after the operation.</param>
            <param name="clearSubscopes">If the securable object is a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects in the current site and in the sites which inherit role assignments from the current site must be cleared and those securable objects will inherit role assignments from the current site after this call. If the securable object is a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged. If the securable object is not a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects must be cleared and those securable objects will inherit role assignments from the current securable object after this call. If the securable object is not a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.BreakRoleInheritanceBatchAsync(PnP.Core.Services.Batch,System.Boolean,System.Boolean)">
            <summary>
            Creates unique role assignments for this securable object.
            </summary>
            <param name="batch">Batch add this request to</param>
            <param name="copyRoleAssignments">Specifies whether to copy the role assignments from the parent securable object. If the value is false, the collection of role assignments must contain only 1 role assignment containing the current user after the operation.</param>
            <param name="clearSubscopes">If the securable object is a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects in the current site and in the sites which inherit role assignments from the current site must be cleared and those securable objects will inherit role assignments from the current site after this call. If the securable object is a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged. If the securable object is not a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects must be cleared and those securable objects will inherit role assignments from the current securable object after this call. If the securable object is not a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.BreakRoleInheritanceBatch(System.Boolean,System.Boolean)">
            <summary>
            Creates unique role assignments for this securable object.
            </summary>
            <param name="copyRoleAssignments">Specifies whether to copy the role assignments from the parent securable object. If the value is false, the collection of role assignments must contain only 1 role assignment containing the current user after the operation.</param>
            <param name="clearSubscopes">If the securable object is a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects in the current site and in the sites which inherit role assignments from the current site must be cleared and those securable objects will inherit role assignments from the current site after this call. If the securable object is a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged. If the securable object is not a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects must be cleared and those securable objects will inherit role assignments from the current securable object after this call. If the securable object is not a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.BreakRoleInheritanceBatchAsync(System.Boolean,System.Boolean)">
            <summary>
            Creates unique role assignments for this securable object.
            </summary>
            <param name="copyRoleAssignments">Specifies whether to copy the role assignments from the parent securable object. If the value is false, the collection of role assignments must contain only 1 role assignment containing the current user after the operation.</param>
            <param name="clearSubscopes">If the securable object is a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects in the current site and in the sites which inherit role assignments from the current site must be cleared and those securable objects will inherit role assignments from the current site after this call. If the securable object is a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged. If the securable object is not a site, and the clearsubscopes parameter is true, the role assignments for all child securable objects must be cleared and those securable objects will inherit role assignments from the current securable object after this call. If the securable object is not a site, and the clearsubscopes parameter is false, the role assignments for all child securable objects which do not inherit role assignments from their parent object must remain unchanged.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.ResetRoleInheritance">
            <summary>
            Removes the local role assignments so that the web, and all its descendant objects, re-inherit role assignments from the parent object.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.ResetRoleInheritanceAsync">
            <summary>
            Removes the local role assignments so that the web, and all its descendant objects, re-inherit role assignments from the parent object.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.ResetRoleInheritanceBatch(PnP.Core.Services.Batch)">
            <summary>
            Removes the local role assignments so that the web, and all its descendant objects, re-inherit role assignments from the parent object.
            </summary>
            <param name="batch">The batch to add this request to</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.ResetRoleInheritanceBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Removes the local role assignments so that the web, and all its descendant objects, re-inherit role assignments from the parent object.
            </summary>
            <param name="batch">The batch to add this request to</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.ResetRoleInheritanceBatch">
            <summary>
            Removes the local role assignments so that the web, and all its descendant objects, re-inherit role assignments from the parent object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.ResetRoleInheritanceBatchAsync">
            <summary>
            Removes the local role assignments so that the web, and all its descendant objects, re-inherit role assignments from the parent object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.GetRoleDefinitions(System.Int32)">
            <summary>
            Returns the roles for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId">Id of the user or group</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.GetRoleDefinitionsAsync(System.Int32)">
            <summary>
            Returns the roles for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId">Id of the user or group</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.AddRoleDefinitions(System.Int32,System.String[])">
            <summary>
            Adds roles for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId">Id of the user or group</param>
            <param name="names">Roles to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.AddRoleDefinitionsAsync(System.Int32,System.String[])">
            <summary>
            Adds roles for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId">Id of the user or group</param>
            <param name="names">Roles to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.AddRoleDefinition(System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Add role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.AddRoleDefinitionAsync(System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Adds role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.AddRoleDefinitionBatch(PnP.Core.Services.Batch,System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Add role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="batch">The batch to add this request to</param>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.AddRoleDefinitionBatchAsync(PnP.Core.Services.Batch,System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Adds role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="batch">The batch to add this request to</param>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.AddRoleDefinitionBatch(System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Add role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.AddRoleDefinitionBatchAsync(System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Adds role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to add</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.RemoveRoleDefinitions(System.Int32,System.String[])">
            <summary>
            Removes roles for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId">Id of the user or group</param>
            <param name="names">Roles to remove</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.RemoveRoleDefinitionsAsync(System.Int32,System.String[])">
            <summary>
            Removes role for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId">Id of the user or group</param>
            <param name="names">Roles to remove</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.RemoveRoleDefinition(System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Removes role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to remove</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.RemoveRoleDefinitionAsync(System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Removes role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to remove</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.RemoveRoleDefinitionBatch(System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Removes role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to remove</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.RemoveRoleDefinitionBatchAsync(System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Removes role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to remove</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.RemoveRoleDefinitionBatch(PnP.Core.Services.Batch,System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Removes role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="batch">The batch to add this request to</param>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to remove</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISecurableObject.RemoveRoleDefinitionBatchAsync(PnP.Core.Services.Batch,System.Int32,PnP.Core.Model.Security.IRoleDefinition)">
            <summary>
            Removes role definitions for a specific principal id (IUser.Id or ISharePointGroup.Id)
            </summary>
            <param name="batch">The batch to add this request to</param>
            <param name="principalId"></param>
            <param name="roleDefinition">Role definition to remove</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISite">
            <summary>
            Public interface to define a Site object of SharePoint Online
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.Id">
            <summary>
            The Unique ID of the Site object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.GroupId">
            <summary>
            The unique ID of the associated Microsoft 365 Group (if any)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.Url">
            <summary>
            The URL of the Site object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.Classification">
            <summary>
            The Classification of the Site object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.SocialBarOnSitePagesDisabled">
            <summary>
            Defines whether social bar is disabled on Site Pages in this site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.SearchBoxInNavBar">
            <summary>
            Whether suite nav search box is shown on modern and classic pages 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.RootWeb">
            <summary>
            The RootWeb of the Site object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.AllWebs">
            <summary>
            Collection of sub-webs in the current Site object
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.Features">
            <summary>
            Collection of features enabled for the site
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.AllowCreateDeclarativeWorkflow">
            <summary>
            Gets or sets a value that specifies whether the creation of declarative workflows is allowed on this site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.AllowDesigner">
            <summary>
            Gets or sets a value that specifies whether a designer can be used on this site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.AllowExternalEmbeddingWrapper">
            <summary>
            Gets or sets a value that specifies whether external embedding wrapper is allowed on this site collection.
            0 means "Don't allow embedding any external domains"
            1 means "Only allow embedding external domains from allow-embed-domains-list"
            2 means "Allow embedding any external domains"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.AllowMasterPageEditing">
            <summary>
            Gets or sets a value that specifies whether master page editing is allowed on this site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.AllowRevertFromTemplate">
            <summary>
            Gets or sets a value that specifies whether this site collection can be reverted to its base template.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.AllowSaveDeclarativeWorkflowAsTemplate">
            <summary>
            Gets or sets a value that specifies whether it is allowed to save declarative workflows as template on this site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.AllowSavePublishDeclarativeWorkflow">
            <summary>
            Gets or sets a value that specifies whether it is allowed to save and publish declarative workflows on this site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.AuditLogTrimmingRetention">
            <summary>
            This is the number of days of audit log data to retain. If unset and
            audit trimming is enabled, the retention defaults default configured schedule for trimming
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.CanSyncHubSitePermissions">
            <summary>
            Gets or sets value if syncing hub site permissions to this associated site is allowed.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.ChannelGroupId">
            <summary>
            Gets the ID of the Modern Group associated with this site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.CommentsOnSitePagesDisabled">
            <summary>
            Gets or sets a value that specifies whether the comments on site pages are disabled on this site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.DisableAppViews">
            <summary>
            Sets whether or not to disable app views for all child webs.
            True means app views are disabled throughout the site collection; False otherwise.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.DisableCompanyWideSharingLinks">
            <summary>
            Sets whether or not to disable company sharing links for all child webs.
            True means companywide sharing links are disabled throughout the site collection, regardless of the settings on the root or child webs.
            False means each web can individually decide whether to turn on or off companywide sharing links.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.DisableFlows">
            <summary>
            Sets whether or not to disable Flows for all child webs.
            True means Flows are disabled throughout the site collection; False otherwise.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.ExternalSharingTipsEnabled">
            <summary>
            Gets a boolean value that specifies whether users will be greeted with a notification bar
            telling them that the site can be shared with external users.
            True - notification bar is enabled; False - otherwise
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.ExternalUserExpirationInDays">
            <summary>
            Property that indicates the default number of days an external user will expire in.
            0 if the policy is disabled or unavailable, otherwise the number of days
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.GeoLocation">
            <summary>
            returns the Geo Location hosting this site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.HubSiteId">
            <summary>
            Gets the ID of the HubSite this site is associated with.
            </summary>
            <remarks>Use JoinHubSite method to change the value of this property.</remarks>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.SensitivityLabelId">
            <summary>
            Gets or sets the Information Protection Label Id for an individual site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.SensitivityLabel">
            <summary>
            Information Protection Label Id for an individual site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.IsHubSite">
            <summary>
            Returns whether or not this site is a HubSite. Hub sites can be associated with one or more sites.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.LockIssue">
            <summary>
            Gets the comment that is used in locking a site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.MaxItemsPerThrottledOperation">
            <summary>
            Maximum items that will not be throttled per operation.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.ReadOnly">
            <summary>
            Gets or sets a bool value that specifies whether the site collection is read-only, locked, and unavailable for write access.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.RelatedGroupId">
            <summary>
            Gets the ID of the Modern Group related to this site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.RecycleBin">
            <summary>
            Gets a value that specifies the collection of Recycle Bin items for the site collection.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.SearchBoxPlaceholderText">
            <summary>
            Search placeholder text for search box in navbar - overrides default placeholder text if set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.ServerRelativeUrl">
            <summary>
            Gets the server-relative URL of the root Web site in the site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.ShareByEmailEnabled">
            <summary>
            ShareByEmailEnabled when true means that user's will be able to grant permissions to guests for resources within the site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.ShareByLinkEnabled">
            <summary>
            Property that indicates whether users will be able to share links to documents that can be accessed without logging in.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.ShowPeoplePickerSuggestionsForGuestUsers">
            <summary>
            Gets or sets a value that specifies whether guest users should be displayed as suggestions in people picker on this site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.StatusBarLink">
            <summary>
            Gets or sets a value that specifies the status bar link on this site collection (sets the SiteStatusBarLink property on the root web).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.StatusBarText">
            <summary>
            Gets or sets a value that specifies the text of the status bar on this site collection (sets the SiteStatusBarText property on the root web).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.ThicketSupportDisabled">
            <summary>
            Gets a value that indicates whether thicket support is disabled on this site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.TrimAuditLog">
            <summary>
            When this flag is set for the site, the audit events are trimmed periodically.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.UserCustomActions">
            <summary>
            Gets a value that specifies the collection of user custom actions for the site collection.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.HubSiteSynchronizableVisitorGroup">
            <summary>
            Gets the synchronizable visitor group for a hub site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.EventReceivers">
            <summary>
            Event Receivers defined in this web
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISite.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetAvailableComplianceTags">
            <summary>
            Retrieves the available compliance tags / retention labels for this site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetAvailableComplianceTagsAsync">
            <summary>
            Retrieves the available compliance tags / retention labels for this site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.RegisterHubSiteAsync">
            <summary>
            Registers the current site as a primary hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.RegisterHubSite">
            <summary>
            Registers the current site as a primary hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.UnregisterHubSiteAsync">
            <summary>
            Unregisters the current site as a primary hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.UnregisterHubSite">
            <summary>
            Unregisters the current site as a primary hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.JoinHubSiteAsync(System.Guid)">
            <summary>
            Associates the current site to a primary hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.JoinHubSite(System.Guid)">
            <summary>
            Associates the current site to a primary hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.UnJoinHubSiteAsync">
            <summary>
            Disassociates current site from primary hub site
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.UnJoinHubSite">
            <summary>
            Disassociates current site from primary hub site
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetHubSiteDataAsync(System.Nullable{System.Guid})">
            <summary>
            Gets hubsite data from the current site OR another specified hub site ID
            </summary>
            <param name="id">Hub Site Guid</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetHubSiteData(System.Nullable{System.Guid})">
            <summary>
            Gets hubsite data from the current site OR another specified hub site ID
            </summary>
            <param name="id">Hub Site Guid</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.IsHomeSiteAsync">
            <summary>
            Checks if current site is a HomeSite
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.IsHomeSite">
            <summary>
            Checks if current site is a HomeSite
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.CreateCopyJobsAsync(System.String[],System.String,PnP.Core.Model.SharePoint.CopyMigrationOptions,System.Boolean,System.Int32)">
            <summary>
            Creates a new migration job
            <param name="exportObjectUris">Array of the objects to migrate (absolute url to the file / folder)</param>
            <param name="destinationUri">Destination URI to where the objects have to be migrated</param>
            <param name="options">Migration options</param>
            <param name="waitUntilFinished">Defines if we have to wait until all the migrations have finished</param>
            <param name="waitAfterStatusCheck">Duration between every GetCopyJobProgress call in seconds. Defaults to 1.</param>
            <returns>List of all the jobs being created (one for every exportObjectUri)</returns>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.CreateCopyJobs(System.String[],System.String,PnP.Core.Model.SharePoint.CopyMigrationOptions,System.Boolean,System.Int32)">
            <summary>
            Creates a new migration job
            <param name="exportObjectUris">Array of the objects to migrate (absolute url to the file / folder)</param>
            <param name="destinationUri">Destination URI to where the objects have to be migrated</param>
            <param name="options">Migration options</param>
            <param name="waitUntilFinished">Defines if we have to wait until all the migrations have finished</param>
            <param name="waitAfterStatusCheck">Duration between every GetCopyJobProgress call in seconds. Defaults to 1.</param>
            <returns>List of all the jobs being created (one for every exportObjectUri)</returns>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetCopyJobProgressAsync(PnP.Core.Model.SharePoint.ICopyMigrationInfo)">
            <summary>
            Gets the progress of an existing migration info object
            <param name="copyMigrationInfo">Migration job to get the progress of</param>
            <returns>Progress of the copy job</returns>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetCopyJobProgress(PnP.Core.Model.SharePoint.ICopyMigrationInfo)">
            <summary>
            Gets the progress of an existing migration info object
            <param name="copyMigrationInfo">Migration job to get the progress of</param>
            <returns>Progress of the copy job</returns>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.EnsureCopyJobHasFinishedAsync(System.Collections.Generic.IList{PnP.Core.Model.SharePoint.ICopyMigrationInfo},System.Int32)">
            <summary>
            Ensures that a migration job has completely run
            <param name="copyMigrationInfos">List of migration jobs to check the process of</param>
            <param name="waitAfterStatusCheck">Duration between every GetCopyJobProgress call in seconds. Defaults to 1.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.EnsureCopyJobHasFinished(System.Collections.Generic.IList{PnP.Core.Model.SharePoint.ICopyMigrationInfo},System.Int32)">
            <summary>
            Ensures that a migration job has completely run
            <param name="copyMigrationInfos">List of migration jobs to check the process of</param>
            <param name="waitAfterStatusCheck">Duration between every GetCopyJobProgress call in seconds. Defaults to 1.</param>
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetAnalyticsAsync(PnP.Core.Model.SharePoint.AnalyticsOptions)">
            <summary>
            Gets site analytics
            </summary>
            <param name="options">Defines which analytics are needed</param>
            <returns>The requested analytics data</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetAnalytics(PnP.Core.Model.SharePoint.AnalyticsOptions)">
            <summary>
            Gets site analytics
            </summary>
            <param name="options">Defines which analytics are needed</param>
            <returns>The requested analytics data</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetSearchConfigurationXmlAsync">
            <summary>
            Gets the search configuration of the web
            </summary>
            <returns>Search configuration XML</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetSearchConfigurationXml">
            <summary>
            Gets the search configuration of the web
            </summary>
            <returns>Search configuration XML</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetSearchConfigurationManagedPropertiesAsync">
            <summary>
            Gets the managed properties from the search configuration of this site
            </summary>
            <returns>List of managed properties</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.GetSearchConfigurationManagedProperties">
            <summary>
            Gets the managed properties from the search configuration of this site
            </summary>
            <returns>List of managed properties</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.SetSearchConfigurationXmlAsync(System.String)">
            <summary>
            Sets the search configuration for the site
            </summary>
            <param name="configuration">Search configuration, obtained via <see cref="M:PnP.Core.Model.SharePoint.ISite.GetSearchConfigurationXml"/> to apply</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISite.SetSearchConfigurationXml(System.String)">
            <summary>
            Sets the search configuration for the site
            </summary>
            <param name="configuration">Search configuration, obtained via <see cref="M:PnP.Core.Model.SharePoint.ISite.GetSearchConfigurationXml"/> to apply</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISocial">
            <summary>
            Entry point for the social-related APIs
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocial.UserProfile">
            <summary>
            A reference to a user profile-related operations
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocial.Following">
            <summary>
            An entry point for the social following APIs
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISocialActor">
            <summary>
            An entity, which represents a following object. The type of the object can be identified based on the <i>ActorType</i> property
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.AccountName">
            <summary>
            Gets the actor's account name. Only valid when ActorType is User
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.ActorType">
            <summary>
            Gets the actor type.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.CanFollow">
            <summary>
            Returns true if the Actor can potentially be followed, false otherwise.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.ContentUri">
            <summary>
            Gets the actor's content URI. Only valid when ActorType is Document, or Site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.EmailAddress">
            <summary>
            Gets the actor's email address. Only valid when ActorType is User
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.FollowedContentUri">
            <summary>
            Gets the URI of the actor's followed content folder. Only valid when this represents the current user
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.GroupId">
            <summary>
            Group id, if the followed site is a group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.Id">
            <summary>
            Gets the actor's canonical URI.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.ImageUri">
            <summary>
            Gets the actor's image URI. Only valid when ActorType is User, Document, or Site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.IsFollowed">
            <summary>
            Returns true if the current user is following the actor, false otherwise.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.LibraryUri">
            <summary>
            Gets the actor's library URI. Only valid when ActorType is Document
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.Name">
            <summary>
            Gets the actor's display name.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.PersonalSiteUri">
            <summary>
            Gets the URI of the actor's personal site. Only valid when ActorType is User
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.Status">
            <summary>
            Gets a code that indicates recoverable errors that occurred during actor retrieval
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.StatusText">
            <summary>
            Gets the text of the actor's most recent post. Only valid when ActorType is User
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.TagGuid">
            <summary>
            Gets the actor's tag GUID. Only valid when ActorType is Tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.Title">
            <summary>
            Gets the actor's title. Only valid when ActorType is User
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISocialActor.Uri">
            <summary>
            Unique item uri
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IStorageMetrics">
            <summary>
            Public interface to define a StorageMetrics object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IStorageMetrics.LastModified">
            <summary>
            Gets the last modified date and time of the storage resource.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IStorageMetrics.TotalFileCount">
            <summary>
            Gets the total count of files in the storage resource.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IStorageMetrics.TotalFileStreamSize">
            <summary>
            Gets the total stream size of the storage resource.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IStorageMetrics.TotalSize">
            <summary>
            Gets the total size of the storage resource.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IStorageMetrics.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IThumbnail">
            <summary>
            A thumbnail for a file in SharePoint, OneDrive or Teams
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IThumbnail.Size">
            <summary>
            Thumbnail size identifier
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IThumbnail.Url">
            <summary>
            Thumbnail URL
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IThumbnail.Width">
            <summary>
            Thumbnail width
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IThumbnail.Height">
            <summary>
            Thumbnail height
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IThumbnail.SetId">
            <summary>
            Thumbnail belongs to thumnail set with this id (not always populated)
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITimeZone">
            <summary>
            Public interface to define a TimeZone object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITimeZone.Description">
            <summary>
            Time zone description
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITimeZone.Id">
            <summary>
            Id of the time zone
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITimeZone.Bias">
            <summary>
            Bias (additional minutes to get to UTC time) for this time zone
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITimeZone.DaylightBias">
            <summary>
            Bias (additional minutes to get to UTC time) for this time zone when in daylight saving
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITimeZone.StandardBias">
            <summary>
            Bias (additional minutes to get to UTC time) for this time zone when not in daylight saving
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITimeZone.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITimeZone.LocalTimeToUtc(System.DateTime)">
            <summary>
            Converts the specified DateTime value from local time to Coordinated Universal Time (UTC).
            </summary>
            <param name="dateTime">A <see cref="T:System.DateTime"/> object that represents the local date and time value to convert.</param>
            <returns>A <see cref="T:System.DateTime"/> object that contains the date converted to UTC.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITimeZone.UtcToLocalTime(System.DateTime)">
            <summary>
            Converts the specified DateTime value from Coordinated Universal Time (UTC) to local time.
            </summary>
            <param name="dateTime">A <see cref="T:System.DateTime"/> object that represents the UTC date and time value to convert.</param>
            <returns>A <see cref="T:System.DateTime"/> structure that contains the date and time converted to their local values.</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITimeZoneCollection">
            <summary>
            Public interface to define a collection of TimeZone objects
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IUnfurledResource">
            <summary>
            Defines the data coming back from unfurling a link
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.LinkType">
            <summary>
            Type of resource that the unfurled link is referring to
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.Resource">
            <summary>
            SharePoint resource url for the unfurled link
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.SiteId">
            <summary>
            Id of the site collection containing the unfurled resource
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.WebId">
            <summary>
            Id of the web containing the unfurled resource
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.WebUrl">
            <summary>
            Url of the web containing the unfurled resource
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.ListId">
            <summary>
            Id of the parent list of the resource
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.ListDisplayName">
            <summary>
            Display name of the parent list of the resource
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.ListUrl">
            <summary>
            Url of the parent list of the resource
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.ListItemId">
            <summary>
            ListItem id of the resource (if it's a file, listitem or page)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.FileDriveId">
            <summary>
            Graph Drive Id of the resource (if it's a file)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.FileDriveItemId">
            <summary>
            Graph DriveItem id of the resource (if it's a file)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.FileUniqueId">
            <summary>
            Unique ID of the resource (if it's a file)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.Name">
            <summary>
            Name of the resource
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.Size">
            <summary>
            Size of the resource (if it's a file or page)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.LastModified">
            <summary>
            When was the resource last modified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.LastModifiedBy">
            <summary>
            Who last modified the resource
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUnfurledResource.Thumbnails">
            <summary>
            Thumbnails of the resource (only for files at the moment)
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IUserCustomAction">
            <summary>
            Public interface to define a UserCustomAction object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.ClientSideComponentId">
            <summary>
            Gets or sets the unique identifier of the associated client side component.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.ClientSideComponentProperties">
            <summary>
            Gets or sets the JSON formatted properties of the associated client side component.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.CommandUIExtension">
            <summary>
            Gets or sets a value that specifies an implementation specific XML fragment that determines user interface properties of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.Description">
            <summary>
            Gets or sets the description of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.Group">
            <summary>
            Gets or sets a value that specifies an implementation-specific value that determines the position of the custom action in the page.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.HostProperties">
            <summary>
            This property is only used when an application customizer is created and preallocated placeholders are specified.  
            It is optional. If non-empty, the string must contain a JSON object with one or two properties for the height 
            amount needed to be preallocated.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.Id">
            <summary>
            Gets a value that specifies the identifier of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.ImageUrl">
            <summary>
            Gets or sets the URL of the image associated with the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.Location">
            <summary>
            Gets or sets the location of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.Name">
            <summary>
            Gets or sets the name of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.RegistrationId">
            <summary>
            Gets or sets the value that specifies the identifier of the object associated with the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.RegistrationType">
            <summary>
            Gets or sets the value that specifies the type of object associated with the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.Scope">
            <summary>
            Gets a value that specifies the scope of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.ScriptBlock">
            <summary>
            Gets or sets the value that specifies the ECMAScript to be executed when the custom action is performed.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.ScriptSrc">
            <summary>
            Gets or sets a value that specifies the URI of a file which contains the ECMAScript to execute on the page.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.Sequence">
            <summary>
            Gets or sets the value that specifies an implementation-specific value that determines the order of the custom action that appears on the page.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.Title">
            <summary>
            Gets or sets the display title of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.Url">
            <summary>
            Gets or sets the URL, URI, or ECMAScript (JScript, JavaScript) function associated with the action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.VersionOfUserCustomAction">
            <summary>
            Returns the version of the user custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.Rights">
            <summary>
            Get or sets the base permissions of the action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserCustomAction.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IUserCustomActionCollection">
            <summary>
            Public interface to define a collection of UserCustomAction objects
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserCustomActionCollection.AddAsync(PnP.Core.Model.SharePoint.AddUserCustomActionOptions)">
            <summary>
            Add a new User Custom Action with the specified options
            </summary>
            <param name="options">The options to specify to create the User Custom Action</param>
            <returns>The created User Custom Action object.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserCustomActionCollection.Add(PnP.Core.Model.SharePoint.AddUserCustomActionOptions)">
            <summary>
            Add a new User Custom Action with the specified options
            </summary>
            <param name="options">The options to specify to create the User Custom Action</param>
            <returns>The created User Custom Action object.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserCustomActionCollection.AddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.AddUserCustomActionOptions)">
            <summary>
            Add a new User Custom Action with the specified options in the specified batch instance
            </summary>
            <param name="options">The options to specify to create the User Custom Action</param>
            <param name="batch">The instance of the batch to use</param>
            <returns>The created User Custom Action object.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserCustomActionCollection.AddBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.AddUserCustomActionOptions)">
            <summary>
            Add a new User Custom Action with the specified options in the specified batch instance
            </summary>
            <param name="options">The options to specify to create the User Custom Action</param>
            <param name="batch">The instance of the batch to use</param>
            <returns>The created User Custom Action object.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserCustomActionCollection.AddBatchAsync(PnP.Core.Model.SharePoint.AddUserCustomActionOptions)">
            <summary>
            Add a new User Custom Action with the specified options in the current batch
            </summary>
            <param name="options">The options to specify to create the User Custom Action</param>
            <returns>The created User Custom Action object.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserCustomActionCollection.AddBatch(PnP.Core.Model.SharePoint.AddUserCustomActionOptions)">
            <summary>
            Add a new User Custom Action with the specified options in the current batch
            </summary>
            <param name="options">The options to specify to create the User Custom Action</param>
            <returns>The created User Custom Action object.</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IUserProfile">
            <summary>
            An entry point for the user profile APIs
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserProfile.EditProfileLink">
            <summary>
            The link to edit the current user's profile
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IUserProfile.IsMyPeopleListPublic">
            <summary>
            A Boolean value that indicates whether the current user's People I'm Following list is public.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.GetMyPropertiesAsync(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IPersonProperties,System.Object}}[])">
            <summary>
            Gets user properties for the current user.
            </summary>
            <param name="selectors">Specific properties to return</param>
            <returns>An instance of <see cref="T:PnP.Core.Model.SharePoint.IPersonProperties"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.GetMyProperties(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IPersonProperties,System.Object}}[])">
            <summary>
            Gets user properties for the current user.
            </summary>
            <param name="selectors">Specific properties to return</param>
            <returns>An instance of <see cref="T:PnP.Core.Model.SharePoint.IPersonProperties"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.GetPropertiesForAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IPersonProperties,System.Object}}[])">
            <summary>
            Gets user properties for the specified user.
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="selectors">Specific properties to return</param>
            <returns>An instance of <see cref="T:PnP.Core.Model.SharePoint.IPersonProperties"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.GetPropertiesFor(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IPersonProperties,System.Object}}[])">
            <summary>
            Gets user properties for the specified user.
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="selectors">Specific properties to return</param>
            <returns>An instance of <see cref="T:PnP.Core.Model.SharePoint.IPersonProperties"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.GetPropertyForAsync(System.String,System.String)">
            <summary>
            Gets the specified user profile property for the specified user.
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="propertyName">The case-sensitive name of the property to get.</param>
            <returns>The specified profile property for the specified user.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.GetPropertyFor(System.String,System.String)">
            <summary>
            Gets the specified user profile property for the specified user.
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="propertyName">The case-sensitive name of the property to get.</param>
            <returns>The specified profile property for the specified user.</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.SetSingleValueProfilePropertyAsync(System.String,System.String,System.String)">
            <summary>
            Sets the user's profile property.
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="propertyName">The case-sensitive name of the property to get.</param>
            <param name="propertyValue">The property value</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.SetSingleValueProfileProperty(System.String,System.String,System.String)">
            <summary>
            Sets the user's profile property.
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="propertyName">The case-sensitive name of the property to get.</param>
            <param name="propertyValue">The property value</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.SetMultiValuedProfilePropertyAsync(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Sets the user's multi value profile property.
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="propertyName">The case-sensitive name of the property to get.</param>
            <param name="propertyValues">The property values</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.SetMultiValuedProfileProperty(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Sets the user's multi value profile property.
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="propertyName">The case-sensitive name of the property to get.</param>
            <param name="propertyValues">The property values</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.SetMyProfilePictureAsync(System.Byte[])">
            <summary>
            Uploads and sets the user profile picture. Users can upload a picture to their own profile only.
            </summary>
            <param name="fileBytes">A byte array representing the file</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.SetMyProfilePicture(System.Byte[])">
            <summary>
            Uploads and sets the user profile picture. Users can upload a picture to their own profile only.
            </summary>
            <param name="fileBytes">A byte array representing the file</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.GetUserOneDriveQuotaMaxAsync(System.String)">
            <summary>
            Gets the user's onedrive max quota
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <returns>The max quota value</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.GetUserOneDriveQuotaMax(System.String)">
            <summary>
            Gets the user's onedrive max quota
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <returns>The max quota value</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.ResetUserOneDriveQuotaToDefaultAsync(System.String)">
            <summary>
            Resets the user's onedrive quota to the default value
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <returns>The string outcome</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.ResetUserOneDriveQuotaToDefault(System.String)">
            <summary>
            Resets the user's onedrive quota to the default value
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <returns>The string outcome</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.SetUserOneDriveQuotaAsync(System.String,System.Int64,System.Int64)">
            <summary>
            Sets the user's onedrive quota
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="newQuota">New quota value</param>
            <param name="newQuotaWarning">Quota warning value</param>
            <returns>The string outcome</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IUserProfile.SetUserOneDriveQuota(System.String,System.Int64,System.Int64)">
            <summary>
            Sets the user's onedrive quota
            </summary>
            <param name="accountName">The account name, i.e. "i:0#.f|membership|admin@m365x790252.onmicrosoft.com"</param>
            <param name="newQuota">New quota value</param>
            <param name="newQuotaWarning">Quota warning value</param>
            <returns>The string outcome</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IView">
            <summary>
            Public interface to define a View object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.Aggregations">
            <summary>
             Specifies the aggregations displayed by the list view. The Aggregations property contains a CAML string.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.AggregationsStatus">
            <summary>
            Specifies whether the aggregations are shown in the list view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.AssociatedContentTypeId">
            <summary>
            Gets or sets Associated Content Type Id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.BaseViewId">
            <summary>
            Specifies the base view identifier of the list view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.CalendarViewStyles">
            <summary>
            Gets or sets Calendar View Styles
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ColumnWidth">
            <summary>
            Gets or sets Column Width
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.CustomFormatter">
            <summary>
            Gets or sets Custom Formatter
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.DefaultView">
            <summary>
            Gets or sets a Boolean value that specifies whether the view is the default view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.DefaultViewForContentType">
            <summary>
            Gets or sets a Boolean value that specifies whether the view is the default view
            for the associated content type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.EditorModified">
            <summary>
            Gets a Boolean value that indicates whether the view was modified in an HTML editor
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.Formats">
            <summary>
            Specifies the definitions for column and row formatting that are used in a datasheet view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.GridLayout">
            <summary>
            An attribute of the view, specifies the quick edit layout
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.Hidden">
            <summary>
            Gets or sets Hidden
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.HtmlSchemaXml">
            <summary>
            Gets the Html Schema Xml
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.Id">
            <summary>
            Gets the Id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ImageUrl">
            <summary>
            Specifies the server relative or absolute URL of the Image for the List View
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.IncludeRootFolder">
            <summary>
            Specifies if the Root Folder is included in the List View
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ViewJoins">
            <summary>
            Specifies the list joins that will be used by the list view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.JSLink">
            <summary>
            An attribute of the view, specifies the Javascript files used for the view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ListViewXml">
            <summary>
            Gets or sets List View Xml
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.Method">
            <summary>
            Specifies the view method for the list view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.MobileDefaultView">
            <summary>
            Specifies whether the list view is the default for a mobile device
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.MobileView">
            <summary>
            Specifies whether the list view applies to a mobile device
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ModerationType">
            <summary>
            Specifies the content approval type for the list view. A string that indicates the Content Approval type, which can be one of the following values:
             HideUnapproved -- Unapproved draft items are hidden from users who only have permission to read items.
             Contributor -- Pending and rejected items for the current user are displayed.
             Moderator -- Pending and rejected items for all users are displayed to users who have managed list permissions.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.NewDocumentTemplates">
            <summary>
            An attribute of the view, indicates what documents/templates are visible in "New" menu of a document library
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.OrderedView">
            <summary>
            Specifies whether users can reorder items through the user interface
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.Paged">
            <summary>
            Specifies whether the list view supports displaying items across multiple pages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.PageRenderType">
            <summary>
            Gets the reason why the page is rendered in classic UX, or Modern if the page is in Modern UX
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.PersonalView">
            <summary>
            Specifies whether the view is a personal view or a public view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ViewProjectedFields">
            <summary>
            Specifies the projected fields that will be used by the list view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ViewQuery">
            <summary>
            Specifies the CAML query that will be used by the list view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ReadOnlyView">
            <summary>
            Specifies if the view is read-only
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.RequiresClientIntegration">
            <summary>
            Specifies whether this view requires client integration
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.RowLimit">
            <summary>
            Specifies the limit for the number of items that the list view will return per page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.Scope">
            <summary>
            Specifies the recursive scope for the list view of a document library
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ServerRelativeUrl">
            <summary>
            Specifies the server relative URL of the list view page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.StyleId">
            <summary>
            Specifies the identifier of the view style for the list view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.TabularView">
            <summary>
            Gets or sets the TabularView attribute in the View Schema XML
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.Threaded">
            <summary>
            Gets a Boolean value that indicates whether the view is threaded
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.Title">
            <summary>
            Specifies the Display Name of the List View
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.Toolbar">
            <summary>
            Specifies the toolbar (CAML) for the list view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ToolbarTemplateName">
            <summary>
            Specifies the name of the toolbar template that is used for the list view toolbar
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ViewType">
            <summary>
            Specifies the type of the view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ViewData">
            <summary>
            Specifies the view data for the list view 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ViewType2">
            <summary>
            Gets or sets the ViewType2
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.ViewFields">
            <summary>
            Gets or sets View Fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IView.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IViewCollection">
            <summary>
            Public interface to define a collection of View objects
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IViewCollection.AddAsync(PnP.Core.Model.SharePoint.ViewOptions)">
            <summary>
            Asynchronously adds a new view
            </summary>
            <returns>View</returns>
            <param name="viewOptions">View options</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IViewCollection.Add(PnP.Core.Model.SharePoint.ViewOptions)">
            <summary>
            Adds a new view
            </summary>
            <param name="viewOptions">View options</param>
            <returns>View</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IViewCollection.AddBatchAsync(PnP.Core.Model.SharePoint.ViewOptions)">
            <summary>
            Add a view part of a batch asynchroniously
            </summary>
            <param name="viewOptions">View options</param>
            <returns>View</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IViewCollection.AddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.ViewOptions)">
            <summary>
            Add a view part of a specific batch asynchroniously
            </summary>
            <param name="batch">Batch to use</param>
            <param name="viewOptions">View options</param>
            <returns>View</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IViewCollection.AddBatch(PnP.Core.Model.SharePoint.ViewOptions)">
            <summary>
            Add a view part of a batch
            </summary>
            <param name="viewOptions">View options</param>
            <returns>View</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IViewCollection.AddBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.ViewOptions)">
            <summary>
            Add a view part of a specific batch asynchroniously
            </summary>
            <param name="batch">Batch to use</param>
            <param name="viewOptions">View options</param>
            <returns>View</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IViewFieldCollection">
            <summary>
            Public interface to define a ViewFieldCollection object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IViewFieldCollection.SchemaXml">
            <summary>
            To update...
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IWeb">
            <summary>
            Public interface to define a Web object of SharePoint Online
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Id">
            <summary>
            The Unique ID of the Web object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AccessRequestListUrl">
            <summary>
            Gets the URL of the access request list to the current site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AccessRequestSiteDescription">
            <summary>
            Gets or sets the description of the access request to this site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AllowAutomaticASPXPageIndexing">
            <summary>
            Gets a value that specifies whether the automatic ASPX page indexed is allowed.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AllowCreateDeclarativeWorkflowForCurrentUser">
            <summary>
            Gets a value that specifies whether the current user is allowed to create declarative workflow on this site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AllowDesignerForCurrentUser">
            <summary>
            Gets a value that specifies whether the current user is allowed to use a designer application to customize this site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AllowMasterPageEditingForCurrentUser">
            <summary>
            Gets a value that specifies whether the current user is allowed to edit the master page.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AllowRevertFromTemplateForCurrentUser">
            <summary>
            Gets a value that specifies whether the current user is allowed to revert the site to a default site template.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AllowRssFeeds">
            <summary>
            Gets a value that specifies whether the site allows RSS feeds.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AllowSaveDeclarativeWorkflowAsTemplateForCurrentUser">
            <summary>
            Gets a value that specifies whether the current user is allowed to save declarative workflows as template.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AllowSavePublishDeclarativeWorkflowForCurrentUser">
            <summary>
            Gets a value that specifies whether the current user is allowed to publish a declarative workflow.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AppInstanceId">
            <summary>
            The instance Id of the App Instance that this website represents.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.ContainsConfidentialInfo">
            <summary>
            Gets a boolean value that specifies whether the site contains highly confidential information.
            If the tenant settings don't allow tagging sites as confidential, this property will always return false.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Created">
            <summary>
            Gets a value that specifies when the site was created.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.DefaultNewPageTemplateId">
            <summary>
            The id of the default new page template. Use SetDefaultNewPageTemplateId to set the value.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.DesignPackageId">
            <summary>
            Gets or sets the design package Id of this site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.DisableRecommendedItems">
            <summary>
            Gets or sets whether the recommended items are disabled on this site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.DocumentLibraryCalloutOfficeWebAppPreviewersDisabled">
            <summary>
            Determines if the Document Library Callout's WAC previewers are enabled or not.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.EnableMinimalDownload">
            <summary>
            Gets or sets a Boolean value that specifies whether the Web site should use Minimal Download Strategy.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.FooterEmphasis">
            <summary>
            Gets or sets the value of the footer emphasis.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.FooterEnabled">
            <summary>
            Gets or sets a value that specifies whether the footer is enabled on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.FooterLayout">
            <summary>
            Gets or sets the value of the footer layout.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.HeaderEmphasis">
            <summary>
            Gets or sets the value of the header emphasis.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.HeaderLayout">
            <summary>
            Gets or sets the value of the header layout.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.HideTitleInHeader">
            <summary>
            Gets or sets a value that specifies whether the title in header is hidden on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.IsHomepageModernized">
            <summary>
            Gets a value that indicates whether the homepage is modernized.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.IsProvisioningComplete">
            <summary>
            Gets a value that indicates whether the provisioning is complete.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.IsRevertHomepageLinkHidden">
            <summary>
            Gets or sets a value that specifies whether the link to revert homepage is hidden.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Language">
            <summary>
            Gets a value that specifies the LCID for the language that is used on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.LastItemModifiedDate">
            <summary>
            Gets a value that specifies when an item was last modified in the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.LastItemUserModifiedDate">
            <summary>
            Gets a value that specifies when an item was last modified by user in the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.LogoAlignment">
            <summary>
            Gets or sets the logo alignment of the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.MasterUrl">
            <summary>
            Gets or sets the URL of the master page that is used for the website.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.MegaMenuEnabled">
            <summary>
            Gets or sets a value that specifies whether the megamenu is enabled on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.NavAudienceTargetingEnabled">
            <summary>
            Gets or sets a value that specifies whether the audience targeting is enabled on the navigation of the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.NextStepsFirstRunEnabled">
            <summary>
            Gets or sets a value that specifies if the Next steps pane should open automatically as a first run experience
            when someone visits the site. You can only enable the experience for sites created on or after January 1, 2020
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.NotificationsInOneDriveForBusinessEnabled">
            <summary>
            Returns if true if the tenant allowed to send push notifications in OneDrive for Business.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.NotificationsInSharePointEnabled">
            <summary>
            Returns if true if the tenant allowed to send push notifications in SharePoint.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.ObjectCacheEnabled">
            <summary>
            Gets or sets a value that specifies whether the object cache is enabled on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.PreviewFeaturesEnabled">
            <summary>
            Indicates whether the tenant administrator has chosen to disable the Preview Features. Default is true.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.PrimaryColor">
            <summary>
            Gets or sets the primary color of the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.RecycleBin">
            <summary>
            Gets the recycle bin of the website.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.RecycleBinEnabled">
            <summary>
            Gets or sets a value that specifies whether the Recycle Bin is enabled.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SaveSiteAsTemplateEnabled">
            <summary>
            Gets or sets a Boolean value that specifies whether the Web site can be saved as a site template.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SearchBoxPlaceholderText">
            <summary>
            Search placeholder text for search box in navbar - overrides default placeholder text if set, returns null if not set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.ServerRelativeUrl">
            <summary>
            Gets the server relative URL of the current site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SiteLogoDescription">
            <summary>
            Gets or sets the description of the Web site logo.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SiteLogoUrl">
            <summary>
            Gets or sets the server-relative URL of the Web site logo.
            This can also contain an absolute URL to the logo.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SyndicationEnabled">
            <summary>
            Gets or sets a value that specifies whether the RSS feeds are enabled on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.TenantAdminMembersCanShare">
            <summary>
            Gets or sets a value that specifies how the tenant admin members can share.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.ThemeData">
            <summary>
            Get JSON serialized ThemeData for the current web.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.ThirdPartyMdmEnabled">
            <summary>
            Gets a value that indicates whether third party MDM (Mobile Device Management) is enabled on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.TreeViewEnabled">
            <summary>
            Gets or sets value that specifies whether the tree view is enabled on the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.UseAccessRequestDefault">
            <summary>
            Determines if we need to use the default access request
            If this value is True we send access requests to owner/owner's group
            If this value is False we send access requests to the configured AccessRequestEmail
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.WebTemplate">
            <summary>
            Gets the name of the site definition or site template that was used to create the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.WebTemplateConfiguration">
            <summary>
            Gets the web template configuration of the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.NoCrawl">
            <summary>
            Defines whether the site has to be crawled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.RequestAccessEmail">
            <summary>
            The email address to which any access request will be sent
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.WelcomePage">
            <summary>
            Specifies a string that contains the site-relative URL to which users are redirected when web is browsed (typically the site's home page).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Title">
            <summary>
            The Title of the Site, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Description">
            <summary>
            The Description of the Site, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AlternateCssUrl">
            <summary>
            The AlternateCSS of the Site, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.CustomMasterUrl">
            <summary>
            The Custom MasterPage Url of the Site, optional attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.CommentsOnSitePagesDisabled">
            <summary>
            Defines whether the comments on site pages are disabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.QuickLaunchEnabled">
            <summary>
            Enables or disables the QuickLaunch for the site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.IsMultilingual">
            <summary>
            Defines whether to enable Multilingual capabilities for the current web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.OverwriteTranslationsOnChange">
            <summary>
            Defines whether to OverwriteTranslationsOnChange on change for the current web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.ExcludeFromOfflineClient">
            <summary>
            Defines whether to exclude the web from offline client
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.MembersCanShare">
            <summary>
            Defines whether members can share content from the current web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.DisableFlows">
            <summary>
            Defines whether disable flows for the current web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.DisableAppViews">
            <summary>
            Defines whether disable PowerApps for the current web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.HorizontalQuickLaunch">
            <summary>
            Defines whether to enable the Horizontal QuickLaunch for the current web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SearchScope">
            <summary>
            Defines the SearchScope for the site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SearchBoxInNavBar">
            <summary>
            Define if the suitebar search box should show or not 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Url">
            <summary>
            The URL of the Web object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SupportedUILanguageIds">
            <summary>
            List of languages (expressed via their id) that this site supports
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.CurrentUser">
            <summary>
            Gets the current user in the current context
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Lists">
            <summary>
            Collection of lists in the current Web object.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.ContentTypes">
            <summary>
            Collection of content types in the current Web object
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Fields">
            <summary>
            Collection of fields in the current Web object
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Webs">
            <summary>
            Collection of webs in this current web
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Features">
            <summary>
            Collection of features enabled for the web
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Folders">
            <summary>
            Collection of folders in the current Web object
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AllProperties">
            <summary>
            Gets a collection of metadata for the Web site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AvailableContentTypes">
            <summary>
            Gets the collection of all content types that apply to the current scope, including those of the current Web site, as well as any parent Web sites.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AvailableFields">
            <summary>
            Gets a value that specifies the collection of all fields available for the current scope, including those of the current site, as well as any parent sites.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.RootFolder">
            <summary>
            Gets the root folder for the website.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SiteUserInfoList">
            <summary>
            Gets the UserInfo list of the site collection that contains the website.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SiteUsers">
            <summary>
            Gets the collection of all users that belong to the site collection.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.SiteGroups">
            <summary>
            Gets the collection of all groups that belong to the site collection.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.UserCustomActions">
            <summary>
            Gets a value that specifies the collection of user custom actions for the site.
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.EffectiveBasePermissions">
            <summary>
            Get's the permission levels set on this web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.RegionalSettings">
            <summary>
            Regional settings configured for this web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AssociatedMemberGroup">
            <summary>
            Associated SharePoint Member group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AssociatedOwnerGroup">
            <summary>
            Associated SharePoint owner group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.AssociatedVisitorGroup">
            <summary>
            Associated SharePoint Visitor group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.RoleDefinitions">
            <summary>
            Role Definitions defined in this web
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.Navigation">
            <summary>
            Navigation on the Web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.EventReceivers">
            <summary>
            Event Receivers defined in this web
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWeb.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetPagesAsync(System.String)">
            <summary>
            Gets the modern pages of this site, optionally scoped down via a filter
            </summary>
            <param name="pageName">Page name to filter on, uses a "starts with" filter</param>
            <returns>One of more modern pages</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetPages(System.String)">
            <summary>
            Gets the modern pages of this site, optionally scoped down via a filter
            </summary>
            <param name="pageName">Page name to filter on, uses a "starts with" filter</param>
            <returns>One of more modern pages</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetVivaDashboardAsync">
            <summary>
            Gets Viva Connections dashboard.
            If there is no dashboard configured, returns null
            </summary>
            <returns>Viva Dashboard or null</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetVivaDashboard">
            <summary>
            Gets Viva Connections dashboard.
            If there is no dashboard configured, returns null
            </summary>
            <returns>Viva Dashboard or null</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.NewPageAsync(PnP.Core.Model.SharePoint.PageLayoutType)">
            <summary>
            Creates a new modern page
            </summary>
            <param name="pageLayoutType">Optionally specify the page type, defaults to <see cref="F:PnP.Core.Model.SharePoint.PageLayoutType.Article"/></param>
            <returns>Created modern page</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.NewPage(PnP.Core.Model.SharePoint.PageLayoutType)">
            <summary>
            Creates a new modern page
            </summary>
            <param name="pageLayoutType">Optionally specify the page type, defaults to <see cref="F:PnP.Core.Model.SharePoint.PageLayoutType.Article"/></param>
            <returns>Created modern page</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByServerRelativeUrlAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its server relative URL.
            </summary>
            <param name="serverRelativeUrl">The server relative URL of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByServerRelativeUrl(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its server relative URL.
            </summary>
            <param name="serverRelativeUrl">The server relative URL of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByServerRelativeUrlBatchAsync(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its server relative URL via batch.
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="serverRelativeUrl">The server relative URL of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByServerRelativeUrlBatch(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its server relative URL via batch.
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="serverRelativeUrl">The server relative URL of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByServerRelativeUrlBatchAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its server relative URL via batch.
            </summary>
            <param name="serverRelativeUrl">The server relative URL of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByServerRelativeUrlBatch(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its server relative URL via batch.
            </summary>
            <param name="serverRelativeUrl">The server relative URL of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByIdAsync(System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its id.
            </summary>
            <param name="folderId">The id of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderById(System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its id.
            </summary>
            <param name="folderId">The id of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByIdBatchAsync(PnP.Core.Services.Batch,System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its id via batch.
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="folderId">The id of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByIdBatch(PnP.Core.Services.Batch,System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its id via batch.
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="folderId">The id of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByIdBatchAsync(System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its id via batch.
            </summary>
            <param name="folderId">The id of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFolderByIdBatch(System.Guid,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Get a folder in the current web from its id via batch.
            </summary>
            <param name="folderId">The id of the folder to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The folder to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFileByServerRelativeUrlOrDefault(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFile,System.Object}}[])">
            <summary>
            Get a file in the current web from its server relative URL, it not available null will be returned
            </summary>
            <param name="serverRelativeUrl">The server relative URL of the file to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The file to get or null if the file was not available</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFileByServerRelativeUrlOrDefaultAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFile,System.Object}}[])">
            <summary>
            Get a file in the current web from its server relative URL, it not available null will be returned
            </summary>
            <param name="serverRelativeUrl">The server relative URL of the file to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The file to get or null if the file was not available</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFileByServerRelativeUrlAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFile,System.Object}}[])">
            <summary>
            Get a file in the current web from its server relative URL.
            </summary>
            <param name="serverRelativeUrl">The server relative URL of the file to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The file to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFileByServerRelativeUrl(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFile,System.Object}}[])">
            <summary>
            Get a file in the current web from its server relative URL.
            </summary>
            <param name="serverRelativeUrl">The server relative URL of the file to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The file to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFileByServerRelativeUrlBatchAsync(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFile,System.Object}}[])">
            <summary>
            Get a file in the current web from its server relative URL via batch.
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="serverRelativeUrl">The server relative URL of the file to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The file to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFileByServerRelativeUrlBatch(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFile,System.Object}}[])">
            <summary>
            Get a file in the current web from its server relative URL via batch.
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="serverRelativeUrl">The server relative URL of the file to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The file to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFileByServerRelativeUrlBatchAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFile,System.Object}}[])">
            <summary>
            Get a file in the current web from its server relative URL via batch.
            </summary>
            <param name="serverRelativeUrl">The server relative URL of the file to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The file to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetFileByServerRelativeUrlBatch(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFile,System.Object}}[])">
            <summary>
            Get a file in the current web from its server relative URL via batch.
            </summary>
            <param name="serverRelativeUrl">The server relative URL of the file to get.</param>
            <param name="expressions">Expressions needed to create the request</param>
            <returns>The file to get</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.IsNoScriptSiteAsync">
            <summary>
            Checks if this web is configured for NoScript
            </summary>
            <returns>True if set to NoScript, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.IsNoScriptSite">
            <summary>
            Checks if this web is configured for NoScript
            </summary>
            <returns>True if set to NoScript, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.EnsureUserAsync(System.String)">
            <summary>
            Ensures the given users exists
            </summary>
            <param name="userPrincipalName">UserPrincipalName value of the user to verify</param>
            <returns>The ensured <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.EnsureUser(System.String)">
            <summary>
            Ensures the given users exists
            </summary>
            <param name="userPrincipalName">UserPrincipalName value of the user to verify</param>
            <returns>The ensured <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.EnsureUserBatchAsync(System.String)">
            <summary>
            Ensures the given users exists
            </summary>
            <param name="userPrincipalName">UserPrincipalName value of the user to verify</param>
            <returns>The ensured <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.EnsureUserBatch(System.String)">
            <summary>
            Ensures the given users exists
            </summary>
            <param name="userPrincipalName">UserPrincipalName value of the user to verify</param>
            <returns>The ensured <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.EnsureUserBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Ensures the given users exists
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="userPrincipalName">UserPrincipalName value of the user to verify</param>
            <returns>The ensured <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.EnsureUserBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Ensures the given users exists
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="userPrincipalName">UserPrincipalName value of the user to verify</param>
            <returns>The ensured <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetCurrentUserAsync">
            <summary>
            Get's the current logged on user making the request to SharePoint
            </summary>
            <returns>The current <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetCurrentUser">
            <summary>
            Get's the current logged on user making the request to SharePoint
            </summary>
            <returns>The current <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetCurrentUserBatchAsync">
            <summary>
            Get's the current logged on user making the request to SharePoint
            </summary>
            <returns>The current <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetCurrentUserBatch">
            <summary>
            Get's the current logged on user making the request to SharePoint
            </summary>
            <returns>The current <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetCurrentUserBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Get's the current logged on user making the request to SharePoint
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns>The current <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetCurrentUserBatch(PnP.Core.Services.Batch)">
            <summary>
            Get's the current logged on user making the request to SharePoint
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns>The current <see cref="T:PnP.Core.Model.Security.ISharePointUser"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetUserById(System.Int32)">
            <summary>
            Get's a user by it's id in this site. The user needs to exist, use <see cref="M:PnP.Core.Model.SharePoint.IWeb.EnsureUser(System.String)"/> if you want to create the user if it does not yet exist
            </summary>
            <param name="userId">Id of the user to get</param>
            <returns>The found user as <see cref="T:PnP.Core.Model.Security.ISharePointPrincipal"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetUserByIdAsync(System.Int32)">
            <summary>
            Get's a user by it's id in this site. The user needs to exist, use <see cref="M:PnP.Core.Model.SharePoint.IWeb.EnsureUserAsync(System.String)"/> if you want to create the user if it does not yet exist
            </summary>
            <param name="userId">Id of the user to get</param>
            <returns>The found user as <see cref="T:PnP.Core.Model.Security.ISharePointPrincipal"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetUserByIdBatch(System.Int32)">
            <summary>
            Get's a user by it's id in this site. The user needs to exist, use <see cref="M:PnP.Core.Model.SharePoint.IWeb.EnsureUserBatch(System.String)"/> if you want to create the user if it does not yet exist
            </summary>
            <param name="userId">Id of the user to get</param>
            <returns>The found user as <see cref="T:PnP.Core.Model.Security.ISharePointPrincipal"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetUserByIdBatchAsync(System.Int32)">
            <summary>
            Get's a user by it's id in this site. The user needs to exist, use <see cref="M:PnP.Core.Model.SharePoint.IWeb.EnsureUserBatchAsync(System.String)"/> if you want to create the user if it does not yet exist
            </summary>
            <param name="userId">Id of the user to get</param>
            <returns>The found user as <see cref="T:PnP.Core.Model.Security.ISharePointPrincipal"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetUserByIdBatch(PnP.Core.Services.Batch,System.Int32)">
            <summary>
            Get's a user by it's id in this site. The user needs to exist, use <see cref="M:PnP.Core.Model.SharePoint.IWeb.EnsureUserBatch(System.String)"/> if you want to create the user if it does not yet exist
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="userId">Id of the user to get</param>
            <returns>The found user as <see cref="T:PnP.Core.Model.Security.ISharePointPrincipal"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetUserByIdBatchAsync(PnP.Core.Services.Batch,System.Int32)">
            <summary>
            Get's a user by it's id in this site. The user needs to exist, use <see cref="M:PnP.Core.Model.SharePoint.IWeb.EnsureUserBatchAsync(System.String)"/> if you want to create the user if it does not yet exist
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="userId">Id of the user to get</param>
            <returns>The found user as <see cref="T:PnP.Core.Model.Security.ISharePointPrincipal"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.EnsureMultilingualAsync(System.Collections.Generic.List{System.Int32})">
            <summary>
            Ensure a site can support multilingual (pages) for the passed along languages
            </summary>
            <param name="requiredLanguageIds">List of langauges to support for multilingual on this site. See https://capacreative.co.uk/resources/reference-sharepoint-online-languages-ids/ for information on the language ids</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.EnsureMultilingual(System.Collections.Generic.List{System.Int32})">
            <summary>
            Ensure a site can support multilingual (pages) for the passed along languages
            </summary>
            <param name="requiredLanguageIds">List of langauges to support for multilingual on this site. See https://capacreative.co.uk/resources/reference-sharepoint-online-languages-ids/ for information on the language ids</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.IsSyntexEnabledAsync">
            <summary>
            Is the tenant enabled for SharePoint Syntex
            </summary>
            <returns>True if SharePoint Syntex is enabled, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.IsSyntexEnabled">
            <summary>
            Is the tenant enabled for SharePoint Syntex
            </summary>
            <returns>True if SharePoint Syntex is enabled, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.IsSyntexEnabledForCurrentUserAsync">
            <summary>
            Is SharePoint Syntex enabled for the current user
            </summary>
            <returns>True if SharePoint Syntex is enabled for the current user, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.IsSyntexEnabledForCurrentUser">
            <summary>
            Is SharePoint Syntex enabled for the current user
            </summary>
            <returns>True if SharePoint Syntex is enabled for the current user, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.IsSyntexContentCenterAsync">
            <summary>
            Is this web a Syntex Content Center
            </summary>
            <returns>True if this web is a Syntex Content Center, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.IsSyntexContentCenter">
            <summary>
            Is this web a Syntex Content Center
            </summary>
            <returns>True if this web is a Syntex Content Center, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.AsSyntexContentCenterAsync">
            <summary>
            Returns the current web as <see cref="T:PnP.Core.Model.SharePoint.ISyntexContentCenter"/> if the web is a Syntex Content Center, null is returned otherwise
            </summary>
            <returns>The current web as <see cref="T:PnP.Core.Model.SharePoint.ISyntexContentCenter"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.AsSyntexContentCenter">
            <summary>
            Returns the current web as <see cref="T:PnP.Core.Model.SharePoint.ISyntexContentCenter"/> if the web is a Syntex Content Center, null is returned otherwise
            </summary>
            <returns>The current web as <see cref="T:PnP.Core.Model.SharePoint.ISyntexContentCenter"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.SyncHubSiteThemeAsync">
            <summary>
            Sync the hub site theme from parent hub site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.IsSubSiteAsync">
            <summary>
            Checks if this web is a sub site
            </summary>
            <returns>True if the web is a sub site</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.IsSubSite">
            <summary>
            Checks if this web is a sub site
            </summary>
            <returns>True if the web is a sub site</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.EnsurePageSchedulingAsync">
            <summary>
            Ensures that page publishing can work for this site. Page scheduling only works for the root web of a site collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.EnsurePageScheduling">
            <summary>
            Ensures that page publishing can work for this site. Page scheduling only works for the root web of a site collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.HasCommunicationSiteFeaturesAsync">
            <summary>
            Does this web have the communication site features enabled?
            </summary>
            <returns>True if enabled, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.HasCommunicationSiteFeatures">
            <summary>
            Does this web have the communication site features enabled?
            </summary>
            <returns>True if enabled, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetBrandingManager">
            <summary>
            Returns the branding manager which can be used to change the look of the web
            </summary>
            <returns>An <see cref="T:PnP.Core.Model.SharePoint.IBrandingManager"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.SearchAsync(PnP.Core.Model.SharePoint.SearchOptions)">
            <summary>
            Performs a search query
            </summary>
            <param name="query">Search query to run</param>
            <returns>The results of the search query</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.Search(PnP.Core.Model.SharePoint.SearchOptions)">
            <summary>
            Performs a search query
            </summary>
            <param name="query">Search query to run</param>
            <returns>The results of the search query</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.SearchBatchAsync(PnP.Core.Model.SharePoint.SearchOptions)">
            <summary>
            Performs a search query
            </summary>
            <param name="query">Search query to run</param>
            <returns>The results of the search query</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.SearchBatch(PnP.Core.Model.SharePoint.SearchOptions)">
            <summary>
            Performs a search query
            </summary>
            <param name="query">Search query to run</param>
            <returns>The results of the search query</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.SearchBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.SearchOptions)">
            <summary>
            Performs a search query
            </summary>
            <param name="query">Search query to run</param>
            <param name="batch">Batch to add this request to</param>
            <returns>The results of the search query</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.SearchBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.SearchOptions)">
            <summary>
            Performs a search query
            </summary>
            <param name="query">Search query to run</param>
            <param name="batch">Batch to add this request to</param>
            <returns>The results of the search query</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplatesAsync(System.Int32,System.Boolean)">
            <summary>
            Returns a collection of site templates available for the site.
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <returns>The list of webtemplates available on the current web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplates(System.Int32,System.Boolean)">
            <summary>
            Returns a collection of site templates available for the site.
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <returns>The list of webtemplates available on the current web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplatesBatchAsync(System.Int32,System.Boolean)">
            <summary>
            Returns a collection of site templates available for the site.
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <returns>The list of webtemplates available on the current web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplatesBatch(System.Int32,System.Boolean)">
            <summary>
            Returns a collection of site templates available for the site.
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <returns>The list of webtemplates available on the current web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplatesBatchAsync(PnP.Core.Services.Batch,System.Int32,System.Boolean)">
            <summary>
            Returns a collection of site templates available for the site.
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <param name="batch">Batch to add this request to</param>
            <returns>The list of webtemplates available on the current web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplatesBatch(PnP.Core.Services.Batch,System.Int32,System.Boolean)">
            <summary>
            Returns a collection of site templates available for the site.
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <param name="batch">Batch to add this request to</param>
            <returns>The list of webtemplates available on the current web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplateByNameAsync(System.String,System.Int32,System.Boolean)">
            <summary>
            Return a specific web template based by a name
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <param name="name">Name of the template to retrieve</param>
            <returns>The template with the specified name, if available</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplateByName(System.String,System.Int32,System.Boolean)">
            <summary>
            Return a specific web template based by a name
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <param name="name">Name of the template to retrieve</param>
            <returns>The template with the specified name, if available</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplateByNameBatchAsync(System.String,System.Int32,System.Boolean)">
            <summary>
            Return a specific web template based by a name
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <param name="name">Name of the template to retrieve</param>
            <returns>The list of webtemplates available on the current web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplateByNameBatch(System.String,System.Int32,System.Boolean)">
            <summary>
            Return a specific web template based by a name
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <param name="name">Name of the template to retrieve</param>
            <returns>The template with the specified name, if available</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplateByNameBatchAsync(PnP.Core.Services.Batch,System.String,System.Int32,System.Boolean)">
            <summary>
            Return a specific web template based by a name
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <param name="name">Name of the template to retrieve</param>
            <param name="batch">Batch to add this request to</param>
            <returns>The template with the specified name, if available</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWebTemplateByNameBatch(PnP.Core.Services.Batch,System.String,System.Int32,System.Boolean)">
            <summary>
            Return a specific web template based by a name
            </summary>
            <param name="lcid">Specifies the LCID of the site templates to be retrieved.</param>
            <param name="includeCrossLanguage">Specifies whether to include language-neutral site templates.</param>
            <param name="name">Name of the template to retrieve</param>
            <param name="batch">Batch to add this request to</param>
            <returns>The template with the specified name, if available</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.UnfurlLinkAsync(System.String,PnP.Core.Model.SharePoint.UnfurlOptions)">
            <summary>
            Takes in a sharing or regular SharePoint link and tries to provide relavant information about the resource behind the passed in link
            </summary>
            <param name="link">Link to resource to get information for</param>
            <param name="unfurlOptions">Options to control the unfurling data gathering</param>
            <returns>Data about the unfurled resource</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.UnfurlLink(System.String,PnP.Core.Model.SharePoint.UnfurlOptions)">
            <summary>
            Takes in a sharing or regular SharePoint link and tries to provide relavant information about the resource behind the passed in link
            </summary>
            <param name="link">Link to resource to get information for</param>
            <param name="unfurlOptions">Options to control the unfurling data gathering</param>
            <returns>Data about the unfurled resource</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetRecycleBinItemsByQueryAsync(PnP.Core.Model.SharePoint.RecycleBinQueryOptions)">
            <summary>
            Searches the recyclebin returning items based upon the passed search criteria
            </summary>
            <param name="options">Recycle bin search criteria</param>
            <returns>A list containing zero or more recycle bin items</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetRecycleBinItemsByQuery(PnP.Core.Model.SharePoint.RecycleBinQueryOptions)">
            <summary>
            Searches the recyclebin returning items based upon the passed search criteria
            </summary>
            <param name="options">Recycle bin search criteria</param>
            <returns>A list containing zero or more recycle bin items</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetRecycleBinItemsByQueryBatchAsync(PnP.Core.Model.SharePoint.RecycleBinQueryOptions)">
            <summary>
            Searches the recyclebin returning items based upon the passed search criteria
            </summary>
            <param name="options">Recycle bin search criteria</param>
            <returns>A list containing zero or more recycle bin items</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetRecycleBinItemsByQueryBatch(PnP.Core.Model.SharePoint.RecycleBinQueryOptions)">
            <summary>
            Searches the recyclebin returning items based upon the passed search criteria
            </summary>
            <param name="options">Recycle bin search criteria</param>
            <returns>A list containing zero or more recycle bin items</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetRecycleBinItemsByQueryBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.RecycleBinQueryOptions)">
            <summary>
            Searches the recyclebin returning items based upon the passed search criteria
            </summary>
            <param name="options">Recycle bin search criteria</param>
            <param name="batch">Batch to add this request to</param>
            <returns>A list containing zero or more recycle bin items</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetRecycleBinItemsByQueryBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.RecycleBinQueryOptions)">
            <summary>
            Searches the recyclebin returning items based upon the passed search criteria
            </summary>
            <param name="options">Recycle bin search criteria</param>
            <param name="batch">Batch to add this request to</param>
            <returns>A list containing zero or more recycle bin items</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetSearchConfigurationXmlAsync">
            <summary>
            Gets the search configuration of the web
            </summary>
            <returns>Search configuration XML</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetSearchConfigurationXml">
            <summary>
            Gets the search configuration of the web
            </summary>
            <returns>Search configuration XML</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetSearchConfigurationManagedPropertiesAsync">
            <summary>
            Gets the managed properties from the search configuration of this web
            </summary>
            <returns>List of managed properties</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetSearchConfigurationManagedProperties">
            <summary>
            Gets the managed properties from the search configuration of this web
            </summary>
            <returns>List of managed properties</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.SetSearchConfigurationXmlAsync(System.String)">
            <summary>
            Sets the search configuration for the web
            </summary>
            <param name="configuration">Search configuration, obtained via <see cref="M:PnP.Core.Model.SharePoint.IWeb.GetSearchConfigurationXml"/> to apply</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.SetSearchConfigurationXml(System.String)">
            <summary>
            Sets the search configuration for the web
            </summary>
            <param name="configuration">Search configuration, obtained via <see cref="M:PnP.Core.Model.SharePoint.IWeb.GetSearchConfigurationXml"/> to apply</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWssIdForTermAsync(System.String)">
            <summary>
            Returns the Id for a term if present in the TaxonomyHiddenList. Otherwise returns -1;
            </summary>
            <param name="termId">Id of the term to lookup</param>
            <returns>Id of the term in the taxonomy hidden list, otherwise -1</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWeb.GetWssIdForTerm(System.String)">
            <summary>
            Returns the Id for a term if present in the TaxonomyHiddenList. Otherwise returns -1;
            </summary>
            <param name="termId">Id of the term to lookup</param>
            <returns>Id of the term in the taxonomy hidden list, otherwise -1</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IWebCollection">
            <summary>
            Public interface to define a collection of Web objects of SharePoint Online
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWebCollection.AddAsync(PnP.Core.Model.SharePoint.WebOptions)">
            <summary>
            Adds a new web to the current web
            </summary>
            <param name="webOptions">Options used when creating the new web</param>
            <returns>The newly created web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWebCollection.Add(PnP.Core.Model.SharePoint.WebOptions)">
            <summary>
            Adds a new web to the current web
            </summary>
            <param name="webOptions">Options used when creating the new web</param>
            <returns>The newly created web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWebCollection.AddBatchAsync(PnP.Core.Model.SharePoint.WebOptions)">
            <summary>
            Adds a new web to the current web
            </summary>
            <param name="webOptions">Options used when creating the new web</param>
            <returns>The newly created web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWebCollection.AddBatch(PnP.Core.Model.SharePoint.WebOptions)">
            <summary>
            Adds a new web to the current web
            </summary>
            <param name="webOptions">Options used when creating the new web</param>
            <returns>The newly created web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWebCollection.AddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.WebOptions)">
            <summary>
            Adds a new web to the current web
            </summary>
            <param name="batch">Batch to use</param>
            <param name="webOptions">Options used when creating the new web</param>
            <returns>The newly created web</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IWebCollection.AddBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.WebOptions)">
            <summary>
            Adds a new web to the current web
            </summary>
            <param name="batch">Batch to use</param>
            <param name="webOptions">Options used when creating the new web</param>
            <returns>The newly created web</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IWebTemplate">
            <summary>
            Specifies a site definition or a site template that is used to instantiate a site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWebTemplate.Description">
            <summary>
            Specifies the description for the site definition configuration or site template.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWebTemplate.DisplayCategory">
            <summary>
            Specifies the display name for the category that this site definition configuration or site template is a part of.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWebTemplate.Id">
            <summary>
            Specifies the unique identifier for the site definition configuration or the site template.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWebTemplate.ImageUrl">
            <summary>
            Specifies the URI for the image that is associated with the site definition configuration or site template.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWebTemplate.IsHidden">
            <summary>
            Specifies whether the site definition configuration or site template can only be applied to the top-level site in the site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWebTemplate.IsRootWebOnly">
            <summary>
            Specifies whether the site definition configuration or site template can only be applied to subsites created within the site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWebTemplate.IsSubWebOnly">
            <summary>
            Specifies whether the template can only be applied to subwebs
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWebTemplate.Lcid">
            <summary>
            Specifies the LCID for the site definition configuration or site template.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWebTemplate.Name">
            <summary>
            Specifies the name for the site definition configuration or site template.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IWebTemplate.Title">
            <summary>
            Specifies the display name for the site definition configuration or site template.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AddContentTypeFromHubOptions">
            <summary>
            Defines the options that control the adding of content types from the content type hub
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddContentTypeFromHubOptions.WaitForCompletion">
            <summary>
            Wait for the, possibly async, add operation to complete
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddContentTypeFromHubOptions.LongRunningOperationOptions">
            <summary>
            Defines the wait behavior for when the adding happens async
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AddUserCustomActionOptions">
            <summary>
            Options to specify when adding User Custom Action
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.ClientSideComponentId">
            <summary>
            Gets or sets the unique identifier of the associated client side component.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.ClientSideComponentProperties">
            <summary>
            Gets or sets the JSON formatted properties of the associated client side component.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.CommandUIExtension">
            <summary>
            Gets or sets a value that specifies an implementation specific XML fragment that determines user interface properties of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.Description">
            <summary>
            Gets or sets the description of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.Group">
            <summary>
            Gets or sets a value that specifies an implementation-specific value that determines the position of the custom action in the page.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.HostProperties">
            <summary>
            This property is only used when an application customizer is created and preallocated placeholders are specified.  
            It is optional. If non-empty, the string must contain a JSON object with one or two properties for the height 
            amount needed to be preallocated.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.ImageUrl">
            <summary>
            Gets or sets the URL of the image associated with the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.Location">
            <summary>
            Gets or sets the location of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.Name">
            <summary>
            Gets or sets the name of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.RegistrationId">
            <summary>
            Gets or sets the value that specifies the identifier of the object associated with the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.RegistrationType">
            <summary>
            Gets or sets the value that specifies the type of object associated with the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.ScriptBlock">
            <summary>
            Gets or sets the value that specifies the ECMAScript to be executed when the custom action is performed.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.ScriptSrc">
            <summary>
            Gets or sets a value that specifies the URI of a file which contains the ECMAScript to execute on the page.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.Sequence">
            <summary>
            Gets or sets the value that specifies an implementation-specific value that determines the order of the custom action that appears on the page.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.Title">
            <summary>
            Gets or sets the display title of the custom action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.Url">
            <summary>
            Gets or sets the URL, URI, or ECMAScript (JScript, JavaScript) function associated with the action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AddUserCustomActionOptions.Rights">
            <summary>
            Gets or sets the Rights for this action.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AnalyticsOptions">
            <summary>
            Defines what analytics must be retrieved
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AnalyticsOptions.Interval">
            <summary>
            Defines the analytics interval, defaults to all time
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AnalyticsOptions.CustomStartDate">
            <summary>
            Start date (UTC) for analytics retrieval using <see cref="F:PnP.Core.Model.SharePoint.AnalyticsInterval.Custom"/> as interval
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AnalyticsOptions.CustomEndDate">
            <summary>
            End date (UTC) for analytics retrieval using <see cref="F:PnP.Core.Model.SharePoint.AnalyticsInterval.Custom"/> as interval
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AnalyticsOptions.CustomAggregationInterval">
            <summary>
            Aggregation interval for analytics retrieval using <see cref="F:PnP.Core.Model.SharePoint.AnalyticsInterval.Custom"/> as interval. Defaults to Day
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CamlQueryOptions">
            <summary>
            Options for making a CAML query to SharePoint Online
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CamlQueryOptions.ViewXml">
            <summary>
            Caml query to execute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CamlQueryOptions.AllowIncrementalResults">
            <summary>
            Can the query return incremental results
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CamlQueryOptions.DatesInUtc">
            <summary>
            Return dates in UTC format
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CamlQueryOptions.FolderServerRelativeUrl">
            <summary>
            Specifies the server relative URL of a list folder from which results will be returned
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CamlQueryOptions.PagingInfo">
            <summary>
            Value that specifies information, as name-value pairs, required to get the next page of data for a list view
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CommonFieldOptions">
            <summary>
            Available options for adding most of SharePoint fields
            (Excepted Lookup fields)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.Id">
            <summary>
            Guid of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.Required">
            <summary>
            Sets whether the field is required
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.AddToDefaultView">
            <summary>
            Add this field to the default view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.Options">
            <summary>
            An <see cref="T:PnP.Core.Model.SharePoint.AddFieldOptionsFlags"/> flag that specifies the field options to be applied during add
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.Description">
            <summary>
            Sets the description of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.DefaultFormula">
            <summary>
            Sets the default formula of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.EnforceUniqueValues">
            <summary>
            Sets whether the field enforces unique values
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.Group">
            <summary>
            Sets the group of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.Hidden">
            <summary>
            Sets whether the field is hidden
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.Indexed">
            <summary>
            Sets whether the field is indexed
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.ValidationFormula">
            <summary>
            Sets the validation formula of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.ValidationMessage">
            <summary>
            Sets the validation message of the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.ShowInEditForm">
            <summary>
            Show this field on the list's edit form
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.ShowInViewForms">
            <summary>
            Show this field on the list's view forms
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.ShowInNewForm">
            <summary>
            Show this field on the list's new form
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CommonFieldOptions.CustomFormatter">
            <summary>
            Allows you to set custom formatting JSON (https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/column-formatting#supported-column-types) on the field
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ConvertToOptions">
            <summary>
            Defines the options for converting a file to another format
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ConvertToOptions.Format">
            <summary>
            The desired target format for the converted file. Defaults to PDF
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ConvertToOptions.StreamContent">
            <summary>
            Return a streaming response or return all bytes at once. Defaults to false
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ConvertToOptions.JpgFormatWidth">
            <summary>
            When <see cref="F:PnP.Core.Model.SharePoint.ConvertToFormat.Jpg"/> is used then you also need to specify the jpg width. Defaults to 300
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.ConvertToOptions.JpgFormatHeight">
            <summary>
            When <see cref="F:PnP.Core.Model.SharePoint.ConvertToFormat.Jpg"/> is used then you also need to specify the jpg height. Defaults to 300
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CopyMigrationOptions">
            <summary>
            Optional options that can be passed to the migration job
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CopyMigrationOptions.AllowSchemaMismatch">
            <summary>
            This allows the item to move even if the target has a mismatched schema definition from the source list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CopyMigrationOptions.AllowSmallerVersionLimitOnDestination">
            <summary>
            This allows the move to take place if the target file has older version. By default it’s disallowed to prevent data loss.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CopyMigrationOptions.IgnoreVersionHistory">
            <summary>
            If not specified, the version history will be ignored and not moved to the destination.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CopyMigrationOptions.IsMoveMode">
            <summary>
            By default, this is set to copy. For a move operation, set this parameter to true.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CopyMigrationOptions.NameConflictBehavior">
            <summary>
            If a name conflict occurs at the target site, the default reports a failure.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CopyMigrationOptions.BypassSharedLock">
            <summary>
            This indicates whether a file with a share lock can still be moved in a move job. If you want to move a file that is locked, you need to set this.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CopyMigrationOptions.ClientEtags">
            <summary>
            If set, and the source eTag doesn’t match the eTag specified, the copy and move won’t take place. If left NULL, no check will take place.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CopyMigrationOptions.MoveButKeepSource">
            <summary>
            Once set, this move operation is similar to copy. The file will move to destination, but the source content will not be deleted. If set, this will make a copy with the version history and preserve the original metadata. No source item deletions occurs at the end.
            This is not like the normal copy, which only copies the most recent major version and doesn't maintain all the metadata.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CopyMigrationOptions.ExcludeChildren">
            <summary>
            For this operation, only the root level folder of the URL is copied. The sub-folders or files within the folder will not be moved or copied.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CustomThumbnailOptions">
            <summary>
            Options to define a custom thumbnail to retrieve
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CustomThumbnailOptions.Width">
            <summary>
            Generate a thumbnail that fits inside a Width x Height pixel box, maintaining aspect ratio
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CustomThumbnailOptions.Height">
            <summary>
            Generate a thumbnail that fits inside a Width x Height pixel box, maintaining aspect ratio
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CustomThumbnailOptions.Cropped">
            <summary>
            Generate a thumbnail that fits inside a Width x Height pixel box, maintaining aspect ratio, followed by 
            resizing the image to fill the Width x Height box and cropping whatever spills outside the box.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.DocumentSetContentOptions">
            <summary>
            Options for default document set content
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetContentOptions.File">
            <summary>
            File to add as default content
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetContentOptions.ContentTypeId">
            <summary>
            Content type of the file to add as default content
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetContentOptions.FileName">
            <summary>
            File name of the file to be added as default content
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetContentOptions.FolderName">
            <summary>
            Folder name of the default content
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.DocumentSetOptions">
            <summary>
            Available options for a Document Set
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.ShouldPrefixNameToFile">
            <summary>
            Indicates whether to add the name of the document set to each file name.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.WelcomePageUrl">
            <summary>
            Welcome page absolute URL.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.PropagateWelcomePageChanges">
            <summary>
            Specifies whether to push welcome page changes to inherited content types.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.KeepExistingContentTypes">
            <summary>
            Defines if we keep the existing content types that are already allowed in the document set
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.AllowedContentTypes">
            <summary>
            List of the allowed content types in the document set
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.KeepExistingSharedColumns">
            <summary>
            Defines if we keep the existing shared columns or delete those (by not adding them to our body)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.SharedColumns">
            <summary>
            Columns edited on the document set that synchronize to all documents in the set. 
            These are read-only on the documents themselves.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.KeepExistingWelcomePageColumns">
            <summary>
            Defines if we keep the existing welcome page columns or delete those (by not adding them to our body)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.WelcomePageColumns">
            <summary>
            Specifies columns to show on the welcome page for the document set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.KeepExistingDefaultContent">
            <summary>
            Defines if we keep the existing default contents or delete those (by not adding them to our body)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.DocumentSetOptions.DefaultContents">
            <summary>
            Default contents of document set.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.EventReceiverOptions">
            <summary>
            Options that will have to be filled in when creating a new Event Receiver
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.EventReceiverOptions.EventType">
            <summary>
            Type of event receiver to create.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.EventReceiverOptions.ReceiverName">
            <summary>
            Name of the event receiver.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.EventReceiverOptions.ReceiverUrl">
            <summary>
            Url of the event receiver.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.EventReceiverOptions.SequenceNumber">
            <summary>
            Sequence number in which the event receiver will be executed.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.EventReceiverOptions.Synchronization">
            <summary>
            The synchronization state for the event receiver.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldBooleanOptions">
            <summary>
            Options for a boolean field
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldCalculatedOptions">
            <summary>
            Available options for SharePoint Calculated fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCalculatedOptions.CurrencyLocaleId">
            <summary>
            Gets or sets a value that specifies the language code identifier (LCID) used to format the value of the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCalculatedOptions.DateFormat">
            <summary>
            Gets or sets the type of date and time format that is used in the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCalculatedOptions.Formula">
            <summary>
            Gets or sets a value that specifies the formula for the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCalculatedOptions.OutputType">
            <summary>
            Gets or sets a value that specifies the output format for the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCalculatedOptions.ShowAsPercentage">
            <summary>
            Gets or sets whether the field must be shown as percentage.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldChoiceMultiOptions">
            <summary>
            Available options for SharePoint Multi Choice fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldChoiceMultiOptions.FillInChoice">
            <summary>
            Gets or sets a value that specifies whether the field can accept values other than those specified in Choices.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldChoiceMultiOptions.DefaultChoice">
            <summary>
            Gets or sets the default choice value 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldChoiceMultiOptions.Choices">
            <summary>
            Gets or sets a value that specifies values that are available for selection in the field.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldChoiceOptions">
            <summary>
            Available options for SharePoint Choice fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldChoiceOptions.EditFormat">
            <summary>
            Determines whether to display the choice field as option buttons (also known as “radio buttons”) or as a drop-down list.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldCurrencyOptions">
            <summary>
            Available options for SharePoint Currency fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCurrencyOptions.CurrencyLocaleId">
            <summary>
            Gets or sets a value that specifies the language code identifier (LCID) used to format the value of the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldCurrencyOptions.Decimals">
            <summary>
            How many decimals to show
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldDateTimeOptions">
            <summary>
            Available options for SharePoint DateTime fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldDateTimeOptions.DateTimeCalendarType">
            <summary>
            Gets or sets a value that specifies the calendar type of the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldDateTimeOptions.DisplayFormat">
            <summary>
            Gets or sets the type of date and time format that is used in the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldDateTimeOptions.FriendlyDisplayFormat">
            <summary>
            Gets or sets the type of friendly display format that is used in the field.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldLookupOptions">
            <summary>
            Available options for SharePoint lookup fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldLookupOptions.LookupFieldName">
            <summary>
            Gets or sets a value that specifies the internal field name of the field used as the lookup values.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldLookupOptions.LookupListId">
            <summary>
            Gets or sets a value that specifies the list identifier of the list that contains the field to use as the lookup values.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldLookupOptions.LookupWebId">
            <summary>
            Gets or sets a value that specifies the GUID that identifies the site containing the list which contains the field used as the lookup values.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldMultilineTextOptions">
            <summary>
            Available options for SharePoint Multiline Text fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldMultilineTextOptions.AllowHyperlink">
            <summary>
            Gets or sets a value that specifies whether a hyperlink is allowed as a value of the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldMultilineTextOptions.AppendOnly">
            <summary>
            Gets or sets a value that specifies whether all changes to the value of the field are displayed in list forms.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldMultilineTextOptions.NumberOfLines">
            <summary>
            Gets or sets a value that specifies the number of lines of text to display for the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldMultilineTextOptions.RestrictedMode">
            <summary>
            Gets or sets a value that specifies whether the field supports a subset of rich formatting.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldMultilineTextOptions.RichText">
            <summary>
            Gets or sets a value that specifies whether the field supports rich formatting.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldMultilineTextOptions.UnlimitedLengthInDocumentLibrary">
            <summary>
            Gets or sets a value that specifies whether the field supports unlimited length in document libraries.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldNumberOptions">
            <summary>
            Available options for SharePoint Number fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldNumberOptions.Decimals">
            <summary>
            How many decimals to show
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldNumberOptions.DefaultValue">
            <summary>
            Default value set on the field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldNumberOptions.MaximumValue">
            <summary>
            Gets or sets a value that specifies the maximum allowed value for the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldNumberOptions.MinimumValue">
            <summary>
            Gets or sets a value that specifies the minimum allowed value for the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldNumberOptions.ShowAsPercentage">
            <summary>
            Gets or sets whether the field must be shown as percentage.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldTaxonomyOptions">
            <summary>
            Options for configuring a Taxonomy field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldTaxonomyOptions.TermStoreId">
            <summary>
            Term store id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldTaxonomyOptions.TermSetId">
            <summary>
            TermSet id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldTaxonomyOptions.DefaultValue">
            <summary>
            Default value set on single value taxonomy field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldTaxonomyOptions.DefaultValues">
            <summary>
            Default values set on a a multi value taxonomy field
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldTaxonomyOptions.OpenTermSet">
            <summary>
            Defines whether the provisioned field allows for additions to the connected term set
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldTextOptions">
            <summary>
            Available options for SharePoint Text fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldTextOptions.MaxLength">
            <summary>
            Gets or sets the maximum length of the text field.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldUrlOptions">
            <summary>
            Available options for SharePoint URL fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldUrlOptions.DisplayFormat">
            <summary>
            Gets or sets a value that specifies the display format for the value in the field.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.FieldUserOptions">
            <summary>
            Available options for SharePoint user fields
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldUserOptions.AllowDisplay">
            <summary>
            Gets or sets a value that specifies whether to display the name of the user in a survey list.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldUserOptions.Presence">
            <summary>
            Gets or sets a value that specifies whether presence is enabled on the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldUserOptions.SelectionGroup">
            <summary>
            Gets or sets a value that specifies the identifier of the SharePoint group whose members can be selected as values of the field.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.FieldUserOptions.SelectionMode">
            <summary>
            Gets or sets a value that specifies whether users and groups or only users can be selected.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.LongRunningOperationOptions">
            <summary>
            Defines the options that control the long running operation <see cref="T:PnP.Core.Model.SharePoint.ILongRunningOperation"/> polling
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.LongRunningOperationOptions.WaitTimeInSeconds">
            <summary>
            Time in seconds between each completion check, defaults to 5 if not set
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.LongRunningOperationOptions.MaxRetries">
            <summary>
            Maximum number of retries, defaults to unlimited (so wait for the long operation to either succeed or fail)
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.MoveCopyOptions">
            <summary>
            Options for move and copy operations
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.MoveCopyOptions.KeepBoth">
            <summary>
            Indicates whether both resources should be kept if a resource already exists at the specified destination.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.MoveCopyOptions.ResetAuthorAndCreatedOnCopy">
            <summary>
            Indicates whether to reset author and creation datetime on the copied resource.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.MoveCopyOptions.ShouldBypassSharedLocks">
            <summary>
            Indicates whether the shared locks on the source resource should be by passed.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PreviewOptions">
            <summary>
            Options that define how the preview URL must be constructed
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PreviewOptions.Page">
            <summary>
            Optional page number of document to start at, if applicable. Specified as string for future use cases around file types such as ZIP
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PreviewOptions.Zoom">
            <summary>
            Optional zoom level to start at, if applicable
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.RecycleBinQueryOptions">
            <summary>
            Defines the recycle bin query criteria
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RecycleBinQueryOptions.PagingInfo">
            <summary>
            Gets or sets a string used to get the next set of rows in the page.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RecycleBinQueryOptions.RowLimit">
            <summary>
            Gets or sets a limit for the number of items returned in the query per page. Defaults to 50.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RecycleBinQueryOptions.IsAscending">
            <summary>
            Gets or sets a Boolean value that specifies whether to sort in ascending order. Defaults to true.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RecycleBinQueryOptions.OrderBy">
            <summary>
            Gets or sets the column by which to order the Recycle Bin query. Defaults to <see cref="F:PnP.Core.Model.SharePoint.RecycleBinOrderBy.Title"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RecycleBinQueryOptions.ItemState">
            <summary>
            Gets or sets the Recycle Bin stage of items to return in the query. Defaults to <see cref="F:PnP.Core.Model.SharePoint.RecycleBinItemState.FirstStageRecycleBin"/>.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RecycleBinQueryOptions.ShowOnlyMyItems">
            <summary>
            Gets or sets a Boolean value that specifies whether to get items deleted by other users. Defaults to false.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.RenderListDataOptions">
            <summary>
            Options to configure the rendering of list data via the RenderListDataAsStream method of IList
            See https://docs.microsoft.com/en-us/sharepoint/dev/sp-add-ins/working-with-lists-and-list-items-with-rest#renderlistdataasstream-body-parameter-properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.AddRequiredFields">
            <summary>
            Specifies if required fields should be returned or not
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.AllowMultipleValueFilterForTaxonomyFields">
            <summary>
            Specifies if multi value filtering is allowed for taxonomy fields or not
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.AudienceTarget">
            <summary>
            Audience to use while processing this request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.DatesInUtc">
            <summary>
            Specifies if we return DateTime field in UTC or local time
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.DeferredRender">
            <summary>
            Use a deferred render?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.ExpandGroups">
            <summary>
            Specifies if the grouping should be expanded or not
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.FirstGroupOnly">
            <summary>
            Specifies if only the first group should be returned or not (regardless of view schema)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.FolderServerRelativeUrl">
            <summary>
            Specifies the url to the folder from which to return items
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.ImageFieldsToTryRewriteToCdnUrls">
            <summary>
            Comma-separated list of field names whose values should be rewritten to CDN URLs
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.MergeDefaultView">
            <summary>
            Merge with the default view?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.OriginalDate">
            <summary>
            Return the original date?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.OverrideViewXml">
            <summary>
            Specifies the override XML to be combined with the View CAML. Applies only to the Query/Where part of the View CAML
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.Paging">
            <summary>
            Specifies the paging information
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.ReplaceGroup">
            <summary>
            Specifies if the grouping should be replaced or not to deal with GroupBy throttling
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.RenderOptions">
            <summary>
            Specifies the type of output to return
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.RenderListDataOptions.ViewXml">
            <summary>
            Specifies the CAML view XML
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.RenderListDataOptions.SetViewXmlFromFields(System.Collections.Generic.List{System.String})">
            <summary>
            Populates the needed ViewXml based upon the passed field names
            </summary>
            <param name="fieldInternalNames">List of fields specified via their internal name</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SearchOptions">
            <summary>
            Defines the search query to make
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.SearchOptions.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="query">Provide the query to issue</param>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SearchOptions.Query">
            <summary>
            Search query to issue
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SearchOptions.RowLimit">
            <summary>
            Max number of rows to return
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SearchOptions.StartRow">
            <summary>
            Start row of the search result set
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SearchOptions.RowsPerPage">
            <summary>
            Rows to return per page. Defaults to 500
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SearchOptions.TrimDuplicates">
            <summary>
            Trim duplicate search results
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SearchOptions.SelectProperties">
            <summary>
            Properties to select
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SearchOptions.SortProperties">
            <summary>
            Properties to sort the query on
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SearchOptions.RefineProperties">
            <summary>
            Properties used to refine the search results
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SearchOptions.ClientType">
            <summary>
            Client type used for the search query (defaults to ContentSearchRegular)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SearchOptions.ResultSourceId">
            <summary>
            Result source id to use for the search query
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SortOption">
            <summary>
            Defines a field to be used for sorting search query results
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.SortOption.#ctor(System.String)">
            <summary>
            Creates SortOption class, defaults to ascending sort order
            </summary>
            <param name="property">Property to sort on</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.SortOption.#ctor(System.String,PnP.Core.Model.SharePoint.SortDirection)">
            <summary>
            Creates SortOption class
            </summary>
            <param name="property">Property to sort on</param>
            <param name="sort">Sort order to use</param>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SortOption.Property">
            <summary>
            Property to sort on
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SortOption.Sort">
            <summary>
            Sort order to use
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.SortOption.ToString">
            <summary>
            Returns the sort option so it can be used in a search query
            </summary>
            <returns>Sort option to use in a query</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ThumbnailOptions">
            <summary>
            Options to define the file thumbnail retrieval
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ThumbnailOptions.StandardSizes">
            <summary>
            Standard size(s) of the thumbnail to get
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ThumbnailOptions.CustomSizes">
            <summary>
            Custom size(s) of the thumbnail to get
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.UnfurlOptions">
            <summary>
            Link unfurling options
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.UnfurlOptions.ThumbnailOptions">
            <summary>
            Optionally set specific options for the retrieved thumbnails
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ViewOptions">
            <summary>
            Options for creating a view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.AssociatedContentTypeId">
            <summary>
            Gets or sets the associated content type id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.BaseViewId">
            <summary>
            Gets or sets the base view Id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.CalendarViewStyles">
            <summary>
            Gets of sets the Calendar view styles
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.Paged">
            <summary>
            Gets or sets a value that specifies whether the new list view is a paged view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.PersonalView">
            <summary>
            Gets or sets a value that specifies whether the new list view is a personal view. If the value is false, the new list view is a public view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.Query">
            <summary>
            Gets or sets a value that specifies the query for the new list view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.RowLimit">
            <summary>
            Gets or sets a value that specifies the maximum number of list items that the new list view displays on a visual page of the list view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.SetAsDefaultView">
            <summary>
            Gets or sets a value that specifies whether the new list view is the default list view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.Title">
            <summary>
            Gets or sets the value that specifies the display name of the new list view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.ViewData">
            <summary>
            Gets or sets the view data
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.ViewFields">
            <summary>
            Gets or sets the value that specifies the collection of field internal names for the list fields in the new list view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.ViewTypeKind">
            <summary>
            Gets or sets a value that specifies the type of the new list view.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ViewOptions.ViewType2">
            <summary>
            Gets or sets the View Type 2 information
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.WebOptions">
            <summary>
            Options to set when creating a new web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebOptions.Title">
            <summary>
            Title of the new web (e.g. My Sub Web)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebOptions.Url">
            <summary>
            Relative url of the new web (e.g. mysubweb)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebOptions.Description">
            <summary>
            Description to set on the new web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebOptions.Template">
            <summary>
            The site template to use for the new web (e.g. STS#3)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebOptions.Language">
            <summary>
            Language to set for the new web, defaults to 1033
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebOptions.InheritPermissions">
            <summary>
            Inherit permissions from the current web, defaults to true.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ACEWebPartData.IconProperty">
            <summary>
            Gets or sets JsonProperty "iconProperty"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ACEWebPartData.CardSize">
            <summary>
            Gets or sets JsonProperty "cardSize"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasColumn.Section">
            <summary>
            <see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> this section belongs to
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasColumn.ColumnFactor">
            <summary>
            Column size factor. Max value is 12 (= one column), other options are 8,6,4 or 0
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasColumn.LayoutIndex">
            <summary>
            Returns the layout index. Defaults to 1, except for the vertical section column this is 2
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasColumn.Controls">
            <summary>
            List of <see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> instances that are hosted in this section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasColumn.IsVerticalSectionColumn">
            <summary>
            Is this a vertical section column?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasColumn.VerticalSectionEmphasis">
            <summary>
            Color emphasis of the column (used for the vertical section column) 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasColumn.ToHtml">
            <summary>
            Renders a HTML presentation of this section
            </summary>
            <returns>The HTML presentation of this section</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasColumn.ResetColumn(System.Int32,System.Int32)">
            <summary>
            Resets the column, used in scenarios where a section is changed from type (e.g. from 3 column to 2 column)
            </summary>
            <param name="order">Column order to set</param>
            <param name="columnFactor">Column factor to set</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CanvasControl">
            <summary>
            Base class for a canvas control 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.#ctor">
            <summary>
            Constructs the canvas control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControl.Section">
            <summary>
            The <see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> hosting  this control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControl.Column">
            <summary>
            The <see cref="T:PnP.Core.Model.SharePoint.ICanvasColumn"/> hosting this control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControl.DataVersion">
            <summary>
            The internal storage version used for this control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControl.CanvasDataVersion">
            <summary>
            The internal canvas storage version used
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControl.CanvasControlData">
            <summary>
            Value of the control's "data-sp-canvascontrol" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControl.ControlType">
            <summary>
            Type of the control: 4 is a text part, 3 is a client side web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControl.JsonControlData">
            <summary>
            Value of the control's "data-sp-controldata" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControl.InstanceId">
            <summary>
            Instance ID of the control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControl.Order">
            <summary>
            Order of the control in the control collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControl.Type">
            <summary>
            Type if the control (<see cref="T:PnP.Core.Model.SharePoint.IPageText"/> or <see cref="T:PnP.Core.Model.SharePoint.IPageWebPart"/>)
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.ToHtml(System.Single)">
            <summary>
            Converts a control object to it's html representation
            </summary>
            <param name="controlIndex">The sequence of the control inside the section</param>
            <returns>Html representation of a control</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.Delete">
            <summary>
            Removes the control from the page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.Move(PnP.Core.Model.SharePoint.ICanvasSection)">
            <summary>
            Moves the control to another section and column
            </summary>
            <param name="newSection">New section that will host the control</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.Move(PnP.Core.Model.SharePoint.ICanvasSection,System.Int32)">
            <summary>
            Moves the control to another section and column
            </summary>
            <param name="newSection">New section that will host the control</param>
            <param name="order">New order for the control in the new section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.Move(PnP.Core.Model.SharePoint.ICanvasColumn)">
            <summary>
            Moves the control to another section and column
            </summary>
            <param name="newColumn">New column that will host the control</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.Move(PnP.Core.Model.SharePoint.ICanvasColumn,System.Int32)">
            <summary>
            Moves the control to another section and column
            </summary>
            <param name="newColumn">New column that will host the control</param>
            <param name="order">New order for the control in the new column</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.MovePosition(PnP.Core.Model.SharePoint.ICanvasSection)">
            <summary>
            Moves the control to another section and column while keeping it's current position
            </summary>
            <param name="newSection">New section that will host the control</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.MovePosition(PnP.Core.Model.SharePoint.ICanvasSection,System.Int32)">
            <summary>
            Moves the control to another section and column in the given position
            </summary>
            <param name="newSection">New section that will host the control</param>
            <param name="position">New position for the control in the new section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.MovePosition(PnP.Core.Model.SharePoint.ICanvasColumn)">
            <summary>
            Moves the control to another section and column while keeping it's current position
            </summary>
            <param name="newColumn">New column that will host the control</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.MovePosition(PnP.Core.Model.SharePoint.ICanvasColumn,System.Int32)">
            <summary>
            Moves the control to another section and column in the given position
            </summary>
            <param name="newColumn">New column that will host the control</param>
            <param name="position">New position for the control in the new column</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.MovePosition(System.Int32)">
            <summary>
            Moves the control inside the current column to a new position
            </summary>
            <param name="position">New position for this control</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasControl.GetType(System.String)">
            <summary>
            Receives "data-sp-controldata" content and detects the type of the control
            </summary>
            <param name="controlDataJson">data-sp-controldata json string</param>
            <returns>Type of the control represented by the json string</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CanvasControlData">
            <summary>
            Base class representing the json control data that will be included in each client side control (de-)serialization (data-sp-controldata attribute)
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CanvasControlPosition">
            <summary>
            Class representing the json control data that will describe a control versus the zones and sections on a page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasControlPosition.ControlIndex">
            <summary>
            Gets or sets JsonProperty "controlIndex"
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CanvasData">
            <summary>
            Base class representing the json control data that will be included in each client side control (de-)serialization (data-sp-controldata attribute)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasData.Position">
            <summary>
            Gets or sets JsonProperty "position"
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CanvasPosition">
            <summary>
            Base class representing the json control data that will describe a control versus the zones and sections on a page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasPosition.ZoneIndex">
            <summary>
            Gets or sets JsonProperty "zoneIndex"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasPosition.SectionIndex">
            <summary>
            Gets or sets JsonProperty "sectionIndex"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasPosition.SectionFactor">
            <summary>
            Gets or sets JsonProperty "sectionFactor"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasPosition.LayoutIndex">
            <summary>
            Gets or sets JsonProperty "layoutIndex"
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CanvasSection">
            <summary>
            Represents a section on the canvas
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasSection.#ctor(PnP.Core.Model.SharePoint.IPage,PnP.Core.Model.SharePoint.CanvasSectionTemplate,System.Single)">
            <summary>
            Creates a new canvas section
            </summary>
            <param name="page"><see cref="T:PnP.Core.Model.SharePoint.IPage"/> instance that holds this section</param>
            <param name="canvasSectionTemplate">Type of section to create</param>
            <param name="order">Order of this section in the collection of sections on the page</param>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.Type">
            <summary>
            Type of the section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.Order">
            <summary>
            Order in which this section is presented on the page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.Columns">
            <summary>
            <see cref="T:PnP.Core.Model.SharePoint.CanvasColumn"/> instances that are part of this section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.Page">
            <summary>
            The <see cref="T:PnP.Core.Model.SharePoint.IPage"/> instance holding this section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.Controls">
            <summary>
            Controls hosted in this section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.DefaultColumn">
            <summary>
            The default <see cref="T:PnP.Core.Model.SharePoint.CanvasColumn"/> of this section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.VerticalSectionColumn">
            <summary>
            A page can contain one section that has a vertical section column...use this attribute to get that column
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.ZoneEmphasis">
            <summary>
            Color emphasis of the section 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.Collapsible">
            <summary>
            Is this section collapsible
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.IsExpanded">
            <summary>
            Is the collapsible section expanded?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.DisplayName">
            <summary>
            DisplayName of the collapsible section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.IconAlignment">
            <summary>
            Sets the alignment of the collaps icon, left/right or not configured
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.ShowDividerLine">
            <summary>
            Show a devided line for this collapsible section?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CanvasSection.SectionType">
            <summary>
            Type of this section, not configurable by SDK users
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CanvasSection.ToHtml">
            <summary>
            Renders this section as a HTML fragment
            </summary>
            <returns>HTML string representing this section</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.HeaderControlData">
            <summary>
            Json header control data that will be included in each client side web part (de-)serialization (data-sp-controldata)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.HeaderControlData.Id">
            <summary>
            Gets or sets JsonProperty "id"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.HeaderControlData.InstanceId">
            <summary>
            Gets or sets JsonProperty "instanceId"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.HeaderControlData.Title">
            <summary>
            Gets or sets JsonProperty "title"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.HeaderControlData.Description">
            <summary>
            Gets or sets JsonProperty "description"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.HeaderControlData.DataVersion">
            <summary>
            Gets or sets JsonProperty "dataVersion"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.HeaderControlData.Properties">
            <summary>
            Gets or sets JsonProperty "properties"
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IconAlignmentJsonConverter">
            <summary>
            The IconAlignment property is used on collapsible sections and has string values left and right. However when no value is set 
            the property acts as bool property with value true
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.PageTitle">
            <summary>
            Title of the client side page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.Page.sections">
            <summary>
            Collection of sections that exist on this client side page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.Page.layoutType">
            <summary>
            Layout type of the client side page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.DefaultSection">
            <summary>
            The default section of the client side page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.Folder">
            <summary>
            Folder the page lives in
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.Name">
            <summary>
            Name of the page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.Page.pageHeader">
            <summary>
            Returns the page header for this page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.Page.pageId">
            <summary>
            ID value of the page (only available when the page was saved)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.SpaceContent">
            <summary>
            Space content field (JSON) for spaces pages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.EntityId">
            <summary>
            Entity id field for topic pages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.EntityRelations">
            <summary>
            Entity relations field for topic pages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.EntityType">
            <summary>
            Entity type field for topic pages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.PnPContext">
            <summary>
            PnPContext to work with
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.PagesLibrary">
            <summary>
            Pages library
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.Page.PageListItem">
            <summary>
            ListItem linked to this page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.GetTemplatesFolderAsync">
            <summary>
            Returns the name of the templates folder, and creates if it doesn't exist.
            </summary>        
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.ClearPage">
            <summary>
            Clears all control and sections from this page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddSection(PnP.Core.Model.SharePoint.CanvasSectionTemplate,System.Single,PnP.Core.Model.SharePoint.VariantThemeType,PnP.Core.Model.SharePoint.VariantThemeType)">
            <summary>
            Adds a new section to your client side page
            </summary>
            <param name="sectionTemplate">The <see cref="T:PnP.Core.Model.SharePoint.CanvasSectionTemplate"/> type of the section</param>
            <param name="order">Controls the order of the new section</param>
            <param name="zoneEmphasis">Zone emphasis (section background)</param>
            <param name="verticalSectionZoneEmphasis">Vertical Section Zone emphasis (section background)</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddSection(PnP.Core.Model.SharePoint.CanvasSectionTemplate,System.Single,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Adds a new section to your client side page
            </summary>
            <param name="sectionTemplate">The <see cref="T:PnP.Core.Model.SharePoint.CanvasSectionTemplate"/> type of the section</param>
            <param name="order">Controls the order of the new section</param>
            <param name="zoneEmphasis">Zone emphasis (section background)</param>
            <param name="verticalSectionZoneEmphasis">Vertical Section Zone emphasis (section background)</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddSection(PnP.Core.Model.SharePoint.CanvasSectionTemplate,System.Single)">
            <summary>
            Adds a new section to your client side page
            </summary>
            <param name="sectionTemplate">The <see cref="T:PnP.Core.Model.SharePoint.CanvasSectionTemplate"/> type of the section</param>
            <param name="order">Controls the order of the new section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddSection(PnP.Core.Model.SharePoint.ICanvasSection)">
            <summary>
            Adds a new section to your client side page
            </summary>
            <param name="section"><see cref="T:PnP.Core.Model.SharePoint.CanvasSection"/> object describing the section to add</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddSection(PnP.Core.Model.SharePoint.ICanvasSection,System.Single)">
            <summary>
            Adds a new section to your client side page with a given order
            </summary>
            <param name="section"><see cref="T:PnP.Core.Model.SharePoint.CanvasSection"/> object describing the section to add</param>
            <param name="order">Controls the order of the new section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddControl(PnP.Core.Model.SharePoint.ICanvasControl)">
            <summary>
            Adds a new control to your client side page using the default <see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/>
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddControl(PnP.Core.Model.SharePoint.ICanvasControl,System.Int32)">
            <summary>
            Adds a new control to your client side page using the default <see cref="T:PnP.Core.Model.SharePoint.CanvasSection"/> using a given order
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="order">Order of the control in the default section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddControl(PnP.Core.Model.SharePoint.ICanvasControl,PnP.Core.Model.SharePoint.ICanvasSection)">
            <summary>
            Adds a new control to your client side page in the given section
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="section"><see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> that will hold the control. Control will end up in the <see cref="P:PnP.Core.Model.SharePoint.ICanvasSection.DefaultColumn"/>.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddControl(PnP.Core.Model.SharePoint.ICanvasControl,PnP.Core.Model.SharePoint.ICanvasSection,System.Int32)">
            <summary>
            Adds a new control to your client side page in the given section with a given order
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="section"><see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> that will hold the control. Control will end up in the <see cref="P:PnP.Core.Model.SharePoint.ICanvasSection.DefaultColumn"/>.</param>
            <param name="order">Order of the control in the given section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddControl(PnP.Core.Model.SharePoint.ICanvasControl,PnP.Core.Model.SharePoint.ICanvasColumn)">
            <summary>
            Adds a new control to your client side page in the given section
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="column"><see cref="T:PnP.Core.Model.SharePoint.ICanvasColumn"/> that will hold the control</param>    
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddControl(PnP.Core.Model.SharePoint.ICanvasControl,PnP.Core.Model.SharePoint.ICanvasColumn,System.Int32)">
            <summary>
            Adds a new control to your client side page in the given section with a given order
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="column"><see cref="T:PnP.Core.Model.SharePoint.ICanvasColumn"/> that will hold the control</param>    
            <param name="order">Order of the control in the given section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.AddHeaderControl(PnP.Core.Model.SharePoint.ICanvasControl,System.Int32)">
            <summary>
            Adds a new header control to your client side page with a given order
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="order">Order of the control in the given section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.RemovePageHeader">
            <summary>
            Removes the set page header 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.SetDefaultPageHeader">
            <summary>
            Sets page header back to the default page header
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.SetCustomPageHeader(System.String,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Sets page header with custom focal point
            </summary>
            <param name="serverRelativeImageUrl">Server relative page header image url</param>
            <param name="translateX">X focal point for image</param>
            <param name="translateY">Y focal point for image</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.ToHtml">
            <summary>
            Returns the html representation of this client side page. This is the content that will be persisted in the <see cref="T:PnP.Core.Model.SharePoint.IListItem"/> list item.
            </summary>
            <returns>Html representation</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.DemoteNewsArticleAsync">
            <summary>
            Demotes an client side <see cref="F:PnP.Core.Model.SharePoint.PageLayoutType.Article"/> news page as a regular client side page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.PromoteAsNewsArticleAsync">
            <summary>
            Promotes a regular <see cref="F:PnP.Core.Model.SharePoint.PageLayoutType.Article"/> client side page as a news page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.PromoteAsHomePageAsync">
            <summary>
            Sets the current <see cref="T:PnP.Core.Model.SharePoint.IPage"/> as home page for the current site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.EnableComments">
            <summary>
            Enable commenting on this page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.EnableCommentsAsync">
            <summary>
            Enable commenting on this page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.DisableComments">
            <summary>
            Disable commenting on this page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.DisableCommentsAsync">
            <summary>
            Disable commenting on this page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.DeleteAsync">
            <summary>
            Deletes a control from a page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.Page.GenerateTopicPageEntityId(System.Guid,System.Guid,System.Guid)">
            <summary>
            Generate topic page entity id based on current sharepoint page ids
            </summary>
            <param name="siteId">Site collection id</param>
            <param name="webId">Web id</param>
            <param name="uniqueId">Unique id of the page file</param>
            <returns>Generated topic page entity id</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageComponent">
            <summary>
            Client side webpart object (retrieved via the _api/web/GetClientSideWebParts REST call)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponent.ComponentType">
            <summary>
            Component type for client side webpart object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponent.Id">
            <summary>
            Id for client side webpart object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponent.Manifest">
            <summary>
            Manifest for client side webpart object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponent.ManifestType">
            <summary>
            Manifest type for client side webpart object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponent.Name">
            <summary>
            Name for client side webpart object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponent.Status">
            <summary>
            Status for client side webpart object
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageConstants.ModernArticlePage">
            <summary>
            Contains the content identifier (ID) for content types used in the modern page infrastructure
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageHeader">
            <summary>
            Class that implements the page header
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.Type">
            <summary>
            Returns the type of header
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.ImageServerRelativeUrl">
            <summary>
            Server relative link to page header image, set to null for default header image.
            Note: image needs to reside in the current site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.TranslateX">
            <summary>
            Image focal point X coordinate
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.TranslateY">
            <summary>
            Image focal point Y coordinate
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.LayoutType">
            <summary>
            Type of layout used inside the header
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.TextAlignment">
            <summary>
            Alignment of the title in the header
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.ShowTopicHeader">
            <summary>
            Show the topic header in the title region
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.ShowPublishDate">
            <summary>
            Show the page publication date in the title region
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.TopicHeader">
            <summary>
            The topic header text to show if ShowTopicHeader is set to true
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.AlternativeText">
            <summary>
            Alternative text for the header image
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.Authors">
            <summary>
            Page author(s) to be displayed
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.AuthorByLine">
            <summary>
            Page author byline
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageHeader.AuthorByLineId">
            <summary>
            Id of the page author
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageHeader.#ctor(PnP.Core.Services.PnPContext,PnP.Core.Model.SharePoint.PageHeaderType,System.String)">
            <summary>
            Creates a custom header with a custom image
            </summary>
            <param name="cc">ClientContext of the site hosting the image</param>
            <param name="pageHeaderType">Type of page header</param>
            <param name="imageServerRelativeUrl">Server relative image url</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageHeader.NoHeader(System.String,PnP.Core.Model.SharePoint.PageHeaderTitleAlignment)">
            <summary>
            Returns the header value to set a "no header"
            </summary>
            <param name="pageTitle">Title of the page</param>
            <param name="titleAlignment">Left align or center the title</param>
            <returns>Header html value that indicates "no header"</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageHeader.NoHeader(System.String)">
            <summary>
            Returns the header value to set a "no header"
            </summary>
            <param name="pageTitle">Title of the page</param>
            <returns>Header html value that indicates "no header"</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageHeader.FromHtml(System.String)">
            <summary>
            Load the PageHeader object from the given html
            </summary>
            <param name="pageHeaderHtml">Page header html</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageHeader.ToHtmlAsync(System.String)">
            <summary>
            Returns the header html representation
            </summary>
            <param name="pageTitle">Title of the page</param>
            <returns>Header html value</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageText">
            <summary>
            Controls of type 4 ( = text control)
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageText.#ctor">
            <summary>
            Creates a <see cref="T:PnP.Core.Model.SharePoint.PageText"/> instance
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageText.Text">
            <summary>
            Text value of the client side text control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageText.Rte">
            <summary>
            Value of the "data-sp-rte" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageText.PreviewText">
            <summary>
            Text used in page preview in news web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageText.Type">
            <summary>
            Type of the control (= <see cref="T:PnP.Core.Model.SharePoint.PageText"/>)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageText.SpControlData">
            <summary>
            Deserialized value of the "data-sp-controldata" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageText.InlineWebParts">
            <summary>
            List of web parts to be added when this text control is added
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageText.ToHtml(System.Single)">
            <summary>
            Converts this <see cref="T:PnP.Core.Model.SharePoint.PageText"/> control to it's html representation
            </summary>
            <param name="controlIndex">The sequence of the control inside the section</param>
            <returns>Html representation of this <see cref="T:PnP.Core.Model.SharePoint.PageText"/> control</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageTranslationStatus">
            <summary>
            Translation status for a page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageTranslationStatus.Culture">
            <summary>
            The culture of this translation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageTranslationStatus.Path">
            <summary>
            The web-relative path to this translation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageTranslationStatus.LastModified">
            <summary>
            Last modified date of this translation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageTranslationStatus.FileStatus">
            <summary>
            The file status (checked out, draft, published) of this translation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageTranslationStatus.HasPublishedVersion">
            <summary>
            The file status (checked out, draft, published) of this translation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageTranslationStatus.Title">
            <summary>
            The page title of this translation
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageTranslationStatusCollection">
            <summary>
            Translation status of a page
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageWebPart">
            <summary>
            This class is used to instantiate controls of type 3 (= client side web parts). Using this class you can instantiate a control and 
            add it on a <see cref="T:PnP.Core.Model.SharePoint.IPage"/>.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageWebPart.#ctor">
            <summary>
            Instantiates client side web part from scratch.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageWebPart.#ctor(PnP.Core.Model.SharePoint.IPageComponent)">
            <summary>
            Instantiates a client side web part based on the information that was obtain from calling the AvailableClientSideComponents methods on the <see cref="T:PnP.Core.Model.SharePoint.IPage"/> object.
            </summary>
            <param name="component">Component to create a ClientSideWebPart instance for</param>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.JsonWebPartData">
            <summary>
            Value of the "data-sp-webpartdata" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.HtmlPropertiesData">
            <summary>
            Value of the "data-sp-htmlproperties" element
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.HtmlProperties">
            <summary>
            Value of the "data-sp-htmlproperties" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.WebPartId">
            <summary>
            ID of the client side web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.SupportsFullBleed">
            <summary>
            Supports full bleed display experience
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.WebPartData">
            <summary>
            Value of the "data-sp-webpart" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.Title">
            <summary>
            Title of the web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.Description">
            <summary>
            Description of the web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.WebPartPreviewImage">
            <summary>
            Preview image that can serve as page preview image when the page holding this web part is promoted to a news page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.PropertiesJson">
            <summary>
            Json serialized web part information. For 1st party web parts this ideally is the *full* JSON string 
            fetch via workbench or via copying it from an existing page. It's important that the serverProcessedContent
            element is included here!
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.Properties">
            <summary>
            Web properties as configurable <see cref="T:System.Text.Json.JsonElement"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.ServerProcessedContent">
            <summary>
            ServerProcessedContent json node
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.Type">
            <summary>
            Return <see cref="P:PnP.Core.Model.SharePoint.PageWebPart.Type"/> of the client side web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.SpControlData">
            <summary>
            Value of the "data-sp-controldata" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.UsingSpControlDataOnly">
            <summary>
            Indicates that this control is persisted/read using the data-sp-controldata attribute only
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.IsHeaderControl">
            <summary>
            This control lives in the page header (not removable control)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageWebPart.RichTextEditorInstanceId">
            <summary>
            If this webpart is used inline in a text editor then this property points to the editor using it
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageWebPart.Import(PnP.Core.Model.SharePoint.IPageComponent,System.Func{System.String,System.String})">
            <summary>
            Imports a <see cref="T:PnP.Core.Model.SharePoint.PageComponent"/> to use it as base for configuring the client side web part instance
            </summary>
            <param name="component"><see cref="T:PnP.Core.Model.SharePoint.PageComponent"/> to import</param>
            <param name="clientSideWebPartPropertiesUpdater">Function callback that allows you to manipulate the client side web part properties after import</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageWebPart.ToHtml(System.Single)">
            <summary>
            Returns a HTML representation of the client side web part
            </summary>
            <param name="controlIndex">The sequence of the control inside the section</param>
            <returns>HTML representation of the client side web part</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageWebPart.RenderHtmlProperties(System.Text.StringBuilder@)">
            <summary>
            Overrideable method that allows inheriting webparts to control the HTML rendering
            </summary>
            <param name="htmlWriter">Reference to the html renderer used</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TextControlData">
            <summary>
            Control data for controls of type 4 (= text control)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TextControlData.EditorType">
            <summary>
            Gets or sets JsonProperty "editorType"
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageComponentManifest`1">
            <summary>
            Model for PageComponentManifest
            </summary>
            <typeparam name="T">Type of component properties</typeparam>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponentManifest`1.Alias">
            <summary>
            Component alias
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponentManifest`1.ComponentType">
            <summary>
            Component type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponentManifest`1.Id">
            <summary>
            Component id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponentManifest`1.PreconfiguredEntries">
            <summary>
            Preconfigured component entries
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageComponentPreconfiguration`1">
            <summary>
            Page component pre configuration properties
            </summary>
            <typeparam name="T">Type of component properties</typeparam>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponentPreconfiguration`1.IconImageUrl">
            <summary>
            Preconfiguration icon image url
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageComponentPreconfiguration`1.Properties">
            <summary>
            Preconfiguration properties
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.VivaDashboard">
            <summary>
            Internal implementation of IVivaDashboard
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.VivaDashboard.DashboardPage">
            <summary>
            IPage object backing the Dashboard
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.VivaDashboard.Section">
            <summary>
            Canvas section to which ACEs are added
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.VivaDashboard.Controls">
            <summary>
            Lists of abstract representation of ACE in the Section
            Used as a backing field for ACE list
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.VivaDashboard.PageComponents">
            <summary>
            Page components available in the page.
            Is used by LoadACEManifest
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.VivaDashboard.RegisteredACEFactory">
            <summary>
            List of ACEFactories. Used to map IPageWebPart to Adaptive Card Extension
            Can be extended by RegisterCustomACEFactory
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.VivaDashboard.DefaultACEFactory">
            <summary>
            Default ACEFactory. Used then there is no specific ACEFactory registered for ACE
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.VivaDashboard.ACEs">
            <summary>
            List of Adaptive Card Extensions provisioned to the Dashboard
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.WebPartControlData">
            <summary>
            Control data for controls of type 3 (= client side web parts)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebPartControlData.WebPartId">
            <summary>
            Gets or sets JsonProperty "webPartId"
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.WebPartControlDataOnly">
            <summary>
            Control data for controls of type 3 (= client side web parts) which persist using the data-sp-controldata property only
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.WebPartData">
            <summary>
            Json web part data that will be included in each client side web part (de-)serialization (data-sp-webpartdata)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebPartData.Id">
            <summary>
            Gets or sets JsonProperty "id"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebPartData.InstanceId">
            <summary>
            Gets or sets JsonProperty "instanceId"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebPartData.Title">
            <summary>
            Gets or sets JsonProperty "title"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebPartData.Description">
            <summary>
            Gets or sets JsonProperty "description"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebPartData.DataVersion">
            <summary>
            Gets or sets JsonProperty "dataVersion"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.WebPartData.Properties">
            <summary>
            Gets or sets JsonProperty "properties"
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CanvasSectionTemplate">
            <summary>
            The type of canvas being used
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.OneColumn">
            <summary>
            One column
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.OneColumnFullWidth">
            <summary>
            One column, full browser width. This one only works for sites having communication sites features enabled in combination with image or hero webparts
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.TwoColumn">
            <summary>
            Two columns of the same size
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.ThreeColumn">
            <summary>
            Three columns of the same size
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.TwoColumnLeft">
            <summary>
            Two columns, left one is 2/3, right one 1/3
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.TwoColumnRight">
            <summary>
            Two columns, left one is 1/3, right one 2/3
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.OneColumnVerticalSection">
            <summary>
            One column + one vertical section column
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.TwoColumnVerticalSection">
            <summary>
            Two columns of the same size + one vertical section column
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.ThreeColumnVerticalSection">
            <summary>
            Three columns of the size + one vertical section column
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.TwoColumnLeftVerticalSection">
            <summary>
            Two columns, left 2/3, right 1/3 + one vertical section column
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CanvasSectionTemplate.TwoColumnRightVerticalSection">
            <summary>
            Two columns, left 1/3, right 2/3 + one vertical section column
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CardSize">
            <summary>
            Size of the Adaptive Card Extension (ACE) on the Viva Connections dashboard
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CardSize.Medium">
            <summary>
            Medium size
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.CardSize.Large">
            <summary>
            Large size
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.DefaultACE">
            <summary>
            List of OOB Adaptive Card Extensions
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultACE.CardDesigner">
            <summary>
            Card Designer ACE
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultACE.Approvals">
            <summary>
            Approvals ACE
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultACE.AssignedTasks">
            <summary>
            Assigned Tasks ACE
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultACE.Shifts">
            <summary>
            Shifts ACE
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultACE.TeamsApp">
            <summary>
            Teams Applicaiton ACE
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultACE.WebLink">
            <summary>
            Web Link ACE
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultACE.ThirdParty">
            <summary>
            Third party ACE
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.DefaultWebPart">
            <summary>
            List of possible OOB web parts
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.ThirdParty">
            <summary>
            Third party webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.ContentRollup">
            <summary>
            Content Rollup webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.BingMap">
            <summary>
            Bing Map webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.ContentEmbed">
            <summary>
            Content Embed webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.DocumentEmbed">
            <summary>
            Document Embed webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Image">
            <summary>
            Image webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.ImageGallery">
            <summary>
            Image Gallery webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.LinkPreview">
            <summary>
            Link Preview webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.NewsFeed">
            <summary>
            News Feed webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.NewsReel">
            <summary>
            News Reel webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.News">
            <summary>
            News webpart (the "new" version of NewsReel) - they look the same but this one supports filtering properly
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.PowerBIReportEmbed">
            <summary>
            PowerBI Report Embed webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.QuickChart">
            <summary>
            Quick Chart webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SiteActivity">
            <summary>
            Site Activity webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.VideoEmbed">
            <summary>
            Video Embed webpart 
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.YammerEmbed">
            <summary>
            Yammer Embed webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Events">
            <summary>
            Events webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.GroupCalendar">
            <summary>
            Group Calendar webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Hero">
            <summary>
            Hero webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.List">
            <summary>
            List webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.PageTitle">
            <summary>
            Page Title webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.People">
            <summary>
            People webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.QuickLinks">
            <summary>
            Quick Links webpart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.CustomMessageRegion">
            <summary>
            Custom Message Region web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Divider">
            <summary>
            Divider web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.MicrosoftForms">
            <summary>
            Microsoft Forms web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Spacer">
            <summary>
            Spacer web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.ClientWebPart">
            <summary>
            Web part to host SharePoint Add-In parts
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.PowerApps">
            <summary>
            Web part to host PowerApps
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.CodeSnippet">
            <summary>
            Web part to show code
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.PageFields">
            <summary>
            Web part to show one or more properties of the page as page content
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Weather">
            <summary>
            Weather web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.YouTube">
            <summary>
            YouTube embed web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.MyDocuments">
            <summary>
            My documents web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.YammerFullFeed">
            <summary>
            Yammer feed web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.CountDown">
            <summary>
            CountDown web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.ListProperties">
            <summary>
            List properties web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.MarkDown">
            <summary>
            MarkDown web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Planner">
            <summary>
            Planner web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Sites">
            <summary>
            Sites web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.CallToAction">
            <summary>
            Call to Action web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Button">
            <summary>
            Button web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Kindle">
            <summary>
            Kindle preview web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.MyFeed">
            <summary>
            My Feed web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.OrgChart">
            <summary>
            Organization chart web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SavedForLater">
            <summary>
            Saved for later web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.Twitter">
            <summary>
            Twitter web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.WorldClock">
            <summary>
            World clock web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SpacesDocLib">
            <summary>
            Spaces document library web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SpacesFileViewer">
            <summary>
            Spaces file viewer web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SpacesImageViewer">
            <summary>
            Spaces image viewer web part
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SpacesModelViewer">
            <summary>
            Spaces 3D model viewer
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SpacesImageThreeSixty">
            <summary>
            Spaces Image 360° viewer
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SpacesVideoThreeSixty">
            <summary>
            Spaces Video 360° viewer
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SpacesText2D">
            <summary>
            Spaces text
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SpacesVideoPlayer">
            <summary>
            Spaces video player
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.DefaultWebPart.SpacesPeople">
            <summary>
            Spaces People web part
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IconAlignment">
            <summary>
            Alignment of the collapsible section icon
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.IconAlignment.Left">
            <summary>
            Icon appears left of the collapsible section display name
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.IconAlignment.Right">
            <summary>
            Icon appears right of the collapsible section display name
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageHeaderLayoutType">
            <summary>
            Layout of the page header
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageHeaderLayoutType.FullWidthImage">
            <summary>
            Layout using a full width image as header background with a title
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageHeaderLayoutType.NoImage">
            <summary>
            No image in the header background, only a title
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageHeaderLayoutType.ColorBlock">
            <summary>
            Header based upon a title shown in a color block. Can still have a background image
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageHeaderLayoutType.CutInShape">
            <summary>
            Header based upon a title shown as an overlap. Can still have a background image
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageHeaderTitleAlignment">
            <summary>
            Alignment of the title in a page header
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageHeaderTitleAlignment.Left">
            <summary>
            Page title is left aligned
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageHeaderTitleAlignment.Center">
            <summary>
            Page title is centered
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageHeaderType">
            <summary>
            Types of pages headers that a page can use
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageHeaderType.None">
            <summary>
            The page does not have a header
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageHeaderType.Default">
            <summary>
            The page uses the default page header
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageHeaderType.Custom">
            <summary>
            The page use a customized header (e.g. with image + offset)
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageImageAlignment">
            <summary>
            Image alignment options
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageImageAlignment.Center">
            <summary>
            Image is centered (default)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageImageAlignment.Left">
            <summary>
            Image is left aligned
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageImageAlignment.Right">
            <summary>
            Image is right aligned
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageLayoutType">
            <summary>
            Types of pages that can be created
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageLayoutType.Article">
            <summary>
            Custom article page, used for user created pages
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageLayoutType.Home">
            <summary>
            Home page of modern team sites
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageLayoutType.SingleWebPartAppPage">
            <summary>
            Page is an app page, hosting a single SPFX web part full screen
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageLayoutType.RepostPage">
            <summary>
            Page is a repost / link page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageLayoutType.HeaderlessSearchResults">
            <summary>
            Page is a custom search result page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageLayoutType.Spaces">
            <summary>
            Page is a spaces page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageLayoutType.Topic">
            <summary>
            Page is a topic page (Cortex)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PageLayoutType.Dashboard">
            <summary>
            Page is a Viva Dashboard page
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PromotedState">
            <summary>
            Page promotion state
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PromotedState.NotPromoted">
            <summary>
            Regular page
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PromotedState.PromoteOnPublish">
            <summary>
            Page that will be promoted as news article after publishing
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.PromotedState.Promoted">
            <summary>
            Page that is promoted as news article
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ICanvasColumn">
            <summary>
            A column in a <see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasColumn.Order">
            <summary>
            Column order
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasColumn.Section">
            <summary>
            <see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> this section belongs to
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasColumn.ColumnFactor">
            <summary>
            Column size factor. Max value is 12 (= one column), other options are 8,6,4 or 0
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasColumn.LayoutIndex">
            <summary>
            Returns the layout index. Defaults to 1, except for the vertical section column this is 2
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasColumn.Controls">
            <summary>
            List of <see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> instances that are hosted in this section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasColumn.IsVerticalSectionColumn">
            <summary>
            Is this a vertical section column?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasColumn.VerticalSectionEmphasis">
            <summary>
            Color emphasis of the column (used for the vertical section column) 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasColumn.ResetColumn(System.Int32,System.Int32)">
            <summary>
            Resets the column, used in scenarios where a section is changed from type (e.g. from 3 column to 2 column)
            </summary>
            <param name="order">Column order to set</param>
            <param name="columnFactor">Column factor to set</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ICanvasControl">
            <summary>
            Base interface for a canvas control 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasControl.Section">
            <summary>
            The <see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> hosting  this control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasControl.Column">
            <summary>
            The <see cref="T:PnP.Core.Model.SharePoint.ICanvasColumn"/> hosting this control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasControl.DataVersion">
            <summary>
            The internal storage version used for this control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasControl.CanvasDataVersion">
            <summary>
            The internal canvas storage version used
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasControl.CanvasControlData">
            <summary>
            Value of the control's "data-sp-canvascontrol" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasControl.ControlType">
            <summary>
            Type of the control: 4 is a text part, 3 is a client side web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasControl.JsonControlData">
            <summary>
            Value of the control's "data-sp-controldata" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasControl.InstanceId">
            <summary>
            Instance ID of the control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasControl.Order">
            <summary>
            Order of the control in the control collection
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasControl.Type">
            <summary>
            Type if the control (<see cref="T:PnP.Core.Model.SharePoint.IPageText"/> or <see cref="T:PnP.Core.Model.SharePoint.IPageWebPart"/>)
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasControl.Delete">
            <summary>
            Removes the control from the page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasControl.Move(PnP.Core.Model.SharePoint.ICanvasSection)">
            <summary>
            Moves the control to another section and column
            </summary>
            <param name="newSection">New section that will host the control</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasControl.Move(PnP.Core.Model.SharePoint.ICanvasSection,System.Int32)">
            <summary>
            Moves the control to another section and column
            </summary>
            <param name="newSection">New section that will host the control</param>
            <param name="order">New order for the control in the new section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasControl.Move(PnP.Core.Model.SharePoint.ICanvasColumn)">
            <summary>
            Moves the control to another section and column
            </summary>
            <param name="newColumn">New column that will host the control</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasControl.Move(PnP.Core.Model.SharePoint.ICanvasColumn,System.Int32)">
            <summary>
            Moves the control to another section and column
            </summary>
            <param name="newColumn">New column that will host the control</param>
            <param name="order">New order for the control in the new column</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasControl.MovePosition(PnP.Core.Model.SharePoint.ICanvasSection)">
            <summary>
            Moves the control to another section and column while keeping it's current position
            </summary>
            <param name="newSection">New section that will host the control</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasControl.MovePosition(PnP.Core.Model.SharePoint.ICanvasSection,System.Int32)">
            <summary>
            Moves the control to another section and column in the given position
            </summary>
            <param name="newSection">New section that will host the control</param>
            <param name="position">New position for the control in the new section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasControl.MovePosition(PnP.Core.Model.SharePoint.ICanvasColumn)">
            <summary>
            Moves the control to another section and column while keeping it's current position
            </summary>
            <param name="newColumn">New column that will host the control</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasControl.MovePosition(PnP.Core.Model.SharePoint.ICanvasColumn,System.Int32)">
            <summary>
            Moves the control to another section and column in the given position
            </summary>
            <param name="newColumn">New column that will host the control</param>
            <param name="position">New position for the control in the new column</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ICanvasControl.MovePosition(System.Int32)">
            <summary>
            Moves the control inside the current column to a new position
            </summary>
            <param name="position">New position for this control</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ICanvasSection">
            <summary>
            Represents a section on the canvas
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.Type">
            <summary>
            Type of the section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.Order">
            <summary>
            Order in which this section is presented on the page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.Columns">
            <summary>
            <see cref="T:PnP.Core.Model.SharePoint.CanvasColumn"/> instances that are part of this section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.Page">
            <summary>
            The <see cref="T:PnP.Core.Model.SharePoint.IPage"/> instance holding this section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.Controls">
            <summary>
            Controls hosted in this section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.DefaultColumn">
            <summary>
            The default <see cref="T:PnP.Core.Model.SharePoint.CanvasColumn"/> of this section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.VerticalSectionColumn">
            <summary>
            A page can contain one section that has a vertical section column...use this attribute to get that column
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.ZoneEmphasis">
            <summary>
            Color emphasis of the section 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.Collapsible">
            <summary>
            Is this section collapsible?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.IsExpanded">
            <summary>
            Is the collapsible section expanded?
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.DisplayName">
            <summary>
            DisplayName of the collapsible section
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.IconAlignment">
            <summary>
            Sets the alignment of the collaps icon, left/right or not configured
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ICanvasSection.ShowDividerLine">
            <summary>
            Show a devided line for this collapsible section?
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IPage">
            <summary>
            A modern SharePoint Page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.PageTitle">
            <summary>
            Title of the client side page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.LayoutType">
            <summary>
            Layout type of the client side page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.ThumbnailUrl">
            <summary>
            Thumbnail url for the page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.KeepDefaultWebParts">
            <summary>
            When a page of type Home is created you can opt to only keep the default client side web parts by setting this to true. This also is a way to reset your home page back the the stock one.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.Sections">
            <summary>
            List of sections on this page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.Controls">
            <summary>
            List of control on this page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.HeaderControls">
            <summary>
            List of controls on this page's header
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.PageHeader">
            <summary>
            Returns the page header for this page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.SpaceContent">
            <summary>
            Space content field (JSON) for spaces pages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.EntityId">
            <summary>
            Entity id field for topic pages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.EntityRelations">
            <summary>
            Entity relations field for topic pages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.EntityType">
            <summary>
            Entity type field for topic pages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.RepostSourceUrl">
            <summary>
            Url being reposted using the repost page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.RepostDescription">
            <summary>
            Description of the repost page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.RepostSourceSiteId">
            <summary>
            Id of the SharePoint <see cref="T:PnP.Core.Model.SharePoint.ISite"/> containting the page being reposted
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.RepostSourceWebId">
            <summary>
            Id of the SharePoint <see cref="T:PnP.Core.Model.SharePoint.IWeb"/> containting the page being reposted
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.RepostSourceListId">
            <summary>
            Id of the SharePoint <see cref="T:PnP.Core.Model.SharePoint.IList"/> containting the page being reposted
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.RepostSourceItemId">
            <summary>
            Id of the SharePoint <see cref="T:PnP.Core.Model.SharePoint.IListItem"/> connected to the page being reposted
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.PnPContext">
            <summary>
            PnPContext to work with
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.PagesLibrary">
            <summary>
            Pages library
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.PageListItem">
            <summary>
            ListItem linked to this page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.PageId">
            <summary>
            ID value of the page (only available when the page was saved)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.DefaultSection">
            <summary>
            The default section of the client side page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.Folder">
            <summary>
            Folder the page lives in (available after saving the page)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.Name">
            <summary>
            The name of this page (available after saving the page)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPage.ScheduledPublishDate">
            <summary>
            Returns the scheduled publish data of a page (only if publish was scheduled)
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddSection(PnP.Core.Model.SharePoint.CanvasSectionTemplate,System.Single,PnP.Core.Model.SharePoint.VariantThemeType,PnP.Core.Model.SharePoint.VariantThemeType)">
            <summary>
            Adds a new section to your client side page
            </summary>
            <param name="sectionTemplate">The <see cref="T:PnP.Core.Model.SharePoint.CanvasSectionTemplate"/> type of the section</param>
            <param name="order">Controls the order of the new section</param>
            <param name="zoneEmphasis">Zone emphasis (section background)</param>
            <param name="verticalSectionZoneEmphasis">Vertical Section Zone emphasis (section background)</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddSection(PnP.Core.Model.SharePoint.CanvasSectionTemplate,System.Single,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Adds a new section to your client side page
            </summary>
            <param name="sectionTemplate">The <see cref="T:PnP.Core.Model.SharePoint.CanvasSectionTemplate"/> type of the section</param>
            <param name="order">Controls the order of the new section</param>
            <param name="zoneEmphasis">Zone emphasis (section background)</param>
            <param name="verticalSectionZoneEmphasis">Vertical Section Zone emphasis (section background)</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddSection(PnP.Core.Model.SharePoint.CanvasSectionTemplate,System.Single)">
            <summary>
            Adds a new section to your client side page
            </summary>
            <param name="sectionTemplate">The <see cref="T:PnP.Core.Model.SharePoint.CanvasSectionTemplate"/> type of the section</param>
            <param name="order">Controls the order of the new section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddSection(PnP.Core.Model.SharePoint.ICanvasSection)">
            <summary>
            Adds a new section to your client side page
            </summary>
            <param name="section"><see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> object describing the section to add</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddSection(PnP.Core.Model.SharePoint.ICanvasSection,System.Single)">
            <summary>
            Adds a new section to your client side page with a given order
            </summary>
            <param name="section"><see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> object describing the section to add</param>
            <param name="order">Controls the order of the new section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddControl(PnP.Core.Model.SharePoint.ICanvasControl)">
            <summary>
            Adds a new control to your client side page using the default <see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/>
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddControl(PnP.Core.Model.SharePoint.ICanvasControl,System.Int32)">
            <summary>
            Adds a new control to your client side page using the default <see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> using a given order
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="order">Order of the control in the default section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddControl(PnP.Core.Model.SharePoint.ICanvasControl,PnP.Core.Model.SharePoint.ICanvasSection)">
            <summary>
            Adds a new control to your client side page in the given section
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="section"><see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> that will hold the control. Control will end up in the <see cref="P:PnP.Core.Model.SharePoint.ICanvasSection.DefaultColumn"/>.</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddControl(PnP.Core.Model.SharePoint.ICanvasControl,PnP.Core.Model.SharePoint.ICanvasSection,System.Int32)">
            <summary>
            Adds a new control to your client side page in the given section with a given order
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="section"><see cref="T:PnP.Core.Model.SharePoint.ICanvasSection"/> that will hold the control. Control will end up in the <see cref="P:PnP.Core.Model.SharePoint.ICanvasSection.DefaultColumn"/>.</param>
            <param name="order">Order of the control in the given section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddControl(PnP.Core.Model.SharePoint.ICanvasControl,PnP.Core.Model.SharePoint.ICanvasColumn)">
            <summary>
            Adds a new control to your client side page in the given section
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="column"><see cref="T:PnP.Core.Model.SharePoint.ICanvasColumn"/> that will hold the control</param>    
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddControl(PnP.Core.Model.SharePoint.ICanvasControl,PnP.Core.Model.SharePoint.ICanvasColumn,System.Int32)">
            <summary>
            Adds a new control to your client side page in the given section with a given order
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="column"><see cref="T:PnP.Core.Model.SharePoint.ICanvasColumn"/> that will hold the control</param>    
            <param name="order">Order of the control in the given section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.RemovePageHeader">
            <summary>
            Removes the set page header 
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.SetDefaultPageHeader">
            <summary>
            Sets page header back to the default page header
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.SetCustomPageHeader(System.String,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Sets page header with custom focal point
            </summary>
            <param name="serverRelativeImageUrl">Server relative page header image url</param>
            <param name="translateX">X focal point for image</param>
            <param name="translateY">Y focal point for image</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AddHeaderControl(PnP.Core.Model.SharePoint.ICanvasControl,System.Int32)">
            <summary>
            Adds a new header control to your client side page with a given order. Used for topic page creation
            </summary>
            <param name="control"><see cref="T:PnP.Core.Model.SharePoint.ICanvasControl"/> to add</param>
            <param name="order">Order of the control in the given section</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.NewTextPart(System.String)">
            <summary>
            Creates a new text part which can be configured and added to the page
            </summary>
            <param name="text">Optionally provide the text for the text part</param>
            <returns>The created text part</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.NewWebPart(PnP.Core.Model.SharePoint.IPageComponent)">
            <summary>
            Creates a new web part
            </summary>
            <param name="clientSideComponent">The base component to use for this web part</param>
            <returns>The created web part</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.ClearPage">
            <summary>
            Clears the sections and controls from the page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetTemplatesFolderAsync">
            <summary>
            Returns the name of the templates folder, and creates if it doesn't exist.
            </summary>        
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetTemplatesFolder">
            <summary>
            Returns the name of the templates folder, and creates if it doesn't exist.
            </summary>        
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.SaveAsync(System.String)">
            <summary>
            Saves the page to the pages library
            </summary>
            <param name="pageName">Page name to use</param>        
            <returns>The name of the saved page</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.Save(System.String)">
            <summary>
            Saves the page to the pages library
            </summary>
            <param name="pageName">Page name to use</param>
            <returns>The name of the saved page</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.SaveAsTemplate(System.String)">
            <summary>
            Saves the page as a template page
            </summary>
            <param name="pageName">Page name to use</param>
            <returns>The name of the saved page</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.SaveAsTemplateAsync(System.String)">
            <summary>
            Saves the page as a template page
            </summary>
            <param name="pageName">Page name to use</param>
            <returns>The name of the saved page</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.DeleteAsync">
            <summary>
            Deletes the created page
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.Delete">
            <summary>
            Deletes the created page
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetPageFileAsync(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFile,System.Object}}[])">
            <summary>
            Gets the file connected to this page
            </summary>
            <param name="expressions">Properties to load for the file</param>
            <returns>The connected <see cref="T:PnP.Core.Model.SharePoint.IFile"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetPageFile(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFile,System.Object}}[])">
            <summary>
            Gets the file connected to this page
            </summary>
            <param name="expressions">Properties to load for the file</param>
            <returns>The connected <see cref="T:PnP.Core.Model.SharePoint.IFile"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.Publish(System.String)">
            <summary>
            Publishes a client side page
            </summary>
            <param name="comment">Publishing comment</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.PublishAsync(System.String)">
            <summary>
            Publishes a client side page
            </summary>
            <param name="comment">Publishing comment</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.SchedulePublishAsync(System.DateTime)">
            <summary>
            Schedules the publication of a client side page
            </summary>
            <param name="publishDate">Date when the page needs to be publishing</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.SchedulePublish(System.DateTime)">
            <summary>
            Schedules the publication of a client side page
            </summary>
            <param name="publishDate">Date when the page needs to be publishing</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.RemoveSchedulePublishAsync">
            <summary>
            Removes the publication schedule of a client side page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.RemoveSchedulePublish">
            <summary>
            Removes the publication schedule of a client side page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.DemoteNewsArticle">
            <summary>
            Demotes an client side <see cref="F:PnP.Core.Model.SharePoint.PageLayoutType.Article"/> news page as a regular client side page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.DemoteNewsArticleAsync">
            <summary>
            Demotes an client side <see cref="F:PnP.Core.Model.SharePoint.PageLayoutType.Article"/> news page as a regular client side page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.PromoteAsNewsArticle">
            <summary>
            Promotes a regular <see cref="F:PnP.Core.Model.SharePoint.PageLayoutType.Article"/> client side page as a news page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.PromoteAsNewsArticleAsync">
            <summary>
            Promotes a regular <see cref="F:PnP.Core.Model.SharePoint.PageLayoutType.Article"/> client side page as a news page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.PromoteAsHomePage">
            <summary>
            Sets the current <see cref="T:PnP.Core.Model.SharePoint.IPage"/> as home page for the current site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.PromoteAsHomePageAsync">
            <summary>
            Sets the current <see cref="T:PnP.Core.Model.SharePoint.IPage"/> as home page for the current site
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AreCommentsDisabled">
            <summary>
            Does this page have comments disabled
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AreCommentsDisabledAsync">
            <summary>
            Does this page have comments disabled
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.EnableComments">
            <summary>
            Enable commenting on this page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.EnableCommentsAsync">
            <summary>
            Enable commenting on this page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.DisableComments">
            <summary>
            Disable commenting on this page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.DisableCommentsAsync">
            <summary>
            Disable commenting on this page
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.WebPartIdToDefaultWebPart(System.String)">
            <summary>
            Translated a given web part id to a <see cref="T:PnP.Core.Model.SharePoint.DefaultWebPart"/> enum. Non default web parts will be returned as <see cref="F:PnP.Core.Model.SharePoint.DefaultWebPart.ThirdParty"/>
            </summary>
            <param name="id">Web part id to lookup</param>
            <returns>Corresponding <see cref="T:PnP.Core.Model.SharePoint.DefaultWebPart"/> enum value</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.DefaultWebPartToWebPartId(PnP.Core.Model.SharePoint.DefaultWebPart)">
            <summary>
            Translates a given <see cref="T:PnP.Core.Model.SharePoint.DefaultWebPart"/> enum to it's corresponding web part id. Non default web parts will be returned as empty string
            </summary>
            <param name="webPart"><see cref="T:PnP.Core.Model.SharePoint.DefaultWebPart"/> enum to translate to it's id</param>
            <returns>The corresponding web part id</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AvailablePageComponentsAsync(System.String)">
            <summary>
            Gets a list of available client side web parts to use, optionally filtered by a given name
            </summary>
            <param name="name">Name of the web part to retrieve</param>
            <returns>List of available <see cref="T:PnP.Core.Model.SharePoint.IPageComponent"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.AvailablePageComponents(System.String)">
            <summary>
            Gets a list of available client side web parts to use, optionally filtered by a given name
            </summary>
            <param name="name">Name of the web part to retrieve</param>
            <returns>List of available <see cref="T:PnP.Core.Model.SharePoint.IPageComponent"/></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.InstantiateDefaultWebPartAsync(PnP.Core.Model.SharePoint.DefaultWebPart)">
            <summary>
            Instantiates a new web part with default data and returns it
            </summary>
            <param name="webPart">Default web part to instantiate</param>
            <returns>Instantiated web part</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.InstantiateDefaultWebPart(PnP.Core.Model.SharePoint.DefaultWebPart)">
            <summary>
            Instantiates a new web part with default data and returns it
            </summary>
            <param name="webPart">Default web part to instantiate</param>
            <returns>Instantiated web part</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetPageTranslationsAsync">
            <summary>
            Returns the page translation status for a given page
            </summary>
            <returns><see cref="T:PnP.Core.Model.SharePoint.IPageTranslationStatusCollection"/> list containing information about this page's translations</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetPageTranslations">
            <summary>
            Returns the page translation status for a given page
            </summary>
            <returns><see cref="T:PnP.Core.Model.SharePoint.IPageTranslationStatusCollection"/> list containing information about this page's translations</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.TranslatePagesAsync(PnP.Core.Model.SharePoint.PageTranslationOptions)">
            <summary>
            Creates page translations for the requested languages
            </summary>
            <param name="pageTranslationOptions">Options describing the languages in which a translation needs to be created</param>
            <returns><see cref="T:PnP.Core.Model.SharePoint.IPageTranslationStatusCollection"/> list containing information about this page's translations</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.TranslatePagesAsync">
            <summary>
            Creates page translations for all the languages defined as multi-lingual languages in the site
            </summary>
            <returns><see cref="T:PnP.Core.Model.SharePoint.IPageTranslationStatusCollection"/> list containing information about this page's translations</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.TranslatePages(PnP.Core.Model.SharePoint.PageTranslationOptions)">
            <summary>
            Creates page translations for the requested languages
            </summary>
            <param name="pageTranslationOptions">Options describing the languages in which a translation needs to be created</param>
            <returns><see cref="T:PnP.Core.Model.SharePoint.IPageTranslationStatusCollection"/> list containing information about this page's translations</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.TranslatePages">
            <summary>
            Creates page translations for all the languages defined as multi-lingual languages in the site
            </summary>
            <returns><see cref="T:PnP.Core.Model.SharePoint.IPageTranslationStatusCollection"/> list containing information about this page's translations</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetCommentsAsync(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IComment,System.Object}}[])">
            <summary>
            Get list item comments
            </summary>
            <param name="selectors">The expressions declaring the fields to select</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetComments(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IComment,System.Object}}[])">
            <summary>
            Get list item comments
            </summary>
            <param name="selectors">The expressions declaring the fields to select</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.LikeAsync">
            <summary>
            Likes a page
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.Like">
            <summary>
            Likes a page
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.UnlikeAsync">
            <summary>
            Unlikes a page
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.Unlike">
            <summary>
            Unlikes a page
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetLikedByInformationAsync">
            <summary>
            Returns information about the likes on this page
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetLikedByInformation">
            <summary>
            Returns information about the likes on this page
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetImageWebPartAsync(System.String,PnP.Core.Model.SharePoint.PageImageOptions)">
            <summary>
            Prepares an Image web part for adding to a page
            </summary>
            <param name="serverRelativeUrl">Server relative url of the image to show in the image web part</param>
            <param name="imageOptions">Options to configure the image when being added</param>
            <returns>Configured image web part which can be added to the page</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetImageWebPart(System.String,PnP.Core.Model.SharePoint.PageImageOptions)">
            <summary>
            Prepares an Image web part for adding to a page
            </summary>
            <param name="serverRelativeUrl">Server relative url of the image to show in the image web part</param>
            <param name="imageOptions">Options to configure the image when being added</param>
            <returns>Configured image web part which can be added to the page</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetInlineImageAsync(PnP.Core.Model.SharePoint.IPageText,System.String,PnP.Core.Model.SharePoint.PageImageOptions)">
            <summary>
            Prepares an inline image for adding to text by adding the needed image web part and returning the HTML snippet that needs to be appended to the text editor content
            </summary>
            <param name="textEditorInstance">Text editor instance to add the inline image to</param>
            <param name="serverRelativeUrl">Server relative url of the image to add inline</param>
            <param name="imageOptions">Options to configure the inline image when being added</param>
            <returns>Html snippet to be appended to the text editor content</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IPage.GetInlineImage(PnP.Core.Model.SharePoint.IPageText,System.String,PnP.Core.Model.SharePoint.PageImageOptions)">
            <summary>
            Prepares an inline image for adding to text by adding the needed image web part and returning the HTML snippet that needs to be appended to the text editor content
            </summary>
            <param name="textEditorInstance">Text editor instance to add the inline image to</param>
            <param name="serverRelativeUrl">Server relative url of the image to add inline</param>
            <param name="imageOptions">Options to configure the inline image when being added</param>
            <returns>Html snippet to be appended to the text editor content</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IPageComponent">
            <summary>
            Client side webpart object (retrieved via the _api/web/GetClientSideWebParts REST call)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageComponent.ComponentType">
            <summary>
            Component type for client side webpart object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageComponent.Id">
            <summary>
            Id for client side webpart object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageComponent.Manifest">
            <summary>
            Manifest for client side webpart object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageComponent.ManifestType">
            <summary>
            Manifest type for client side webpart object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageComponent.Name">
            <summary>
            Name for client side webpart object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageComponent.Status">
            <summary>
            Status for client side webpart object
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IPageHeader">
            <summary>
            Class that implements the modern page header
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.Type">
            <summary>
            Returns the type of header
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.ImageServerRelativeUrl">
            <summary>
            Server relative link to page header image, set to null for default header image.
            Note: image needs to reside in the current site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.TranslateX">
            <summary>
            Image focal point X coordinate
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.TranslateY">
            <summary>
            Image focal point Y coordinate
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.LayoutType">
            <summary>
            Type of layout used inside the header
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.TextAlignment">
            <summary>
            Alignment of the title in the header
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.ShowTopicHeader">
            <summary>
            Show the topic header in the title region
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.ShowPublishDate">
            <summary>
            Show the page publication date in the title region
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.TopicHeader">
            <summary>
            The topic header text to show if ShowTopicHeader is set to true
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.AlternativeText">
            <summary>
            Alternative text for the header image
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.Authors">
            <summary>
            Page author(s) to be displayed
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.AuthorByLine">
            <summary>
            Page author byline
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageHeader.AuthorByLineId">
            <summary>
            Id of the page author
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IPageText">
            <summary>
            Text web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageText.Text">
            <summary>
            Text value of the client side text control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageText.PreviewText">
            <summary>
            Text used in page preview in news web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageText.Type">
            <summary>
            Type of the control (= <see cref="T:PnP.Core.Model.SharePoint.IPageText"/>)
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IPageTranslationStatus">
            <summary>
            Translation status for a page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageTranslationStatus.Culture">
            <summary>
            The culture of this translation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageTranslationStatus.Path">
            <summary>
            The web-relative path to this page translation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageTranslationStatus.LastModified">
            <summary>
            Last modified date of this translation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageTranslationStatus.FileStatus">
            <summary>
            The file status (checked out, draft, published) of this translation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageTranslationStatus.HasPublishedVersion">
            <summary>
            The file status (checked out, draft, published) of this translation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageTranslationStatus.Title">
            <summary>
            The page title of this translation
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IPageTranslationStatusCollection">
            <summary>
            Translation status of a page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageTranslationStatusCollection.UntranslatedLanguages">
            <summary>
            List of languages for which this page was not yet translated
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageTranslationStatusCollection.TranslatedLanguages">
            <summary>
            List of <see cref="T:PnP.Core.Model.SharePoint.IPageTranslationStatus"/> objects for the translations of this page
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IPageWebPart">
            <summary>
            This class is used to instantiate modern web parts. Using this class you can instantiate a control and 
            add it on a <see cref="T:PnP.Core.Model.SharePoint.IPage"/>.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.JsonWebPartData">
            <summary>
            Value of the "data-sp-webpartdata" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.HtmlPropertiesData">
            <summary>
            Value of the "data-sp-htmlproperties" element
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.HtmlProperties">
            <summary>
            Value of the "data-sp-htmlproperties" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.WebPartId">
            <summary>
            ID of the client side web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.SupportsFullBleed">
            <summary>
            Supports full bleed display experience
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.WebPartData">
            <summary>
            Value of the "data-sp-webpart" attribute
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.Title">
            <summary>
            Title of the web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.Description">
            <summary>
            Description of the web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.WebPartPreviewImage">
            <summary>
            Preview image that can serve as page preview image when the page holding this web part is promoted to a news page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.PropertiesJson">
            <summary>
            Json serialized web part information. For 1st party web parts this ideally is the *full* JSON string 
            fetch via workbench or via copying it from an existing page. It's important that the serverProcessedContent
            element is included here!
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.Properties">
            <summary>
            Web properties as configurable <see cref="T:System.Text.Json.JsonElement"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.ServerProcessedContent">
            <summary>
            ServerProcessedContent json node
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.DynamicDataPaths">
            <summary>
            DynamicDataPaths json node
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.DynamicDataValues">
            <summary>
            DynamicDataValues json node
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.Type">
            <summary>
            Return <see cref="P:PnP.Core.Model.SharePoint.IPageWebPart.Type"/> of the client side web part
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.IsHeaderControl">
            <summary>
            This control lives in the page header (not removable control)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IPageWebPart.RichTextEditorInstanceId">
            <summary>
            If this webpart is used inline in a text editor then this property points to the editor using it
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageImageOptions">
            <summary>
            Defines the options to configure an image
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageImageOptions.Alignment">
            <summary>
            Defines the alignment of the image
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageImageOptions.Width">
            <summary>
            Defines the width of the image
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageImageOptions.Height">
            <summary>
            Defines the height of the image
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageImageOptions.Link">
            <summary>
            Link the image should point to on click
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageImageOptions.AlternativeText">
            <summary>
            Alternative text of the image
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageImageOptions.Caption">
            <summary>
            Image caption to show underneath the embedded image
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageImageOptions.IsInlineImage">
            <summary>
            Internal indicator to specify whether this image will be used as inline image or not
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.PageTranslationOptions">
            <summary>
            Class that defines the languages for which a translation must be generated
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.PageTranslationOptions.LanguageCodes">
            <summary>
            List of languages to generate a translation for
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.PageTranslationOptions.AddLanguage(System.Int32)">
            <summary>
            Add a new language to the list of langauges to be generated. Note that this language must be a language configured for multi-lingual pages on the site
            </summary>
            <param name="languageId">Id defining the language to add. See https://capacreative.co.uk/resources/reference-sharepoint-online-languages-ids/ for a list of possible languages</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ACEFactory">
            <summary>
            Default ACE factory
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ACEFactory.ACEId">
            <summary>
            Not used by default factory
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ACEFactory.BuildACEFromWebPart(PnP.Core.Model.SharePoint.IPageWebPart)">
            <summary>
            Returns AdaptiveCardExtension with custom properties deserialized to JsonElement
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AssignedTasksACEFactory">
            <summary>
            Creates new instance of Assigened Tasks ACE based on provided WebPart
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AssignedTasksACEFactory.ACEId">
            <summary>
            Id of Assigened Tasks AdaptiveCardExtension
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.AssignedTasksACEFactory.BuildACEFromWebPart(PnP.Core.Model.SharePoint.IPageWebPart)">
            <summary>
            Returns Assigened Tasks ACE
            </summary>
            <param name="control">WebPart used to store ACE configuration</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CardDesignerACEFactory">
            <summary>
            Creates new instance of CardDesigner ACE based on provided WebPart
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerACEFactory.ACEId">
            <summary>
            Id of CardDesigner AdaptiveCardExtension
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CardDesignerACEFactory.BuildACEFromWebPart(PnP.Core.Model.SharePoint.IPageWebPart)">
            <summary>
            Returns CardDesigner
            </summary>
            <param name="control">WebPart used to store ACE configuration</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TeamsACEFactory">
            <summary>
            Creates new instance of TeamsACE based on provided WebPart
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TeamsACEFactory.ACEId">
            <summary>
            Id of Teams AdaptiveCardExtension
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.TeamsACEFactory.BuildACEFromWebPart(PnP.Core.Model.SharePoint.IPageWebPart)">
            <summary>
            Returns TeamsACE
            </summary>
            <param name="control">WebPart used to store ACE configuration</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ACEProperties">
            <summary>
            Represents common properties of ACEs
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ACEProperties.AceData">
            <summary>
            Shared Adaptive Card properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ACEProperties.Title">
            <summary>
            ACE Title
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ACEProperties.Description">
            <summary>
            ACE Description
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ACEProperties.IconProperty">
            <summary>
            ACE Icon property - usually a link to icon
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ACEData">
            <summary>
            Represents aceDate part of ACE properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ACEData.CardSize">
            <summary>
            Large or null for small
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ButtonAction">
            <summary>
            ACE card button action
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ButtonAction.Title">
            <summary>
            Button title
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ButtonAction.Style">
            <summary>
            Supported values: positive or defailt
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ButtonAction.Action">
            <summary>
            Action to execute
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AdaptiveCardAction">
            <summary>
            ACE card action
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardAction.Type">
            <summary>
            Supported values Action.OpenUrl, Action.Submit, Action.ShowCard, Action.Execute, ExternalLink,QuickView
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardAction.Parameters">
            <summary>
            Action parameters
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AdaptiveCardAction`1">
            <summary>
            ACE card action
            </summary>
            <typeparam name="T">Type ACE card action</typeparam>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardAction`1.Parameters">
            <summary>
            ACE card action parameters
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ExternalLinkAction">
            <summary>
            External link ACE action
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ExternalLinkAction.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ExternalLinkActionParameter">
            <summary>
            External link parameter
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ExternalLinkActionParameter.Target">
            <summary>
            External link target
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.QuickViewAction">
            <summary>
            Quick view ACE action
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.QuickViewAction.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.QuickViewActionParameter">
            <summary>
            Quick view ACE action parameters
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.QuickViewActionParameter.View">
            <summary>
            Selected view
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AdaptiveCardControl">
            <summary>
            ACE card control
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardControl.Type">
            <summary>
            Control type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardControl.Size">
            <summary>
            Control size
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardControl.Weight">
            <summary>
            Control weight
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardControl.Text">
            <summary>
            Control text
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardControl.Wrap">
            <summary>
            Wrap text in control
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AdaptiveCardExtension">
            <summary>
            Abstract class representing ACE
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.AdaptiveCardExtension.#ctor(PnP.Core.Model.SharePoint.CardSize)">
            <summary>
            Default constructor
            </summary>
            <param name="cardSize"></param>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension.Id">
            <summary>
            Gets or sets JsonProperty "id"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension.InstanceId">
            <summary>
            Gets or sets JsonProperty "instanceId"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension.Title">
            <summary>
            Gets or sets JsonProperty "title"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension.Description">
            <summary>
            Gets or sets JsonProperty "description"
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension.Properties">
            <summary>
            Typed properties of the ACE
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension.JsonProperties">
            <summary>
            Json properties of the ACE once added to a dashboard
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension.IconProperty">
            <summary>
            Icon used by the ACE
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension.CardSize">
            <summary>
            Size of the ACE
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension.Order">
            <summary>
            Order of this ACE inside the dashboard
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension.ACEType">
            <summary>
            Type of this ACE
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AdaptiveCardExtension`1">
            <summary>
            Defines an ACE
            </summary>
            <typeparam name="T">Type of the ACE</typeparam>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.AdaptiveCardExtension`1.#ctor(PnP.Core.Model.SharePoint.CardSize)">
            <summary>
            Default constructor
            </summary>
            <param name="cardSize"></param>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardExtension`1.Properties">
            <summary>
            Properties of the ACE
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.GenericAdaptiveCardExtension">
            <summary>
            Representents a generic, non typed, ACE
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AdaptiveCardTemplate">
            <summary>
            ACE template
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardTemplate.Type">
            <summary>
            ACE template type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardTemplate.Body">
            <summary>
            ACE body
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.AdaptiveCardTemplate.Actions">
            <summary>
            ACE actions
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.AssignedTasksACE">
            <summary>
            Assigned tasks ACE
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.AssignedTasksACE.#ctor(PnP.Core.Model.SharePoint.CardSize)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CardDesignerACE">
            <summary>
            Represents the card designer ACE
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.CardDesignerACE.#ctor(PnP.Core.Model.SharePoint.CardSize)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CardDesignerProps">
            <summary>
            Card designer ACE properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.TemplateType">
            <summary>
            Represents type of the Card primaryText, heading or image
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.CardIconSourceType">
            <summary>
            Icon source type of the card
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.CardImageSourceType">
            <summary>
            Image source type of the card
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.CardSelectionAction">
            <summary>
            Describes action on card clicked
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.NumberCardButtonActions">
            <summary>
            The number of buttons that will be rendered by ACE
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.CardButtonActions">
            <summary>
            Describes actions on card buttons clicked
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.QuickViews">
            <summary>
            Lists of supported QuickViews
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.QuickViewConfigured">
            <summary>
            Returns true if ACE should use QuickView
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.CurrentQuickViewIndex">
            <summary>
            Current card quick view index
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.DataType">
            <summary>
            Card data type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.SPRequestUrl">
            <summary>
            SharePoint request url for the card
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.RequestUrl">
            <summary>
            Request url for the card
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.GraphRequestUrl">
            <summary>
            Microsoft Graph request url for the card
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.PrimaryText">
            <summary>
            Card primary text
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CardDesignerProps.CustomImageSettings">
            <summary>
            Card icon image settings
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.CustomImageSettings">
            <summary>
            Card icon image settings
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CustomImageSettings.Type">
            <summary>
            Image type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CustomImageSettings.AltText">
            <summary>
            Image alternative text
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.CustomImageSettings.ImageUrl">
            <summary>
            Image url
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.QuickView">
            <summary>
            Representation of ACE QuickView
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.QuickView.Data">
            <summary>
            Serialized data to be used with quick view template
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.QuickView.Template">
            <summary>
            Serialized Adaptive Card template
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.QuickView.Id">
            <summary>
            Identificator of the quick view
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.QuickView.DisplayName">
            <summary>
            Display name of the quick view
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TeamsACE">
            <summary>
            Represents Teams App ACE
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.TeamsACE.#ctor(PnP.Core.Model.SharePoint.CardSize)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TeamsACEProperties">
            <summary>
            Teams ACE Properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TeamsACEProperties.SelectedApp">
            <summary>
            Teams ACE app
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TeamsACEApp">
            <summary>
            Teams ACE app
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TeamsACEApp.AppId">
            <summary>
            ACE app id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TeamsACEApp.Description">
            <summary>
            ACE description
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TeamsACEApp.Title">
            <summary>
            ACE title
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TeamsACEApp.DistributionMethod">
            <summary>
            ACE distributionmethod
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TeamsACEApp.IconProperties">
            <summary>
            ACE icon properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TeamsACEApp.IsBot">
            <summary>
            ACE is bot
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TeamsACEAppIconProperties">
            <summary>
            Teams ACE app icon properties
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TeamsACEAppIconProperties.ColorIconWebUrl">
            <summary>
            Color icon web url
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.TeamsACEAppIconProperties.OutlineIconWebUrl">
            <summary>
            Outline icon web url
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IVivaDashboard">
            <summary>
            Represents Viva Dashboard page
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IVivaDashboard.ACEs">
            <summary>
            Returns list of ACEs added to the Dashboard
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IVivaDashboard.Save">
            <summary>
            Saves changes made to ACEs by persisting the dashboard
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IVivaDashboard.SaveAsync">
            <summary>
            Saves changes made to ACEs by persisting the dashboard
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IVivaDashboard.NewACE(PnP.Core.Model.SharePoint.DefaultACE,PnP.Core.Model.SharePoint.CardSize)">
            <summary>
            Creates a new ACE for adding on the dashboard based upon the default settings of the 
            </summary>
            <param name="defaultACE">OOB ace to instantiate</param>
            <param name="cardSize">Card to use when the ACE is added to the dashboard</param>
            <returns>Configured ACE, ready for customization and adding</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IVivaDashboard.NewACE(System.Guid,PnP.Core.Model.SharePoint.CardSize)">
            <summary>
            Creates a new ACE for adding on the dashboard based upon the default settings of the 
            </summary>
            <param name="aceId">ID of the ace to instantiate</param>
            <param name="cardSize">Card to use when the ACE is added to the dashboard</param>
            <returns>Configured ACE, ready for customization and adding</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IVivaDashboard.AddACE(PnP.Core.Model.SharePoint.AdaptiveCardExtension)">
            <summary>
            Adds new ACE
            </summary>
            <param name="ace">ACE to add</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IVivaDashboard.AddACE(PnP.Core.Model.SharePoint.AdaptiveCardExtension,System.Int32)">
            <summary>
            Adds new ACE
            </summary>
            <param name="ace">ACE to add</param>
            <param name="order">Order of the ACE in the dashboard</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IVivaDashboard.UpdateACE(PnP.Core.Model.SharePoint.AdaptiveCardExtension)">
            <summary>
            Updates an existing dashboard ACE
            </summary>
            <param name="ace">ACE to update</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IVivaDashboard.UpdateACE(PnP.Core.Model.SharePoint.AdaptiveCardExtension,System.Int32)">
            <summary>
            Updates an existing dashboard ACE
            </summary>
            <param name="ace">ACE to update</param>
            <param name="order">Order of the ACE in the dashboard</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IVivaDashboard.RemoveACE(System.Guid)">
            <summary>
            Removes ACE with provided Guid from the Dashboard
            </summary>
            <param name="instanceId"></param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IVivaDashboard.RegisterCustomACEFactory(PnP.Core.Model.SharePoint.ACEFactory)">
            <summary>
            Allows Dashboard to read custom Adaptive Card Extension as a custom ACE with custom properties.
            Once used You can access custom ACEs by dashboard.ACEs.OfType<![CDATA[T]]>();
            </summary>
            <param name="aceFactory">An implementation of ACEFactory for your custom ACE</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.HubSite">
            <summary>
            HubSite class, write your custom code here
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.NavigationType">
            <summary>
            Navigation type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.NavigationType.TopNavigationBar">
            <summary>
            Top navigation bar
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.NavigationType.QuickLaunch">
            <summary>
            Quick launch navigation bar
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFeature">
            <summary>
            Represents a Feature in SharePoint Online
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFeature.DefinitionId">
            <summary>
            The ID of the Feature
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFeature.DisplayName">
            <summary>
            The name of the feature
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IFeature.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IFeatureCollection">
            <summary>
            Collection of site or web scoped features
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.EnableAsync(System.Guid)">
            <summary>
            Enable a feature
            </summary>
            <param name="id">Id of the feature to enable</param>
            <returns>Enabled feature</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.Enable(System.Guid)">
            <summary>
            Enable a feature
            </summary>
            <param name="id">Id of the feature to enable</param>
            <returns>Enabled feature</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.EnableBatchAsync(System.Guid)">
            <summary>
            Enable a feature in batch
            </summary>
            <param name="id">Id of the feature to enable</param>
            <returns>Enabled feature</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.EnableBatch(System.Guid)">
            <summary>
            Enable a feature in batch
            </summary>
            <param name="id">Id of the feature to enable</param>
            <returns>Enabled feature</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.EnableBatchAsync(PnP.Core.Services.Batch,System.Guid)">
            <summary>
            Enable a feature in batch
            </summary>
            <param name="id">Id of the feature to enable</param>
            <param name="batch"><see cref="T:PnP.Core.Services.Batch"/> to add this feature enable request to</param>
            <returns>Enabled feature</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.EnableBatch(PnP.Core.Services.Batch,System.Guid)">
            <summary>
            Enable a feature in batch
            </summary>
            <param name="id">Id of the feature to enable</param>
            <param name="batch"><see cref="T:PnP.Core.Services.Batch"/> to add this feature enable request to</param>
            <returns>Enabled feature</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.DisableAsync(System.Guid)">
            <summary>
            Disable a feature
            </summary>
            <param name="id">Id of the feature to disable</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.Disable(System.Guid)">
            <summary>
            Disable a feature
            </summary>
            <param name="id">Id of the feature to disable</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.DisableBatchAsync(System.Guid)">
            <summary>
            Disable a feature in batch
            </summary>
            <param name="id">Id of the feature to disable</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.DisableBatch(System.Guid)">
            <summary>
            Disable a feature in batch
            </summary>
            <param name="id">Id of the feature to disable</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.DisableBatchAsync(PnP.Core.Services.Batch,System.Guid)">
            <summary>
            Disable a feature in batch
            </summary>
            <param name="id">Id of the feature to disable</param>
            <param name="batch"><see cref="T:PnP.Core.Services.Batch"/> to add this feature disable request to</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.IFeatureCollection.DisableBatch(PnP.Core.Services.Batch,System.Guid)">
            <summary>
            Disable a feature in batch
            </summary>
            <param name="id">Id of the feature to disable</param>
            <param name="batch"><see cref="T:PnP.Core.Services.Batch"/> to add this feature disable request to</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.IHubSite">
            <summary>
            Public interface to define a HubSite object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.Description">
            <summary>
            The description of the HubSite.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.EnablePermissionsSync">
            <summary>
            Gets or sets if permission sync to associated sites is enabled or not.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.EnforcedECTs">
            <summary>
            Gets or sets the list of Enforced ECTs on the HubSite
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.EnforcedECTsVersion">
            <summary>
            Gets or sets EnforcedECTs version
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.HideNameInNavigation">
            <summary>
            Gets or sets if the HubSite nav includes the name as well as the logo.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.Id">
            <summary>
            The HubSite ID
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.LogoUrl">
            <summary>
            The logo URL of the HubSite
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.ParentHubSiteId">
            <summary>
            The parent hub site id to which this hub connects
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.PermissionsSyncTag">
            <summary>
            Hub permissions sync tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.RequiresJoinApproval">
            <summary>
            Gets or sets if the HubSite Join requires approval.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.SiteDesignId">
            <summary>
            The site design to be executed when the hub is joined.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.SiteId">
            <summary>
            The Site Collection ID of the HubSite
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.SiteUrl">
            <summary>
            The URL of the HubSite
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.Targets">
            <summary>
            List of security groups with access to join the HubSite.
            Null if everyone has permission.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.TenantInstanceId">
            <summary>
            The tenant instance ID in which the site hub is located.
            Use empty guid for the default tenant instance.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.Title">
            <summary>
            Specifies the name of the HubSite.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.IHubSite.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.INavigation">
            <summary>
            Represents the Navigation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigation.Id">
            <summary>
            Random property. We need this for the Key property.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigation.UseShared">
            <summary>
            A property that decides whether the navigation is inherited from the site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigation.QuickLaunch">
            <summary>
            A property that will return the navigation nodes of the Quicklaunch menu of the web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigation.TopNavigationBar">
            <summary>
            A property that will return the navigation nodes of the TopNavigation menu of the web
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigation.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.INavigationNode">
            <summary>
            Represents the Navigation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNode.Id">
            <summary>
            The ID of the navigation node
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNode.Url">
            <summary>
            The link that the navigation node is referring to
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNode.IsExternal">
            <summary>
            Defines if the navigation node links to an external page or stays within SP
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNode.IsDocLib">
            <summary>
            Defines if the navigation node refers to a doc lib
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNode.IsVisible">
            <summary>
            Defines if the navigation node is visible or not
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNode.Title">
            <summary>
            Title of the navigation node
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNode.CurrentLCID">
            <summary>
            The language ID under which the navigation node is created
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNode.ListTemplateType">
            <summary>
            The list template type of the navigation node
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNode.AudienceIds">
            <summary>
            
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNode.All">
            <summary>
            A special property used to add an asterisk to a $select statement
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNode.GetChildNodesAsync(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.INavigationNode,System.Object}}[])">
            <summary>
            Method to obtain all the child nodes of a navigation node
            </summary>
            <param name="selectors"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNode.GetChildNodes(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.INavigationNode,System.Object}}[])">
            <summary>
            Method to obtain all the child nodes of a navigation node
            </summary>
            <param name="selectors"></param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.INavigationNodeCollection">
            <summary>
            Represents the Navigation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.INavigationNodeCollection.NavigationType">
            <summary>
            This variable will define whether we will be using the top navigation or the quick launch for our API calls
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.GetById(System.Int32,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.INavigationNode,System.Object}}[])">
            <summary>
            Method to select a specific Navigation Node
            </summary>
            <param name="id">The Id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The navigation node, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.GetByIdAsync(System.Int32,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.INavigationNode,System.Object}}[])">
            <summary>
            Method to select a specific Navigation Node
            </summary>
            <param name="id">The Id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The navigation node, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.Add(PnP.Core.Model.SharePoint.NavigationNodeOptions)">
            <summary>
            Method to add a Navigation Node
            </summary>
            <param name="navigationNodeOptions">The options for the navigation node</param>
            <returns>The navigation node</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.AddAsync(PnP.Core.Model.SharePoint.NavigationNodeOptions)">
            <summary>
            Method to add a Navigation Node
            </summary>
            <param name="navigationNodeOptions">The options for the navigation node</param>
            <returns>The navigation node</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.DeleteAllNodes">
            <summary>
            Method to delete all navigation nodes from a specific navigation type
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.DeleteAllNodesAsync">
            <summary>
            Method to delete all navigation nodes from a specific navigation type
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.DeleteAllNodesBatch">
            <summary>
            Method to delete all navigation nodes from a specific navigation type in a batch
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.DeleteAllNodesBatchAsync">
            <summary>
            Method to delete all navigation nodes from a specific navigation type in a batch
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.DeleteAllNodesBatch(PnP.Core.Services.Batch)">
            <summary>
            Method to delete all navigation nodes from a specific navigation type in a batch
            </summary>
            <param name="batch">The batch to add this reques to</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.DeleteAllNodesBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Method to delete all navigation nodes from a specific navigation type in a batch
            </summary>
            <param name="batch">The batch to add this reques to</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.MoveNodeAfter(PnP.Core.Model.SharePoint.INavigationNode,PnP.Core.Model.SharePoint.INavigationNode)">
            <summary>
            Function to move a node after another navigation node
            </summary>
            <param name="nodeToMove"></param>
            <param name="nodeToMoveAfter"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.INavigationNodeCollection.MoveNodeAfterAsync(PnP.Core.Model.SharePoint.INavigationNode,PnP.Core.Model.SharePoint.INavigationNode)">
            <summary>
            Function to move a node after another navigation node
            </summary>
            <param name="nodeToMove"></param>
            <param name="nodeToMoveAfter"></param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.NavigationNodeOptions">
            <summary>
            Options to set when creating a new navigation node
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.NavigationNodeOptions.Title">
            <summary>
            Title of the new node (e.g. Home)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.NavigationNodeOptions.Url">
            <summary>
            Url of the navigationnode (e.g. https://contoso.sharepoint.com/sites/testsite)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.NavigationNodeOptions.ParentNode">
            <summary>
            Defines the parent node of the navigation node
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.SyntexModel.PublishModelBatchAsync(System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelPublishOptions})">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="publicationOptions">Information defining the model publications</param>
            <returns>Information about the model publications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.SyntexModel.PublishModelBatch(System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelPublishOptions})">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="publicationOptions">Information defining the model publications</param>
            <returns>Information about the model publications</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption">
            <summary>
            Options that define how adding a classifier will impact the library's views
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption.NewView">
            <summary>
            We will create a new view for your destination library. Your classifier will appear as a content type with a view, and your extractors will appear as site columns.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption.NewViewAsDefault">
            <summary>
            We will create a new view for your destination library. Your classifier will appear as a content type with a view, and your extractors will appear as site columns. 
            This new view will also be the default view
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption.NoNewView">
            <summary>
            No view is being added
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult">
            <summary>
            Result of a classify and extract operation requested for a file
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult.Created">
            <summary>
            Date of the classify and extract request creation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult.DeliverDate">
            <summary>
            Date of the classify and extract request delivery
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult.Id">
            <summary>
            Id of the classify and extract request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult.WorkItemType">
            <summary>
            Type of this Syntex machine learning work item
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult.ErrorMessage">
            <summary>
            The classify and extract error (if there was any)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult.StatusCode">
            <summary>
            The status code of the classify and extract request, 2xx == success
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult.Status">
            <summary>
            Status of the classify and extract request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult.TargetServerRelativeUrl">
            <summary>
            Server relative url of the file requested to be classified and extracted
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult.TargetSiteUrl">
            <summary>
            Url of the site containing the file requested to be classified and extracted
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexClassifyAndExtractResult.TargetWebServerRelativeUrl">
            <summary>
            Server relative url of the web containing the file requested to be classified and extracted
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISyntexContentCenter">
            <summary>
            Syntex Content Center site
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexContentCenter.Web">
            <summary>
            Web that represents the Syntex Content Center
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexContentCenter.GetSyntexModelsAsync(System.String)">
            <summary>
            Gets one or more Syntex models from the Syntex content center
            </summary>
            <param name="modelName">Name of the model to filter on, leaving empty returns all models</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexContentCenter.GetSyntexModels(System.String)">
            <summary>
            Gets one or more Syntex models from the Syntex content center
            </summary>
            <param name="modelName">Name of the model to filter on, leaving empty returns all models</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISyntexModel">
            <summary>
            Syntex model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModel.Id">
            <summary>
            Id of a model (= id of the list item)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModel.UniqueId">
            <summary>
            Unique id of the model (= unique id of the model file)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModel.Name">
            <summary>
            Name of the model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModel.Description">
            <summary>
            Model description
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModel.ModelLastTrained">
            <summary>
            Date when the model was trained for the last time
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModel.ListItem">
            <summary>
            File holding the classifier
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.GetModelPublicationsAsync">
            <summary>
            Gets a list of libraries to which this model is published
            </summary>
            <returns>The list of libraries to which this model is published</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.GetModelPublications">
            <summary>
            Gets a list of libraries to which this model is published
            </summary>
            <returns>The list of libraries to which this model is published</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.GetModelPublicationsBatchAsync">
            <summary>
            Gets a list of libraries to which this model is published
            </summary>
            <returns>The list of libraries to which this model is published</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.GetModelPublicationsBatch">
            <summary>
            Gets a list of libraries to which this model is published
            </summary>
            <returns>The list of libraries to which this model is published</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.GetModelPublicationsBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Gets a list of libraries to which this model is published
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns>The list of libraries to which this model is published</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.GetModelPublicationsBatch(PnP.Core.Services.Batch)">
            <summary>
            Gets a list of libraries to which this model is published
            </summary>
            <param name="batch">Batch to add this request to</param>
            <returns>The list of libraries to which this model is published</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelAsync(PnP.Core.Model.SharePoint.IList,PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="library">Library to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModel(PnP.Core.Model.SharePoint.IList,PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="library">Library to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.IList,PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="library">Library to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.IList,PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="library">Library to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatchAsync(PnP.Core.Model.SharePoint.IList,PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="library">Library to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatch(PnP.Core.Model.SharePoint.IList,PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="library">Library to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelAsync(System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList},PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="libraries">List of libraries to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModel(System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList},PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="libraries">List of libraries to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatchAsync(PnP.Core.Services.Batch,System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList},PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="libraries">List of libraries to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatch(PnP.Core.Services.Batch,System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList},PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="libraries">List of libraries to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatchAsync(System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList},PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="libraries">List of libraries to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatch(System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList},PnP.Core.Model.SharePoint.MachineLearningPublicationViewOption)">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="libraries">List of libraries to publish this model to</param>
            <param name="viewOption">Determines how adding the model changes the library's views</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelAsync(PnP.Core.Model.SharePoint.SyntexModelPublishOptions)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="publicationOptions">Information defining the model publication</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModel(PnP.Core.Model.SharePoint.SyntexModelPublishOptions)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="publicationOptions">Information defining the model publication</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.SyntexModelPublishOptions)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="publicationOptions">Information defining the model publication</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.SyntexModelPublishOptions)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="publicationOptions">Information defining the model publication</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatchAsync(PnP.Core.Model.SharePoint.SyntexModelPublishOptions)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="publicationOptions">Information defining the model publication</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatch(PnP.Core.Model.SharePoint.SyntexModelPublishOptions)">
            <summary>
            Publish this model to a library
            </summary>
            <param name="publicationOptions">Information defining the model publication</param>
            <returns>Information about the model publication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelAsync(System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelPublishOptions})">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="publicationOptions">Information defining the model publications</param>
            <returns>Information about the model publications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModel(System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelPublishOptions})">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="publicationOptions">Information defining the model publications</param>
            <returns>Information about the model publications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatchAsync(PnP.Core.Services.Batch,System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelPublishOptions})">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="publicationOptions">Information defining the model publications</param>
            <returns>Information about the model publications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatch(PnP.Core.Services.Batch,System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelPublishOptions})">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="publicationOptions">Information defining the model publications</param>
            <returns>Information about the model publications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatchAsync(System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelPublishOptions})">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="publicationOptions">Information defining the model publications</param>
            <returns>Information about the model publications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.PublishModelBatch(System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelPublishOptions})">
            <summary>
            Publish this model to a list of libraries
            </summary>
            <param name="publicationOptions">Information defining the model publications</param>
            <returns>Information about the model publications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelAsync(PnP.Core.Model.SharePoint.IList)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="library">Library to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModel(PnP.Core.Model.SharePoint.IList)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="library">Library to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.IList)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="library">Library to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.IList)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="library">Library to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatchAsync(PnP.Core.Model.SharePoint.IList)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="library">Library to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatch(PnP.Core.Model.SharePoint.IList)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="library">Library to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelAsync(System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList})">
            <summary>
            Unpublish this model from the list of libraries
            </summary>
            <param name="libraries">List of libraries to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModel(System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList})">
            <summary>
            Unpublish this model from the list of libraries
            </summary>
            <param name="libraries">List of libraries to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatchAsync(PnP.Core.Services.Batch,System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList})">
            <summary>
            Unpublish this model from the list of libraries
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="libraries">List of libraries to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatch(PnP.Core.Services.Batch,System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList})">
            <summary>
            Unpublish this model from the list of libraries
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="libraries">List of libraries to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatchAsync(System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList})">
            <summary>
            Unpublish this model from the list of libraries
            </summary>
            <param name="libraries">List of libraries to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatch(System.Collections.Generic.List{PnP.Core.Model.SharePoint.IList})">
            <summary>
            Unpublish this model from the list of libraries
            </summary>
            <param name="libraries">List of libraries to unpublish this model from</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelAsync(PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="unPublicationOptions">Information defining the model unpublication</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModel(PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="unPublicationOptions">Information defining the model unpublication</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="unPublicationOptions">Information defining the model unpublication</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="unPublicationOptions">Information defining the model unpublication</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatchAsync(PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="unPublicationOptions">Information defining the model unpublication</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatch(PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions)">
            <summary>
            Unpublish this model from the library
            </summary>
            <param name="unPublicationOptions">Information defining the model unpublication</param>
            <returns>Information about the model unpublication</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelAsync(System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions})">
            <summary>
            Unpublish this model from a list of libraries
            </summary>
            <param name="unPublicationOptions">Information defining the model unpublications</param>
            <returns>Information about the model unpublications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModel(System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions})">
            <summary>
            Unpublish this model from a list of libraries
            </summary>
            <param name="unPublicationOptions">Information defining the model unpublications</param>
            <returns>Information about the model unpublications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatchAsync(PnP.Core.Services.Batch,System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions})">
            <summary>
            Unpublish this model from a list of libraries
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="unPublicationOptions">Information defining the model unpublications</param>
            <returns>Information about the model unpublications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatch(PnP.Core.Services.Batch,System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions})">
            <summary>
            Unpublish this model from a list of libraries
            </summary>
            <param name="batch">Batch to add this request to</param>
            <param name="unPublicationOptions">Information defining the model unpublications</param>
            <returns>Information about the model unpublications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatchAsync(System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions})">
            <summary>
            Unpublish this model from a list of libraries
            </summary>
            <param name="unPublicationOptions">Information defining the model unpublications</param>
            <returns>Information about the model unpublications</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ISyntexModel.UnPublishModelBatch(System.Collections.Generic.List{PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions})">
            <summary>
            Unpublish this model from a list of libraries
            </summary>
            <param name="unPublicationOptions">Information defining the model unpublications</param>
            <returns>Information about the model unpublications</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISyntexModelPublication">
            <summary>
            Defines a model publication
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModelPublication.ModelUniqueId">
            <summary>
            Unique id of the SharePoint Syntex model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModelPublication.TargetLibraryServerRelativeUrl">
            <summary>
            Server relative url of the library registered with the model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModelPublication.TargetSiteUrl">
            <summary>
            Fully qualified URL of the site collection holding the library registered with the model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModelPublication.TargetWebServerRelativeUrl">
            <summary>
            Server relative url of the web holding the library registered with the model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModelPublication.ViewOption">
            <summary>
            The view option specified when registering the model with the library
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ISyntexModelPublicationResult">
            <summary>
            The result of a SharePoint Syntex model publication
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModelPublicationResult.ErrorMessage">
            <summary>
            The publication error (if there was any)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModelPublicationResult.Publication">
            <summary>
            The published model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModelPublicationResult.StatusCode">
            <summary>
            The status code of the publication, 2xx == success
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ISyntexModelPublicationResult.Succeeded">
            <summary>
            Did the publication succeed?
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SyntexModelPublishOptions">
            <summary>
            Information about the library to publish a Syntex model to
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.SyntexModelPublishOptions.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SyntexModelPublishOptions.ViewOption">
            <summary>
            The view option specified when registering the model with the library
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions">
            <summary>
            Information about the library to unpublish a Syntex model from
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions.TargetLibraryServerRelativeUrl">
            <summary>
            Server relative url of the library registered with the model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions.TargetSiteUrl">
            <summary>
            Fully qualified URL of the site collection holding the library registered with the model
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.SyntexModelUnPublishOptions.TargetWebServerRelativeUrl">
            <summary>
            Server relative url of the web holding the library registered with the model
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TermGroupScope">
            <summary>
            Returns type of group. Possible values are 'global', 'system' and 'siteCollection'.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.TermGroupScope.Global">
            <summary>
            Global term group
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.TermGroupScope.System">
            <summary>
            System term group
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.TermGroupScope.SiteCollection">
            <summary>
            Site collection term group
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.TermRelationType">
            <summary>
            Type of relationship between two terms
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.TermRelationType.Pin">
            <summary>
            In a pin relationship, a term can be pinned under a different term in a different term set. 
            In a pinned relationship, new children to the term can only be added in the term set in which the term was created. 
            Any change in the hierarchy under the term is reflected across the sets in which the term was pinned.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.SharePoint.TermRelationType.Reuse">
            <summary>
            The reuse relationship is similar to the pinned relationship except that changes to the reused term can be made from any hierarchy in which the term is reused. 
            Also, a change in hierarchy made to the reused term does not get reflected in the other term sets in which the term is reused.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITerm">
            <summary>
            Represents a term used in a term store. A term can be used to represent an object which can then be used as a metadata to tag conent. Multiple terms can be organized in a hierarchical manner within a set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITerm.Id">
            <summary>
            The Unique ID of the term.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITerm.Labels">
            <summary>
            Name of the term set for each language.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITerm.Descriptions">
            <summary>
            Name of the term set for each language.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITerm.LastModifiedDateTime">
            <summary>
            Last date and time of term modification. Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITerm.CreatedDateTime">
            <summary>
            Date and time of term set creation. Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITerm.Set">
            <summary>
            The term set of this term
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITerm.Terms">
            <summary>
            Collection of child terms of this term
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITerm.Properties">
            <summary>
            Properties on this term set
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITerm.Relations">
            <summary>
            Collection of terms relations
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITerm.AddProperty(System.String,System.String)">
            <summary>
            Adds a property to the term's property collection. Call update to persist this change.
            </summary>
            <param name="key">Property key</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITerm.AddLabelAndDescription(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Adds a term label and optional description for a given language. Call update to persist this change.
            </summary>
            <param name="label">Label for the term</param>
            <param name="languageTag">Language tag for the label and description</param>
            <param name="isDefault">Will this be the default label?</param>
            <param name="description">Optional description to set</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermCollection">
            <summary>
            Collection of terms
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermCollection.AddAsync(System.String,System.String)">
            <summary>
            Adds a new term 
            </summary>
            <param name="name">Name of the term</param>
            <param name="description">Optional description of the term</param>
            <returns>Newly added term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermCollection.Add(System.String,System.String)">
            <summary>
            Adds a new term
            </summary>
            <param name="name">Name of the term</param>
            <param name="description">Optional description of the term</param>
            <returns>Newly added term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,System.String)">
            <summary>
            Adds a new term
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Name of the term</param>
            <param name="description">Optional description of the term</param>
            <returns>Newly added term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermCollection.AddBatch(PnP.Core.Services.Batch,System.String,System.String)">
            <summary>
            Adds a new term
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Name of the term</param>
            <param name="description">Optional description of the term</param>
            <returns>Newly added term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermCollection.AddBatchAsync(System.String,System.String)">
            <summary>
            Adds a new term 
            </summary>
            <param name="name">Name of the term</param>
            <param name="description">Optional description of the term</param>
            <returns>Newly added term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermCollection.AddBatch(System.String,System.String)">
            <summary>
            Adds a new term 
            </summary>
            <param name="name">Name of the term</param>
            <param name="description">Optional description of the term</param>
            <returns>Newly added term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermCollection.GetByIdAsync(System.String)">
            <summary>
            Loads a term by id
            </summary>
            <param name="id">Id of the term to load</param>
            <returns>Found term if any, null otherwise</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermCollection.GetById(System.String)">
            <summary>
            Loads a term by id
            </summary>
            <param name="id">Id of the term to load</param>
            <returns>Found term if any, null otherwise</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermGroup">
            <summary>
            Microsoft 365 Term group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermGroup.Id">
            <summary>
            The Unique ID of the Group.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermGroup.Name">
            <summary>
            Name of the group.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermGroup.Description">
            <summary>
            Description giving details on the group.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermGroup.CreatedDateTime">
            <summary>
            Date and time of group creation. Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermGroup.Scope">
            <summary>
            Returns type of group. Possible values are 'global', 'system' and 'siteCollection'.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermGroup.Sets">
            <summary>
            Collection of term sets in this term group
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermGroupCollection">
            <summary>
            Collection of term groups
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermGroupCollection.AddAsync(System.String,System.String,PnP.Core.Model.SharePoint.TermGroupScope)">
            <summary>
            Adds a new term group
            </summary>
            <param name="name">Display name of the group</param>
            <param name="description">Optional description of the group</param>
            <param name="scope">Optional scope of the group</param>
            <returns>Newly added group</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermGroupCollection.Add(System.String,System.String,PnP.Core.Model.SharePoint.TermGroupScope)">
            <summary>
            Adds a new term group
            </summary>
            <param name="name">Display name of the group</param>
            <param name="description">Optional description of the group</param>
            <param name="scope">Optional scope of the group</param>
            <returns>Newly added group</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermGroupCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,System.String,PnP.Core.Model.SharePoint.TermGroupScope)">
            <summary>
            Adds a new term group
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the group</param>
            <param name="description">Optional description of the group</param>
            <param name="scope">Optional scope of the group</param>
            <returns>Newly added group</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermGroupCollection.AddBatch(PnP.Core.Services.Batch,System.String,System.String,PnP.Core.Model.SharePoint.TermGroupScope)">
            <summary>
            Adds a new term group
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the group</param>
            <param name="description">Optional description of the group</param>
            <param name="scope">Optional scope of the group</param>
            <returns>Newly added group</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermGroupCollection.AddBatchAsync(System.String,System.String,PnP.Core.Model.SharePoint.TermGroupScope)">
            <summary>
            Adds a new term group
            </summary>
            <param name="name">Display name of the group</param>
            <param name="description">Optional description of the group</param>
            <param name="scope">Optional scope of the group</param>
            <returns>Newly added group</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermGroupCollection.AddBatch(System.String,System.String,PnP.Core.Model.SharePoint.TermGroupScope)">
            <summary>
            Adds a new term group
            </summary>
            <param name="name">Display name of the group</param>
            <param name="description">Optional description of the group</param>
            <param name="scope">Optional scope of the group</param>
            <returns>Newly added group</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermGroupCollection.GetById(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermGroup,System.Object}}[])">
            <summary>
            Method to select a term group by id
            </summary>
            <param name="id">The id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting term group instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermGroupCollection.GetByIdAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermGroup,System.Object}}[])">
            <summary>
            Method to select a term group by id
            </summary>
            <param name="id">The id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting term group instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermGroupCollection.GetByName(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermGroup,System.Object}}[])">
            <summary>
            Method to select a term group by name
            </summary>
            <param name="name">The name to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting term group instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermGroupCollection.GetByNameAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermGroup,System.Object}}[])">
            <summary>
            Method to select a term group by name
            </summary>
            <param name="name">The name to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting term group instance, if any</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermLocalizedDescription">
            <summary>
            Represents the localized name used in the term store, which identifies the name in the localized language.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermLocalizedDescription.LanguageTag">
            <summary>
            The language for the label.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermLocalizedDescription.Description">
            <summary>
            The description in the localized language.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermLocalizedDescriptionCollection">
            <summary>
            Collection of localized termset labels
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermLocalizedLabel">
            <summary>
            Represents the localized label used in the term store, which identifies the name in the localized language.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermLocalizedLabel.IsDefault">
            <summary>
            Indicates whether the label is the default label.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermLocalizedLabel.LanguageTag">
            <summary>
            The language for the label.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermLocalizedLabel.Name">
            <summary>
            The name in the localized language.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermLocalizedLabelCollection">
            <summary>
            Collection of localized termset labels
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermProperty">
            <summary>
            Key/Value term property
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermProperty.KeyField">
            <summary>
            Property key
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermProperty.Value">
            <summary>
            Property value
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermPropertyCollection">
            <summary>
            Collection of localized termset labels
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermRelation">
             <summary>
             Represents the relationship between terms in a term store.Currently two types of relationships are supported: pin and reuse.
            
             In a pin relationship, a term can be pinned under a different term in a different term set.In a pinned relationship, new children to the term can only be added in the term set in which the term was created.Any change in the hierarchy under the term is reflected across the sets in which the term was pinned.
            
             The reuse relationship is similar to the pinned relationship except that changes to the reused term can be made from any hierarchy in which the term is reused.Also, a change in hierarchy made to the reused term does not get reflected in the other term sets in which the term is reused.
             </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermRelation.Id">
            <summary>
            The Unique ID of the term relation.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermRelation.Relationship">
            <summary>
            The type of relation. Possible values are: pin, reuse.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermRelation.Set">
            <summary>
            The set in which the relation is relevant.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermRelation.FromTerm">
            <summary>
            The from term of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermRelation.ToTerm">
            <summary>
            The to term of the relation. The term to which the realtionship is defined.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermRelationCollection">
            <summary>
            Collection of terms
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermRelationCollection.AddAsync(PnP.Core.Model.SharePoint.TermRelationType,PnP.Core.Model.SharePoint.ITermSet,PnP.Core.Model.SharePoint.ITerm)">
            <summary>
            Adds a new term relation
            </summary>
            <param name="relationship">Type of relation to be created. Possible values are: pin, reuse.</param>
            <param name="targetSet">The set where the relationship needs to be created.</param>
            <param name="fromTerm">The term with which the relationship needs to be created.</param>
            <returns>Newly added term relation ship</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermRelationCollection.Add(PnP.Core.Model.SharePoint.TermRelationType,PnP.Core.Model.SharePoint.ITermSet,PnP.Core.Model.SharePoint.ITerm)">
            <summary>
            Adds a new term relation
            </summary>
            <param name="relationship">Type of relation to be created. Possible values are: pin, reuse.</param>
            <param name="targetSet">The set where the relationship needs to be created.</param>
            <param name="fromTerm">The term with which the relationship needs to be created.</param>
            <returns>Newly added term relation ship</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermRelationCollection.AddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.TermRelationType,PnP.Core.Model.SharePoint.ITermSet,PnP.Core.Model.SharePoint.ITerm)">
            <summary>
            Adds a new term relation via a batch request
            </summary>
            <param name="batch">Batch to use</param>
            <param name="relationship">Type of relation to be created. Possible values are: pin, reuse.</param>
            <param name="targetSet">The set where the relationship needs to be created.</param>
            <param name="fromTerm">The term with which the relationship needs to be created.</param>
            <returns>Newly added term relation ship</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermRelationCollection.AddBatch(PnP.Core.Services.Batch,PnP.Core.Model.SharePoint.TermRelationType,PnP.Core.Model.SharePoint.ITermSet,PnP.Core.Model.SharePoint.ITerm)">
            <summary>
            Adds a new term relation via a batch request
            </summary>
            <param name="batch">Batch to use</param>
            <param name="relationship">Type of relation to be created. Possible values are: pin, reuse.</param>
            <param name="targetSet">The set where the relationship needs to be created.</param>
            <param name="fromTerm">The term with which the relationship needs to be created.</param>
            <returns>Newly added term relation ship</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermRelationCollection.AddBatchAsync(PnP.Core.Model.SharePoint.TermRelationType,PnP.Core.Model.SharePoint.ITermSet,PnP.Core.Model.SharePoint.ITerm)">
            <summary>
            Adds a new term relation via a batch request
            </summary>
            <param name="relationship">Type of relation to be created. Possible values are: pin, reuse.</param>
            <param name="targetSet">The set where the relationship needs to be created.</param>
            <param name="fromTerm">The term with which the relationship needs to be created.</param>
            <returns>Newly added term relation ship</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermRelationCollection.AddBatch(PnP.Core.Model.SharePoint.TermRelationType,PnP.Core.Model.SharePoint.ITermSet,PnP.Core.Model.SharePoint.ITerm)">
            <summary>
            Adds a new term relation via a batch request
            </summary>
            <param name="relationship">Type of relation to be created. Possible values are: pin, reuse.</param>
            <param name="targetSet">The set where the relationship needs to be created.</param>
            <param name="fromTerm">The term with which the relationship needs to be created.</param>
            <returns>Newly added term relation ship</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermSet">
            <summary>
            Represents the set used in a term store. The set represents a unit which contains a collection of hierarchical terms. A group can contain multiple sets.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSet.Id">
            <summary>
            The Unique ID of the term set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSet.LocalizedNames">
            <summary>
            Name of the term set for each language.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSet.Description">
            <summary>
            Description giving details on the term set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSet.CreatedDateTime">
            <summary>
            Date and time of term set creation. Read-only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSet.Terms">
            <summary>
            Collection of term in this term set
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSet.Group">
            <summary>
            The parent group for this termset
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSet.Properties">
            <summary>
            Properties on this term set
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSet.Relations">
            <summary>
            Collection of terms relations
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermSet.AddPropertyAsync(System.String,System.String)">
            <summary>
            Adds a property to the term set's property collection. Call update to persist this change.
            </summary>
            <param name="key">Property key</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermSet.AddProperty(System.String,System.String)">
            <summary>
            Adds a property to the term set's property collection. Call update to persist this change.
            </summary>
            <param name="key">Property key</param>
            <param name="value">Property value</param>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermSetCollection">
            <summary>
            Collection of term sets
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermSetCollection.AddAsync(System.String,System.String)">
            <summary>
            Adds a new term set
            </summary>
            <param name="name">Name of the term set</param>
            <param name="description">Optional description of the term set</param>
            <returns>Newly added term set</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermSetCollection.Add(System.String,System.String)">
            <summary>
            Adds a new term set
            </summary>
            <param name="name">Name of the term set</param>
            <param name="description">Optional description of the term set</param>
            <returns>Newly added term set</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermSetCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,System.String)">
            <summary>
            Adds a new term set
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Name of the term set</param>
            <param name="description">Optional description of the term set</param>
            <returns>Newly added term set</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermSetCollection.AddBatch(PnP.Core.Services.Batch,System.String,System.String)">
            <summary>
            Adds a new term set
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Name of the term set</param>
            <param name="description">Optional description of the term set</param>
            <returns>Newly added term set</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermSetCollection.AddBatchAsync(System.String,System.String)">
            <summary>
            Adds a new term set
            </summary>
            <param name="name">Name of the term set</param>
            <param name="description">Optional description of the term set</param>
            <returns>Newly added term set</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermSetCollection.AddBatch(System.String,System.String)">
            <summary>
            Adds a new term set
            </summary>
            <param name="name">Name of the term set</param>
            <param name="description">Optional description of the term set</param>
            <returns>Newly added term set</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermSetCollection.GetById(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermSet,System.Object}}[])">
            <summary>
            Extension method to select a term set by id
            </summary>
            <param name="id">The id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting term set instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermSetCollection.GetByIdAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermSet,System.Object}}[])">
            <summary>
            Extension method to select a term set by id
            </summary>
            <param name="id">The id to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting term set instance, if any</returns>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermSetLocalizedName">
            <summary>
            Represents the localized name used in the term store, which identifies the name in the localized language.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSetLocalizedName.LanguageTag">
            <summary>
            The language for the label.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSetLocalizedName.Name">
            <summary>
            The name in the localized language.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermSetLocalizedNameCollection">
            <summary>
            Collection of localized termset labels
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermSetProperty">
            <summary>
            Key/Value term set property
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSetProperty.KeyField">
            <summary>
            Property key
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermSetProperty.Value">
            <summary>
            Property value
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermSetPropertyCollection">
            <summary>
            Collection of localized termset labels
            </summary>
        </member>
        <member name="T:PnP.Core.Model.SharePoint.ITermStore">
            <summary>
            Microsoft 365 Term store
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermStore.Id">
            <summary>
            The Unique ID of the Term Store
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermStore.DefaultLanguage">
            <summary>
            Default language of the termstore.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermStore.Languages">
            <summary>
            List of languages for the term store.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.SharePoint.ITermStore.Groups">
            <summary>
            Collection of term groups in this term store
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermSetByIdAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermSet,System.Object}}[])">
            <summary>
            Gets a termset from this termstore via it's id
            </summary>
            <param name="id">Termset id to retrieve</param>
            <param name="selectors">Properties to load for the termset</param>
            <returns>The loaded termset</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermSetById(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermSet,System.Object}}[])">
            <summary>
            Gets a termset from this termstore via it's id
            </summary>
            <param name="id">Termset id to retrieve</param>
            <param name="selectors">Properties to load for the termset</param>
            <returns>The loaded termset</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermSetByIdBatchAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermSet,System.Object}}[])">
            <summary>
            Gets a termset from this termstore via it's id
            </summary>
            <param name="id">Termset id to retrieve</param>
            <param name="selectors">Properties to load for the termset</param>
            <returns>The loaded termset</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermSetByIdBatch(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermSet,System.Object}}[])">
            <summary>
            Gets a termset from this termstore via it's id
            </summary>
            <param name="id">Termset id to retrieve</param>
            <param name="selectors">Properties to load for the termset</param>
            <returns>The loaded termset</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermSetByIdBatchAsync(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermSet,System.Object}}[])">
            <summary>
            Gets a termset from this termstore via it's id
            </summary>
            <param name="batch">Batch to add this reques to</param>
            <param name="id">Termset id to retrieve</param>
            <param name="selectors">Properties to load for the termset</param>
            <returns>The loaded termset</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermSetByIdBatch(PnP.Core.Services.Batch,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITermSet,System.Object}}[])">
            <summary>
            Gets a termset from this termstore via it's id
            </summary>
            <param name="batch">Batch to add this reques to</param>
            <param name="id">Termset id to retrieve</param>
            <param name="selectors">Properties to load for the termset</param>
            <returns>The loaded termset</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermByIdAsync(System.String,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITerm,System.Object}}[])">
            <summary>
            Gets a term from this termstore via it's id and it's termset id
            </summary>
            <param name="termSetId">Termset id of the termset containing the term</param>
            <param name="termId">Term id of the term to retrieve</param>
            <param name="selectors">Properties to load for the term</param>
            <returns>The loaded term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermById(System.String,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITerm,System.Object}}[])">
            <summary>
            Gets a term from this termstore via it's id and it's termset id
            </summary>
            <param name="termSetId">Termset id of the termset containing the term</param>
            <param name="termId">Term id of the term to retrieve</param>
            <param name="selectors">Properties to load for the term</param>
            <returns>The loaded term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermByIdBatchAsync(System.String,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITerm,System.Object}}[])">
            <summary>
            Gets a term from this termstore via it's id and it's termset id
            </summary>
            <param name="termSetId">Termset id of the termset containing the term</param>
            <param name="termId">Term id of the term to retrieve</param>
            <param name="selectors">Properties to load for the term</param>
            <returns>The loaded term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermByIdBatch(System.String,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITerm,System.Object}}[])">
            <summary>
            Gets a term from this termstore via it's id and it's termset id
            </summary>
            <param name="termSetId">Termset id of the termset containing the term</param>
            <param name="termId">Term id of the term to retrieve</param>
            <param name="selectors">Properties to load for the term</param>
            <returns>The loaded term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermByIdBatchAsync(PnP.Core.Services.Batch,System.String,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITerm,System.Object}}[])">
            <summary>
            Gets a term from this termstore via it's id and it's termset id
            </summary>
            <param name="batch">Batch to add this reques to</param>
            <param name="termSetId">Termset id of the termset containing the term</param>
            <param name="termId">Term id of the term to retrieve</param>
            <param name="selectors">Properties to load for the term</param>
            <returns>The loaded term</returns>
        </member>
        <member name="M:PnP.Core.Model.SharePoint.ITermStore.GetTermByIdBatch(PnP.Core.Services.Batch,System.String,System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.ITerm,System.Object}}[])">
            <summary>
            Gets a term from this termstore via it's id and it's termset id
            </summary>
            <param name="batch">Batch to add this reques to</param>
            <param name="termSetId">Termset id of the termset containing the term</param>
            <param name="termId">Term id of the term to retrieve</param>
            <param name="selectors">Properties to load for the term</param>
            <returns>The loaded term</returns>
        </member>
        <member name="T:PnP.Core.Model.FollowDocumentData">
            <summary>
            A follow document request metadata object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.FollowDocumentData.ContentUri">
            <summary>
            The unique url for the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.FollowDocumentData.ActorType">
            <summary>
            Represents an actor type. Can be either a user, site, document or tag
            </summary>
        </member>
        <member name="T:PnP.Core.Model.FollowPersonData">
            <summary>
            A follow person request metadata object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.FollowPersonData.AccountName">
            <summary>
            The account name in a form of "i:0#.f|membership|admin@m365x790252.onmicrosoft.com".
            </summary>
        </member>
        <member name="P:PnP.Core.Model.FollowPersonData.ActorType">
            <summary>
            Represents an actor type. Can be either a user, site, document or tag
            </summary>
        </member>
        <member name="T:PnP.Core.Model.FollowSiteData">
            <summary>
            A follow site request metadata object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.FollowSiteData.ContentUri">
            <summary>
            The unique url for the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.FollowSiteData.ActorType">
            <summary>
            Represents an actor type. Can be either a user, site, document or tag
            </summary>
        </member>
        <member name="T:PnP.Core.Model.FollowTagData">
            <summary>
            A follow tag request metadata object
            </summary>
        </member>
        <member name="P:PnP.Core.Model.FollowTagData.TagGuid">
            <summary>
            The unique Id for the tag.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.FollowTagData.ActorType">
            <summary>
            Represents an actor type. Can be either a user, site, document or tag
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.GraphEventHelper">
            <summary>
            This class contains helpers for creating new graph events and setting properties
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.GraphEventHelper.CheckCreateOptions(PnP.Core.Model.Teams.EventCreateOptions)">
            <summary>
             Checks for the create options
            </summary>
            <param name="options">Options for the new event</param>
            <exception cref="T:System.ArgumentNullException">Triggers when argument is null</exception>
            <exception cref="T:System.ArgumentException">Triggers when option has wrong value</exception>
        </member>
        <member name="M:PnP.Core.Model.Teams.GraphEventHelper.GetEnumMemberValue(PnP.Core.Model.Teams.EventTimeZone)">
            <summary>
            Gets the enum member value for a timezone
            </summary>
            <param name="value">timezone to retrieve</param>
            <returns>enum member value</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelCollection.AddAsync(System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelCollection.Add(System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelCollection.AddBatch(PnP.Core.Services.Batch,System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelCollection.AddBatchAsync(System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelCollection.AddBatch(System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelCollection.GetByDisplayName(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.Teams.ITeamChannel,System.Object}}[])">
            <summary>
            Get channel by display name
            </summary>
            <param name="displayName"></param>
            <param name="selectors"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelCollection.GetByDisplayNameAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.Teams.ITeamChannel,System.Object}}[])">
            <summary>
            Asynchronously Get channel by display name
            </summary>
            <param name="displayName"></param>
            <param name="selectors"></param>
            <returns></returns>
            <remarks>This does not work due with a $top=1 limitation in the graph when calling tests</remarks>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWikiTabAsync(System.String)">
            <summary>
            Adds a new channel tab
            </summary>
            <param name="name">Display name of the channel tab</param>
            <returns>Newly added channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWikiTab(System.String)">
            <summary>
            Adds a new channel tab
            </summary>
            <param name="name">Display name of the channel tab</param>
            <returns>Newly added channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWikiTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the channel tab</param>
            <returns>Newly added channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWikiTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the channel tab</param>
            <returns>Newly added channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWikiTabBatchAsync(System.String)">
            <summary>
            Adds a new channel tab
            </summary>
            <param name="name">Display name of the channel tab</param>
            <returns>Newly added channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWikiTabBatch(System.String)">
            <summary>
            Adds a new channel tab
            </summary>
            <param name="name">Display name of the channel tab</param>
            <returns>Newly added channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWebsiteTabAsync(System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to the website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWebsiteTab(System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to the website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWebsiteTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWebsiteTabBatch(PnP.Core.Services.Batch,System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to the website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWebsiteTabBatchAsync(System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to the Website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWebsiteTabBatch(System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to the Website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddDocumentLibraryTabAsync(System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary tab
            </summary>
            <param name="name">Display name of the  DocumentLibrary tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddDocumentLibraryTab(System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary tab
            </summary>
            <param name="name">Display name of the  DocumentLibrary tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddDocumentLibraryTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the DocumentLibrary tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddDocumentLibraryTabBatch(PnP.Core.Services.Batch,System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the DocumentLibrary tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddDocumentLibraryTabBatchAsync(System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary tab
            </summary>
            <param name="name">Display name of the DocumentLibrary tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddDocumentLibraryTabBatch(System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary tab
            </summary>
            <param name="name">Display name of the DocumentLibrary tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWordTabAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="fileUri">Uri to the file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWordTab(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="fileUri">Uri to the website that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWordTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Website channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWordTabBatch(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Website channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param> 
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWordTabBatchAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param>        
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddWordTabBatch(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="fileUri">Uri to the Word file that needs to be added as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddExcelTabAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to the file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddExcelTab(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to the website that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddExcelTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddExcelTabBatch(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param> 
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddExcelTabBatchAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param>        
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddExcelTabBatch(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to the Word file that needs to be added as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPdfTabAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="name">Display name of the Pdf channel tab</param>
            <param name="fileUri">Uri to the file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPdfTab(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="name">Display name of the Pdf channel tab</param>
            <param name="fileUri">Uri to the website that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPdfTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Pdf channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPdfTabBatch(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Pdf channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param> 
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPdfTabBatchAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="name">Display name of the Pdf channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param>        
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPdfTabBatch(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="name">Display name of the Pdf channel tab</param>
            <param name="fileUri">Uri to the Word file that needs to be added as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPptTabAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to the file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPptTab(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to the Ppt that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPptTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to Ppt file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPptTabBatch(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to Ppt file that needs to be displayed as tab</param> 
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPptTabBatchAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to Ppt file that needs to be displayed as tab</param>        
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPptTabBatch(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to the Ppt file that needs to be added as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPlannerTabAsync(System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPlannerTab(System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPlannerTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPlannerTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPlannerTabBatchAsync(System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPlannerTabBatch(System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddStreamsTabAsync(System.String)">
            <summary>
            Adds a new Streams channel tab
            </summary>
            <param name="name">Display name of the Streams channel tab</param>
            <returns>Newly added Streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddStreamsTab(System.String)">
            <summary>
            Adds a new Streams channel tab
            </summary>
            <param name="name">Display name of the Streams channel tab</param>
            <returns>Newly added Streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddStreamsTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new streams channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the streams channel tab</param>
            <returns>Newly added Streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddStreamsTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new streams channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the streams channel tab</param>
            <returns>Newly added Streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddStreamsTabBatchAsync(System.String)">
            <summary>
            Adds a new streams channel tab
            </summary>
            <param name="name">Display name of the streams channel tab</param>
            <returns>Newly added streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddStreamsTabBatch(System.String)">
            <summary>
            Adds a new Streams channel tab
            </summary>
            <param name="name">Display name of the Streams channel tab</param>
            <returns>Newly added Streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddFormsTabAsync(System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddFormsTab(System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddFormsTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddFormsTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddFormsTabBatchAsync(System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddFormsTabBatch(System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddOneNoteTabAsync(System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added OneNote channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddOneNoteTab(System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added OneNote channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddOneNoteTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added OneNote channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddOneNoteTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added OneNote channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddOneNoteTabBatchAsync(System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added planner OneNote tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddOneNoteTabBatch(System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added OneNote channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPowerBiTabAsync(System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPowerBiTab(System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPowerBiTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPowerBiTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPowerBiTabBatchAsync(System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddPowerBiTabBatch(System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddSharePointPageOrListTabAsync(System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddSharePointPageOrListTab(System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddSharePointPageOrListTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddSharePointPageOrListTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddSharePointPageOrListTabBatchAsync(System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.AddSharePointPageOrListTabBatch(System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelDocumentLibraryTab(System.String,System.Uri)">
            <summary>
            Creates a wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="displayName">Name of the tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelWebsiteTab(System.String,System.Uri)">
            <summary>
            Creates a website <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="displayName">Name of the tab</param>
            <param name="websiteUri">Uri to the document library that needs to be added as tab</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelWordTab(System.String,System.Uri,System.Guid)">
            <summary>
            Creates a word <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="name">Name of the tab</param>
            <param name="fileUri">Uri to the Word document that needs to be added as tab</param>
            <param name="fileId">Unique ID of the Word document</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelExcelTab(System.String,System.Uri,System.Guid)">
            <summary>
            Creates an Excel <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="name">Name of the tab</param>
            <param name="fileUri">Uri to the Excel document that needs to be added as tab</param>
            <param name="fileId">Unique ID of the Excel document</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelPptTab(System.String,System.Uri,System.Guid)">
            <summary>
            Creates a ppt <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="name">Name of the tab</param>
            <param name="fileUri">Uri to the Ppt document that needs to be added as tab</param>
            <param name="fileId">Unique ID of the Ppt document</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelPdfTab(System.String,System.Uri,System.Guid)">
            <summary>
            Creates a pdf <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="name">Name of the tab</param>
            <param name="fileUri">Uri to the Pdf document that needs to be added as tab</param>
            <param name="fileId">Unique ID of the Pdfdocument</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelWikiTab(System.String)">
            <summary>
            Creates a wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="displayName">Name of the tab</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelPlannerTab(System.String)">
            <summary>
            Creates a planner <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="displayName">Name of the tab</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelStreamsTab(System.String)">
            <summary>
            Creates a streams <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="displayName">Name of the tab</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelOneNoteTab(System.String)">
            <summary>
            Creates a OneNote <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="displayName">Name of the tab</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelFormsTab(System.String)">
            <summary>
            Creates a Forms <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="displayName">Name of the tab</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelPowerBiTab(System.String)">
            <summary>
            Creates a PowerBi <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="displayName">Name of the tab</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelSharePointPageOrListTab(System.String)">
            <summary>
            Creates a SharePoint Page or List <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/>
            </summary>
            <param name="displayName">Name of the tab</param>
            <returns>Wiki <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChannelTabCollection.CreateTeamChannelTab(System.String)">
            <summary>
            Base tab creation logic
            </summary>
            <param name="displayName">Name of the tab</param>
            <returns>Initial <see cref="T:PnP.Core.Model.Teams.TeamChannelTab"/> instance</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.AddAsync(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds new channel chat message with support for content types
            </summary>
            <param name="options">Full chat message options</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.AddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.AddAsync(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message 
            </summary>
            <param name="content"></param>
            <param name="contentType"></param>
            <param name="subject">Message Subject</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.Add(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.AddBatchAsync(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.AddBatch(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.AddBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.Add(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.AddBatch(PnP.Core.Services.Batch,PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.AddBatchAsync(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.TeamChatMessageCollection.AddBatch(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamChannelTabConstants">
            <summary>
            Team channel tab constants
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.TeamsAppId">
            <summary>
            Teams app
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.WebAppId">
            <summary>
            Generic Web app
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.DocumentLibraryAppId">
            <summary>
            SharePoint Document library
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.WordAppId">
            <summary>
            Microsoft Word
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.ExcelAppId">
            <summary>
            Microsoft Excel
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.PptAppId">
            <summary>
            PowerPoint
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.PdfAppId">
            <summary>
            Adobe PDF
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.WikiAppId">
            <summary>
            Teams Wiki
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.PlannerAppId">
            <summary>
            Microsoft Planner
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.StreamsAppId">
            <summary>
            Microsoft Streams
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.FormsAppId">
            <summary>
            Microsoft Forms
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.OneNoteAppId">
            <summary>
            Microsoft OneNote
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.PowerBiAppId">
            <summary>
            Microsoft Power BI
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.SharePointPageOrListAppId">
            <summary>
            SharePoint page or list
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelTabConstants.WhiteBoardAppId">
            <summary>
            Teams whiteboard
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ChatMessageContentType">
            <summary>
            Chat message content types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageContentType.Text">
            <summary>
            Chat message uses text only
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageContentType.Html">
            <summary>
            Chat message uses html
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageContentType.AdaptiveCard">
            <summary>
            Chat message to use adaptive card
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ChatMessageImportance">
            <summary>
            The importance of the chat message.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageImportance.Normal">
            <summary>
            Normal importance
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageImportance.High">
            <summary>
            High importance
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageImportance.Urgent">
            <summary>
            Urgent importance
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ChatMessageReactionType">
            <summary>
            Types of reactions to a chat message
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageReactionType.Like">
            <summary>
            Like reaction
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageReactionType.Angry">
            <summary>
            Angry reaction
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageReactionType.Sad">
            <summary>
            Sad reaction
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageReactionType.Laugh">
            <summary>
            Laugh reaction
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageReactionType.Heart">
            <summary>
            Heart reaction
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageReactionType.Surprised">
            <summary>
            Surprised reaction
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ChatMessageType">
            <summary>
            Types of chat messages
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageType.Message">
            <summary>
            Message type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageType.SystemEventMessage">
            <summary>
            SystemEventMessage type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.ChatMessageType.UnknownFutureValue">
            <summary>
            unknownFutureValue type
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventAttendeeType">
            <summary>
            The type of attendee
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventAttendeeType.Required">
            <summary>
            Required
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventAttendeeType.Optional">
            <summary>
            Optional
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventAttendeeType.Resource">
            <summary>
            Resource
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventBodyType">
            <summary>
            Event body type of content
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventBodyType.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventBodyType.Html">
            <summary>
            Html
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventImportance">
            <summary>
            Event Importance Types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventImportance.Low">
            <summary>
            Low importance
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventImportance.Normal">
            <summary>
            Normal importance
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventImportance.High">
            <summary>
            High importance
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventLocationType">
            <summary>
            Event location Types
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventLocationType.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventLocationType.ConferenceRoom">
            <summary>
            Conference Room
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventLocationType.HomeAddress">
            <summary>
            Home Address
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventLocationType.BusinessAddress">
            <summary>
            Business Address
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventLocationType.GeoCoordinates">
            <summary>
            Geo Coordinates
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventLocationType.StreetAddress">
            <summary>
            Strees Address
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventLocationType.Hotel">
            <summary>
            Hotel
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventLocationType.PostalAddress">
            <summary>
            Postal Address
            </summary>,
        </member>
        <member name="F:PnP.Core.Model.Teams.EventLocationType.LocalBusiness">
            <summary>
            Local Business
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventLocationType.Restaurant">
            <summary>
            Restaurant
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventOnlineMeetingProvider">
            <summary>
            Meeting providers for an online meeting
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventOnlineMeetingProvider.Unknown">
            <summary>
            Default value, no online meeting
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventOnlineMeetingProvider.TeamsForBusiness">
            <summary>
            Teams for business meeting
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventOnlineMeetingProvider.SkypeForBusiness">
            <summary>
            Skype for business meeting
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventOnlineMeetingProvider.SkypeForConsumer">
            <summary>
            Skype for consumer meeting
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventPhoneType">
            <summary>
            Type of phone
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventPhoneType.Home">
            <summary>
            Home
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventPhoneType.Business">
            <summary>
            Business
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventPhoneType.Mobile">
            <summary>
            Mobile
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventPhoneType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventPhoneType.Assistant">
            <summary>
            Assistant
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventPhoneType.HomeFax">
            <summary>
            HomeFax
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventPhoneType.BusinessFax">
            <summary>
            BusinessFax
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventPhoneType.OtherFax">
            <summary>
            OtherFax
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventPhoneType.Pager">
            <summary>
            Pager
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventPhoneType.Radio">
            <summary>
            Radio
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventRecurrenceRangeType">
            <summary>
            The recurrence range.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventRecurrenceRangeType.EndDate">
            <summary>
            End date
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventRecurrenceRangeType.NoEnd">
            <summary>
            No end
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventRecurrenceRangeType.Numbered">
            <summary>
            Numbered
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventRecurrenceType">
            <summary>
            Recurrence type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventRecurrenceType.Daily">
            <summary>
            Event repeats based on the number of days specified by interval between occurrences.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventRecurrenceType.Weekly">
            <summary>
            Event repeats on the same day or days of the week, based on the number of weeks between each set of occurrences.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventRecurrenceType.AbsoluteMonthly">
            <summary>
            Event repeats on the specified day of the month (e.g. the 15th), based on the number of months between occurrences.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventRecurrenceType.RelativeMonthly">
            <summary>
            Event repeats on the specified day or days of the week, in the same relative position in the month, based on the number of months between occurrences.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventRecurrenceType.AbsoluteYearly">
            <summary>
            Event repeats on the specified day and month, based on the number of years between occurrences.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventRecurrenceType.RelativeYearly">
            <summary>
            Event repeats on the specified day or days of the week, in the same relative position in a specific month of the year, based on the number of years between occurrences.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventResponse">
            <summary>
            Response of an event invite
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventResponse.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventResponse.Organizer">
            <summary>
            Organizer
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventResponse.TentativelyAccepted">
            <summary>
            Tentatively Accepted
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventResponse.Accepted">
            <summary>
            Accepted
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventResponse.Declined">
            <summary>
            Declined
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventResponse.NotResponded">
            <summary>
            No response given
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventSensitivity">
            <summary>
            Sensitivty of the event
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventSensitivity.Normal">
            <summary>
            Normal sensitivity
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventSensitivity.Personal">
            <summary>
            Personal sensitivity
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventSensitivity.Private">
            <summary>
            Private sensitivity
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventSensitivity.Confidential">
            <summary>
            Confidential sensitivity
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventShowAs">
            <summary>
            Defines the status of the event in the calendar
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventShowAs.Free">
            <summary>
            Free
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventShowAs.Tentative">
            <summary>
            Teams for business meeting
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventShowAs.Busy">
            <summary>
            Busy
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventShowAs.Oof">
            <summary>
            Oof
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventShowAs.WorkingElsewhere">
            <summary>
            Working elsewhere
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventShowAs.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventTimeZone">
            <summary>
            Event time zones
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.ETCGMTPlus12">
            <summary>
            Etc/GMT+12
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.ETCGMTPlus11">
            <summary>
            Etc/GMT+11
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificHonolulu">
            <summary>
            Pacific/Honolulu
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaAnchorage">
            <summary>
            America/Anchorage
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaSanta_Isabel">
            <summary>
            America/Santa_Isabel
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaLos_Angeles">
            <summary>
            America/Los_Angeles
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaPhoenix">
            <summary>
            America/Phoenix,
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaChihuahua">
            <summary>
             America/Chihuahua
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaDenver">
            <summary>
             America/Denver
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaGuatemala">
            <summary>
             America/Guatemala
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaChicago">
            <summary>
             America/Chicago
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaMexico_City">
            <summary>
             America/Mexico_City
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaRegina">
            <summary>
             America/Regina
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaBogota">
            <summary>
             America/Bogota
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaNew_York">
            <summary>
             America/New_York
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaIndianaIndianapolis">
            <summary>
             America/Indiana/Indianapolis
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaCaracas">
            <summary>
             America/Caracas
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaAsuncion">
            <summary>
             America/Asuncion
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaHalifax">
            <summary>
             America/Halifax
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaCuiaba">
            <summary>
             America/Cuiaba
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaLa_Paz">
            <summary>
             America/La_Paz
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaSantiago">
            <summary>
             America/Santiago
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaSt_Johns">
            <summary>
             America/St_Johns
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaSao_Paulo">
            <summary>
             America/Sao_Paulo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaArgentinaBuenos_Aires">
            <summary>
             America/Argentina/Buenos_Aires
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaCayenne">
            <summary>
             America/Cayenne
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaGodthab">
            <summary>
             America/Godthab
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaMontevideo">
            <summary>
             America/Montevideo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AmericaBahia">
            <summary>
             America/Bahia
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EtcGMT2">
            <summary>
             Etc/GMT+2
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AtlanticAzores">
            <summary>
             Atlantic/Azores
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AtlanticCape_Verde">
            <summary>
             Atlantic/Cape_Verde
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AfricaCasablanca">
            <summary>
             Africa/Casablanca
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EtcGMT">
            <summary>
             Etc/GMT
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EuropeLondon">
            <summary>
             Europe/London
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AtlanticReykjavik">
            <summary>
             Atlantic/Reykjavik
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EuropeBerlin">
            <summary>
             Europe/Berlin
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EuropeBudapest">
            <summary>
             Europe/Budapest
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EuropeParis">
            <summary>
             Europe/Paris
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EuropeWarsaw">
            <summary>
             Europe/Warsaw
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AfricaLagos">
            <summary>
             Africa/Lagos
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AfricaWindhoek">
            <summary>
             Africa/Windhoek
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EuropeBucharest">
            <summary>
             Europe/Bucharest
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaBeirut">
            <summary>
             Asia/Beirut
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AfricaCairo">
            <summary>
             Africa/Cairo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaDamascus">
            <summary>
             Asia/Damascus
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AfricaJohannesburg">
            <summary>
             Africa/Johannesburg
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EuropeKyivKiev">
            <summary>
             Europe/Kyiv (Kiev)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EuropeIstanbul">
            <summary>
             Europe/Istanbul
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaJerusalem">
            <summary>
             Asia/Jerusalem
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaAmman">
            <summary>
             Asia/Amman
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaBaghdad">
            <summary>
             Asia/Baghdad
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EuropeKaliningrad">
            <summary>
             Europe/Kaliningrad
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaRiyadh">
            <summary>
             Asia/Riyadh
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AfricaNairobi">
            <summary>
             Africa/Nairobi
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaTehran">
            <summary>
             Asia/Tehran
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaDubai">
            <summary>
             Asia/Dubai
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaBaku">
            <summary>
             Asia/Baku
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EuropeMoscow">
            <summary>
             Europe/Moscow
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.IndianMauritius">
            <summary>
             Indian/Mauritius
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaTbilisi">
            <summary>
             Asia/Tbilisi
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaYerevan">
            <summary>
             Asia/Yerevan
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaKabul">
            <summary>
             Asia/Kabul
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaKarachi">
            <summary>
             Asia/Karachi
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaToshkentTashkent">
            <summary>
             Asia/Toshkent (Tashkent)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaKolkata">
            <summary>
             Asia/Kolkata
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaColombo">
            <summary>
             Asia/Colombo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaKathmandu">
            <summary>
             Asia/Kathmandu
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaAstanaAlmaty">
            <summary>
             Asia/Astana (Almaty)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaDhaka">
            <summary>
             Asia/Dhaka
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaYekaterinburg">
            <summary>
             Asia/Yekaterinburg
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaYangonRangoon">
            <summary>
             Asia/Yangon (Rangoon)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaBangkok">
            <summary>
             Asia/Bangkok
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaNovosibirsk">
            <summary>
             Asia/Novosibirsk
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaShanghai">
            <summary>
             Asia/Shanghai
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaKrasnoyarsk">
            <summary>
             Asia/Krasnoyarsk
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaSingapore">
            <summary>
             Asia/Singapore
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AustraliaPerth">
            <summary>
             Australia/Perth
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaTaipei">
            <summary>
             Asia/Taipei
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaUlaanbaatar">
            <summary>
             Asia/Ulaanbaatar
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaIrkutsk">
            <summary>
             Asia/Irkutsk
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaTokyo">
            <summary>
             Asia/Tokyo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaSeoul">
            <summary>
             Asia/Seoul
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AustraliaAdelaide">
            <summary>
             Australia/Adelaide
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AustraliaDarwin">
            <summary>
             Australia/Darwin
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AustraliaBrisbane">
            <summary>
             Australia/Brisbane
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AustraliaSydney">
            <summary>
             Australia/Sydney
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificPort_Moresby">
            <summary>
             Pacific/Port_Moresby
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AustraliaHobart">
            <summary>
             Australia/Hobart
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaYakutsk">
            <summary>
             Asia/Yakutsk
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificGuadalcanal">
            <summary>
             Pacific/Guadalcanal
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaVladivostok">
            <summary>
             Asia/Vladivostok
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificAuckland">
            <summary>
             Pacific/Auckland
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EtcGMT12">
            <summary>
             Etc/GMT-12
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificFiji">
            <summary>
             Pacific/Fiji
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AsiaMagadan">
            <summary>
             Asia/Magadan
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificTongatapu">
            <summary>
             Pacific/Tongatapu
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificApia">
            <summary>
             Pacific/Apia
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificKiritimati">
            <summary>
             Pacific/Kiritimati
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.DatelineStandardTime">
            <summary>
            Dateline Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC11">
            <summary>
            UTC-11
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AleutianStandardTime">
            <summary>
            Aleutian Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.HawaiianStandardTime">
            <summary>
            Hawaiian Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.MarquesasStandardTime">
            <summary>
            Marquesas Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AlaskanStandardTime">
            <summary>
            Alaskan Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC09">
            <summary>
            UTC-09
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificStandardTimeMexico">
            <summary>
            Pacific Standard Time (Mexico)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC08">
            <summary>
            UTC-08
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificStandardTime">
            <summary>
            Pacific Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.USMountainStandardTime">
            <summary>
            US Mountain Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.LaPaz">
            <summary>
             La Paz
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.MountainStandardTimeMexico">
            <summary>
            Mountain Standard Time (Mexico)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.MountainStandardTime">
            <summary>
            Mountain Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.YukonStandardTime">
            <summary>
            Yukon Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.CentralAmericaStandardTime">
            <summary>
            Central America Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.CentralStandardTime">
            <summary>
            Central Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EasterIslandStandardTime">
            <summary>
            Easter Island Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.MexicoCity">
            <summary>
             Mexico City
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.CentralStandardTimeMexico">
            <summary>
            Central Standard Time (Mexico)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.CanadaCentralStandardTime">
            <summary>
            Canada Central Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Lima">
            <summary>
             Lima
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.RioBranco">
            <summary>
             Rio Branco
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0500Chetumal">
            <summary>
            (UTC-05:00) Chetumal
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0500EasternTimeUSCanada">
            <summary>
            (UTC-05:00) Eastern Time (US + Canada)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0500Haiti">
            <summary>
            (UTC-05:00) Haiti
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0500Havana">
            <summary>
            (UTC-05:00) Havana
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0500IndianaEast">
            <summary>
            (UTC-05:00) Indiana (East)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0500TurksandCaicos">
            <summary>
            (UTC-05:00) Turks and Caicos
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0400Asuncion">
            <summary>
            (UTC-04:00) Asuncion
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0400AtlanticTimeCanada">
            <summary>
            (UTC-04:00) Atlantic Time (Canada)
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0400Caracas">
            <summary>
            (UTC-04:00) Caracas
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0400Cuiaba">
            <summary>
            (UTC-04:00) Cuiaba
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0400Georgetown">
            <summary>
            (UTC-04:00) Georgetown
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Manaus">
            <summary>
             Manaus
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.SAWesternStandardTime">
            <summary>
            SA Western Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.PacificSAStandardTime">
            <summary>
            Pacific SA Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.NewfoundlandStandardTime">
            <summary>
            Newfoundland Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.TocantinsStandardTime">
            <summary>
            Tocantins Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.ESouthAmericaStandardTime">
            <summary>
            E. South America Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Fortaleza">
            <summary>
             Fortaleza
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0300CityofBuenosAires">
            <summary>
            (UTC-03:00) City of Buenos Aires
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0300Greenland">
            <summary>
            (UTC-03:00) Greenland
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0300Montevideo">
            <summary>
            (UTC-03:00) Montevideo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0300PuntaArenas">
            <summary>
            (UTC-03:00) Punta Arenas
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0300SaintPierreandMiquelon">
            <summary>
            (UTC-03:00) Saint Pierre and Miquelon
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0300Salvador">
            <summary>
            (UTC-03:00) Salvador
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0200CoordinatedUniversalTime02">
            <summary>
            (UTC-02:00) Co-ordinated Universal Time-02
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0100Azores">
            <summary>
            (UTC-01:00) Azores
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0100CaboVerdeIs">
            <summary>
            (UTC-01:00) Cabo Verde Is.
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTCCoordinatedUniversalTime">
            <summary>
            (UTC) Co-ordinated Universal Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0000Dublin">
            <summary>
            (UTC+00:00) Dublin
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Lisbon">
            <summary>
             Lisbon
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.GMTStandardTime">
            <summary>
            GMT Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Reykjavik">
            <summary>
             Reykjavik
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0000SaoTome">
            <summary>
            (UTC+00:00) Sao Tome
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0100Casablanca">
            <summary>
            (UTC+01:00) Casablanca
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0100Amsterdam">
            <summary>
            (UTC+01:00) Amsterdam
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Bern">
            <summary>
             Bern
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Stockholm">
            <summary>
             Stockholm
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.WEuropeStandardTime">
            <summary>
            W. Europe Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Bratislava">
            <summary>
             Bratislava
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Ljubljana">
            <summary>
             Ljubljana
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.CentralEuropeStandardTime">
            <summary>
            Central Europe Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Copenhagen">
            <summary>
             Copenhagen
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Paris">
            <summary>
             Paris
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0100Sarajevo">
            <summary>
            (UTC+01:00) Sarajevo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Warsaw">
            <summary>
             Warsaw
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.CentralEuropeanStandardTime">
            <summary>
            Central European Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.WCentralAfricaStandardTime">
            <summary>
            W. Central Africa Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.JordanStandardTime">
            <summary>
            Jordan Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Bucharest">
            <summary>
             Bucharest
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0200Beirut">
            <summary>
            (UTC+02:00) Beirut
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0200Cairo">
            <summary>
            (UTC+02:00) Cairo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0200Chisinau">
            <summary>
            (UTC+02:00) Chisinau
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0200Damascus">
            <summary>
            (UTC+02:00) Damascus
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0200Gaza">
            <summary>
            (UTC+02:00) Gaza
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.WestBankStandardTime">
            <summary>
            West Bank Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Pretoria">
            <summary>
             Pretoria
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0200Helsinki">
            <summary>
            (UTC+02:00) Helsinki
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Riga">
            <summary>
             Riga
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Tallinn">
            <summary>
             Tallinn
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.FLEStandardTime">
            <summary>
            FLE Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.IsraelStandardTime">
            <summary>
            Israel Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.SouthSudanStandardTime">
            <summary>
            South Sudan Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.KaliningradStandardTime">
            <summary>
            Kaliningrad Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.SudanStandardTime">
            <summary>
            Sudan Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.LibyaStandardTime">
            <summary>
            Libya Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.NamibiaStandardTime">
            <summary>
            Namibia Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.ArabicStandardTime">
            <summary>
            Arabic Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.TurkeyStandardTime">
            <summary>
            Turkey Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Riyadh">
            <summary>
             Riyadh
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0300Minsk">
            <summary>
            (UTC+03:00) Minsk
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0300Moscow">
            <summary>
            (UTC+03:00) Moscow
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.RussianStandardTime">
            <summary>
            Russian Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EAfricaStandardTime">
            <summary>
            E. Africa Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.VolgogradStandardTime">
            <summary>
            Volgograd Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.IranStandardTime">
            <summary>
            Iran Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Muscat">
            <summary>
             Muscat
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0400Astrakhan">
            <summary>
            (UTC+04:00) Astrakhan
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AstrakhanStandardTime">
            <summary>
            Astrakhan Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.AzerbaijanStandardTime">
            <summary>
            Azerbaijan Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Samara">
            <summary>
             Samara
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0400PortLouis">
            <summary>
            (UTC+04:00) Port Louis
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0400Saratov">
            <summary>
            (UTC+04:00) Saratov
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0400Tbilisi">
            <summary>
            (UTC+04:00) Tbilisi
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0400Yerevan">
            <summary>
            (UTC+04:00) Yerevan
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0430Kabul">
            <summary>
            (UTC+04:30) Kabul
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0500Ashgabat">
            <summary>
            (UTC+05:00) Ashgabat
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.WestAsiaStandardTime">
            <summary>
            West Asia Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.EkaterinburgStandardTime">
            <summary>
            Ekaterinburg Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Karachi">
            <summary>
             Karachi
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0500Qyzylorda">
            <summary>
            (UTC+05:00) Qyzylorda
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0530Chennai">
            <summary>
            (UTC+05:30) Chennai
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Mumbai">
            <summary>
             Mumbai
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.IndiaStandardTime">
            <summary>
            India Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.SriLankaStandardTime">
            <summary>
            Sri Lanka Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.NepalStandardTime">
            <summary>
            Nepal Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.CentralAsiaStandardTime">
            <summary>
            Central Asia Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.BangladeshStandardTime">
            <summary>
            Bangladesh Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.OmskStandardTime">
            <summary>
            Omsk Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.MyanmarStandardTime">
            <summary>
            Myanmar Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Hanoi">
            <summary>
             Hanoi
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.SEAsiaStandardTime">
            <summary>
            SE Asia Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.GornoAltaysk">
            <summary>
             Gorno-Altaysk
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0700Hovd">
            <summary>
            (UTC+07:00) Hovd
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0700Krasnoyarsk">
            <summary>
            (UTC+07:00) Krasnoyarsk
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0700Novosibirsk">
            <summary>
            (UTC+07:00) Novosibirsk
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0700Tomsk">
            <summary>
            (UTC+07:00) Tomsk
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0800Beijing">
            <summary>
            (UTC+08:00) Beijing
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.HongKongSAR">
            <summary>
             Hong Kong SAR
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.ChinaStandardTime">
            <summary>
            China Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.NorthAsiaEastStandardTime">
            <summary>
            North Asia East Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Singapore">
            <summary>
             Singapore
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0800Perth">
            <summary>
            (UTC+08:00) Perth
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0800Taipei">
            <summary>
            (UTC+08:00) Taipei
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0800Ulaanbaatar">
            <summary>
            (UTC+08:00) Ulaanbaatar
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0845Eucla">
            <summary>
            (UTC+08:45) Eucla
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0900Chita">
            <summary>
            (UTC+09:00) Chita
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0900Osaka">
            <summary>
            (UTC+09:00) Osaka
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Tokyo">
            <summary>
             Tokyo
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0900Pyongyang">
            <summary>
            (UTC+09:00) Pyongyang
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0900Seoul">
            <summary>
            (UTC+09:00) Seoul
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0900Yakutsk">
            <summary>
            (UTC+09:00) Yakutsk
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0930Adelaide">
            <summary>
            (UTC+09:30) Adelaide
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC0930Darwin">
            <summary>
            (UTC+09:30) Darwin
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1000Brisbane">
            <summary>
            (UTC+10:00) Brisbane
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1000Canberra">
            <summary>
            (UTC+10:00) Canberra
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Sydney">
            <summary>
             Sydney
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1000Guam">
            <summary>
            (UTC+10:00) Guam
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.WestPacificStandardTime">
            <summary>
            West Pacific Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.TasmaniaStandardTime">
            <summary>
            Tasmania Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.VladivostokStandardTime">
            <summary>
            Vladivostok Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.LordHoweStandardTime">
            <summary>
            Lord Howe Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.BougainvilleStandardTime">
            <summary>
            Bougainville Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.RussiaTimeZone10">
            <summary>
            Russia Time Zone 10
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.MagadanStandardTime">
            <summary>
            Magadan Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.NorfolkStandardTime">
            <summary>
            Norfolk Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.SakhalinStandardTime">
            <summary>
            Sakhalin Standard Time
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.NewCaledonia">
            <summary>
             New Caledonia
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1200Anadyr">
            <summary>
            (UTC+12:00) Anadyr
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.RussiaTimeZone11">
            <summary>
            Russia Time Zone 11
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.Wellington">
            <summary>
             Wellington
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1200CoordinatedUniversalTime12">
            <summary>
            (UTC+12:00) Co-ordinated Universal Time+12
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1200Fiji">
            <summary>
            (UTC+12:00) Fiji
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1245ChathamIslands">
            <summary>
            (UTC+12:45) Chatham Islands
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1300CoordinatedUniversalTime13">
            <summary>
            (UTC+13:00) Co-ordinated Universal Time+13
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1300Nukualofa">
            <summary>
            (UTC+13:00) Nuku'alofa
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1300Samoa">
            <summary>
            (UTC+13:00) Samoa
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventTimeZone.UTC1400KiritimatiIsland">
            <summary>
            (UTC+14:00) Kiritimati Island
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventType">
            <summary>
            Defines the type of event
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventType.SingleInstance">
            <summary>
            Event will only take place once
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventType.Occurrence">
            <summary>
            Event is of type Occurence and will repeat
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventType.Exception">
            <summary>
            Exception
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventType.SeriesMaster">
            <summary>
            SeriesMaster
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventWeekIndex">
            <summary>
            Week index
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventWeekIndex.First">
            <summary>
            First
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventWeekIndex.Second">
            <summary>
            Optional
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventWeekIndex.Third">
            <summary>
            Resource
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventWeekIndex.Fourth">
            <summary>
            Resource
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.EventWeekIndex.Last">
            <summary>
            Resource
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamChannelMembershipType">
            <summary>
            Defines the Membership Type for a Team Channel
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelMembershipType.Standard">
            <summary>
            Standard channel membership
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelMembershipType.Private">
            <summary>
            Private channel membership
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelMembershipType.Shared">
            <summary>
            Shared channel membership
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamChannelMembershipType.UnknownFutureValue">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamConversationIdentityType">
            <summary>
            Type of conversation
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamConversationIdentityType.Team">
            <summary>
            Team
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamConversationIdentityType.Channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamConversationIdentityType.Chat">
            <summary>
            Chat
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamConversationIdentityType.UnknownFutureValue">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamGiphyContentRating">
            <summary>
            Giphy content rating for giphies being used in a team
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamGiphyContentRating.Moderate">
            <summary>
            Moderate content rating
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamGiphyContentRating.Strict">
            <summary>
            Strict content rating
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamsAppDistributionMethod">
            <summary>
            Distribution method of the team app
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamsAppDistributionMethod.Store">
            <summary>
            From store
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamsAppDistributionMethod.Organization">
            <summary>
            From your organization
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamsAppDistributionMethod.SideLoaded">
            <summary>
            Side loaded (developer scenario)
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamSpecialization">
            <summary>
            Defines the Specialization options for a Team
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamSpecialization.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamSpecialization.EducationStandard">
            <summary>
            Education Standard
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamSpecialization.EducationClass">
            <summary>
            Education class
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamSpecialization.EducationProfessionalLearningCommunity">
            <summary>
            Education professional learning community
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamSpecialization.EducationStaff">
            <summary>
            Education staff
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamSpecialization.UnknownFutureValue">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamTagType">
            <summary>
            The type of tag
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamTagType.Standard">
            <summary>
            Default type for a tag. Tags of type standard can be managed in the team by members who have permissions.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamUserIdentityType">
            <summary>
            The user identity type
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamUserIdentityType.aadUser">
            <summary>
            User is an AAD User
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamUserIdentityType.onPremiseAadUser">
            <summary>
            User is an on premises AAD User
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamUserIdentityType.anonymousGuest">
            <summary>
            User is an anonymous guest user
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamUserIdentityType.federatedUser">
            <summary>
            User is a federated user
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamUserIdentityType.personalMicrosoftAccountUser">
            <summary>
            User is a personal Microsoft account user
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamUserIdentityType.skypeUser">
            <summary>
            User is a Skype user
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamUserIdentityType.phoneUser">
            <summary>
            User is a phone user
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamUserIdentityType.unknownFutureValue">
            <summary>
            Unknown value, for future reference
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamUserIdentityType.emailUser">
            <summary>
            User is an email user
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamVisibility">
            <summary>
            Defines the Visibility for a Team
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamVisibility.Private">
            <summary>
            Private team
            </summary>
        </member>
        <member name="F:PnP.Core.Model.Teams.TeamVisibility.Public">
            <summary>
            Public team
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphDateTimeTimeZone">
            <summary>
            Describes the date, time, and time zone of a point in time.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphDateTimeTimeZone.DateTime">
            <summary>
            A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphDateTimeTimeZone.TimeZone">
            <summary>
            Represents a time zone, for example, "Pacific Standard Time".
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphEmailAddress">
            <summary>
            The name and email address of a contact or message recipient.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEmailAddress.Address">
            <summary>
            The email address of the person or entity.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEmailAddress.Name">
            <summary>
            The display name of the person or entity.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphEvent">
            <summary>
            Defines an event in a Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Id">
            <summary>
            Identifier that uniquely identifies a specific instance of an event. Read only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.AllowNewTimeProposals">
            <summary>
            True if the meeting organizer allows invitees to propose a new time when responding; otherwise, false.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.BodyPreview">
            <summary>
            The preview of the message associated with the event. It is in text format.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Categories">
            <summary>
            The categories associated with the event. Each category corresponds to the displayName property of an outlookCategory defined for the user.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.ChangeKey">
            <summary>
            Identifies the version of the event object. Every time the event is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.CreatedDateTime">
            <summary>
            Timestamp when the event was created
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.LastModifiedDateTime">
            <summary>
            Timestamp when the event was last modified
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.HasAttachments">
            <summary>
            Set to true if the event has attachments.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.HideAttendees">
            <summary>
            When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. Default is false.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.ICalUId">
            <summary>
            A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Importance">
            <summary>
            The importance of the event.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.IsAllDay">
            <summary>
            Set to true if the event lasts all day.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.IsCancelled">
            <summary>
            Set to true if the event has been canceled.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.IsDraft">
            <summary>
            Set to true if the user has updated the meeting in Outlook but has not sent the updates to attendees. Set to false if all changes have been sent, or if the event is an appointment without any attendees.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.IsOnlineMeeting">
            <summary>
            Defines if the event is an online meeting (e.g. Teams meeting)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.IsOrganizer">
            <summary>
            Defines if the event was created by the requestor
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.IsReminderOn">
            <summary>
            Set to true if an alert is set to remind the user of the event. (n/a for Team events)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.OnlineMeetingProvider">
            <summary>
            Represents the online meeting service provider. 
            After you set onlineMeetingProvider, Microsoft Graph initializes onlineMeeting. Subsequently you cannot change onlineMeetingProvider again, and the meeting remains available online.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.OnlineMeetingUrl">
            <summary>
            A URL for an online meeting. The property is set only when an organizer specifies in Outlook that an event is an online meeting such as Skype.
            To access the URL to join an online meeting, use joinUrl which is exposed via the onlineMeeting property of the event. The onlineMeetingUrl property will be deprecated in the future.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.OriginalEndTimeZone">
            <summary>
            The end time zone that was set when the event was created.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.OriginalStart">
            <summary>
            Represents the start time of an event when it is initially created as an occurrence or exception in a recurring series. 
            This property is not returned for events that are single instances. 
            Its date and time information is expressed in ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.OriginalStartTimeZone">
            <summary>
            The start time zone that was set when the event was created.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.ReminderMinutesBeforeStart">
            <summary>
            The number of minutes before the event start time that the reminder alert occurs.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.ResponseRequested">
            <summary>
            Defines if the organizer would like an invitee to send a response to the event.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Sensitivity">
            <summary>
            Sensitivity of the event
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.SeriesMasterId">
            <summary>
            The ID for the recurring series master item, if this event is part of a recurring series.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.ShowAs">
            <summary>
            The status to show.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Subject">
            <summary>
            The text of the event's subject line.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.TransactionId">
            <summary>
            A custom identifier specified by a client app for the server to avoid redundant POST operations in case of client retries to create the same event. 
            This is useful when low network connectivity causes the client to time out before receiving a response from the server for the client's prior create-event request. 
            After you set transactionId when creating an event, you cannot change transactionId in a subsequent update. 
            This property is only returned in a response payload if an app has set it. 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Type">
            <summary>
            The event type. 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.WebLink">
            <summary>
            The URL to open the event in Outlook on the web.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Body">
            <summary>
            The body of the message associated with the event. It can be in HTML or text format.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Attendees">
            <summary>
            The body of the message associated with the event. It can be in HTML or text format.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Start">
            <summary>
            The date, time, and time zone that the event starts. By default, the start time is in UTC.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.End">
            <summary>
            The date, time, and time zone that the event starts. By default, the start time is in UTC.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.ResponseStatus">
            <summary>
            Indicates the type of response sent in response to an event message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Location">
            <summary>
            The location of the event.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Locations">
            <summary>
            The locations where the event is held or attended from. 
            The location and locations properties always correspond with each other. 
            If you update the location property, any prior locations in the locations collection would be removed and replaced by the new location value.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.OnlineMeeting">
            <summary>
            Details for an attendee to join the meeting online. 
            Default is null. 
            Read-only. 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Organizer">
            <summary>
            The organizer of the event.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEvent.Recurrence">
            <summary>
            The recurrence pattern for the event.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.IGraphEvent.UpdateAsync(PnP.Core.Model.Teams.EventUpdateOptions)">
            <summary>
            Method to update the event
            </summary>
            <param name="options">Options on what to update</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.IGraphEvent.Update(PnP.Core.Model.Teams.EventUpdateOptions)">
            <summary>
            Method to update the event
            </summary>
            <param name="options">Options on what to update</param>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphEventAttendee">
            <summary>
            Represents properties of the attendee of an event
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEventAttendee.EmailAddress">
            <summary>
            Includes the name and SMTP address of the attendee.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEventAttendee.Type">
            <summary>
            The type of the attendee
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEventAttendee.ResponseStatus">
            <summary>
            The attendee's response (none, accepted, declined, etc.) for the event and date-time that the response was sent.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEventAttendee.TimeSlot">
            <summary>
            An alternate date/time proposed by the attendee for a meeting request to start and end. 
            If the attendee hasn't proposed another time, then this property is not included in a response of a GET event.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphEventAttendeeCollection">
            <summary>
            Public interface to define a collection of attendees for an event
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphEventCollection">
            <summary>
            Public interface to define a collection of events for a Team
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.IGraphEventCollection.AddAsync(PnP.Core.Model.Teams.EventCreateOptions)">
            <summary>
            Adds a new event
            </summary>
            <param name="options">Event options</param>
            <returns>Created graph event</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.IGraphEventCollection.Add(PnP.Core.Model.Teams.EventCreateOptions)">
            <summary>
            Adds a new event
            </summary>
            <param name="options">Event options</param>
            <returns>Created graph event</returns>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphEventResponseStatus">
            <summary>
            The response status of an attendee or organizer for a meeting request.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEventResponseStatus.Response">
            <summary>
            The type of the attendee
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphEventResponseStatus.Time">
            <summary>
            The date and time that the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphItemBody">
            <summary>
            Represents properties of the body of an item, such as a message, event or group post.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphItemBody.Content">
            <summary>
            The content of the item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphItemBody.ContentType">
            <summary>
            The type of the content.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphLocation">
            <summary>
            Represents location information of an event.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphLocation.Address">
            <summary>
            The street address of the location.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphLocation.Coordinates">
            <summary>
            The geographic coordinates and elevation of the location.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphLocation.DisplayName">
            <summary>
            The name associated with the location.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphLocation.LocationEmailAddress">
            <summary>
            Optional email address of the location.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphLocation.LocationUri">
            <summary>
            Optional URI representing the location.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphLocation.LocationType">
            <summary>
            The type of location
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphLocation.UniqueId">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphLocation.UniqueIdType">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphLocationCollection">
            <summary>
            Public interface to define a collection of events for a Team
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphOnlineMeetingInfo">
            <summary>
            Details for an attendee to join the meeting online.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOnlineMeetingInfo.ConferenceId">
            <summary>
            The ID of the conference.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOnlineMeetingInfo.JoinUrl">
            <summary>
            The external link that launches the online meeting. This is a URL that clients will launch into a browser and will redirect the user to join the meeting.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOnlineMeetingInfo.Phones">
            <summary>
            All of the phone numbers associated with this conference.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOnlineMeetingInfo.QuickDial">
            <summary>
            The pre-formatted quickdial for this call.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOnlineMeetingInfo.TollFreeNumbers">
            <summary>
            The toll free numbers that can be used to join the conference.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOnlineMeetingInfo.TollNumber">
            <summary>
            The toll number that can be used to join the conference.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphOutlookGeoCoordinates">
            <summary>
            The geographic coordinates, elevation, and their degree of accuracy for a physical location.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOutlookGeoCoordinates.Accuracy">
            <summary>
            The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOutlookGeoCoordinates.Altitude">
            <summary>
            The altitude of the location.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOutlookGeoCoordinates.AltitudeAccuracy">
            <summary>
            The accuracy of the altitude.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOutlookGeoCoordinates.Latitude">
            <summary>
            The latitude of the location.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphOutlookGeoCoordinates.Longitude">
            <summary>
            The longitude of the location.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphPatternedRecurrence">
            <summary>
            The recurrence pattern and range. This shared object is used to define the recurrence of the following objects:
               - accessReviewScheduleDefinition objects in Azure AD access reviews APIs
               - event objects in the calendar API
               - unifiedRoleAssignmentScheduleRequest and unifiedRoleEligibilityScheduleRequest objects in PIM
               - accessPackageAssignment objects in Azure AD entitlement management
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphPatternedRecurrence.Pattern">
            <summary>
            The frequency of an event. 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphPatternedRecurrence.Range">
            <summary>
            The duration of an event.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphPhone">
            <summary>
            Represents a phone number.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphPhone.Number">
            <summary>
            The phone number.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphPhone.Type">
            <summary>
            The type of phone number.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphPhoneCollection">
            <summary>
            Public interface to define a collection of phones for an event
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphPhysicalAddress">
            <summary>
            Represents the street address of a resource such as a contact or event.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphPhysicalAddress.City">
            <summary>
            The city.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphPhysicalAddress.CountryOrRegion">
            <summary>
            The country or region. It's a free-format string value, for example, "United States".
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphPhysicalAddress.PostalCode">
            <summary>
            The postal code.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphPhysicalAddress.State">
            <summary>
            The state.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphPhysicalAddress.Street">
            <summary>
            The street.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphRecipient">
            <summary>
            Represents information about a user in the sending or receiving end of an event, message or group post.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecipient.EmailAddress">
            <summary>
            The recipient's email address.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphRecipientCollection">
            <summary>
            Public interface to define a collection of recipients for an event
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphRecurrencePattern">
            <summary>
            Describes the frequency by which a recurring event repeats. 
            This shared object is used to define the recurrence of access reviews, calendar events, and access package assignments in Azure AD.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrencePattern.DayOfMonth">
            <summary>
            The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrencePattern.DaysOfWeek">
            <summary>
            A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday.
            If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.
            Required if type is weekly, relativeMonthly, or relativeYearly.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrencePattern.FirstDayOfWeek">
            <summary>
            The first day of the week. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. Default is sunday. 
            Required if type is weekly.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrencePattern.Index">
            <summary>
            Specifies on which instance of the allowed days specified in daysOfWeek the event occurs, counted from the first instance in the month
            The possible values are: first, second, third, fourth, last. Default is first. 
            Optional and used if type is relativeMonthly or relativeYearly.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrencePattern.Interval">
            <summary>
            The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrencePattern.Month">
            <summary>
            The month in which the event occurs. 
            This is a number from 1 to 12.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrencePattern.Type">
            <summary>
            The recurrence pattern type.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphRecurrenceRange">
            <summary>
            Describes a date range over which a recurring event. This shared object is used to define the recurrence of access reviews, calendar events, and access package assignments in Azure AD.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrenceRange.StartDate">
            <summary>
            The date to start applying the recurrence pattern. 
            The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. 
            Must be the same value as the start property of the recurring event. 
            Required.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrenceRange.EndDate">
            <summary>
            The date to stop applying the recurrence pattern. 
            Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. 
            Required if type is endDate.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrenceRange.NumberOfOccurrences">
            <summary>
            The number of times to repeat the event. 
            Required and must be positive if type is numbered.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrenceRange.RecurrenceTimeZone">
            <summary>
            Time zone for the startDate and endDate properties. 
            Optional. 
            If not specified, the time zone of the event is used.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphRecurrenceRange.Type">
            <summary>
            The recurrence range.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.IGraphTimeSlot">
            <summary>
            Represents a time slot for a meeting.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphTimeSlot.Address">
            <summary>
            The date, time, and time zone that a period ends.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.IGraphTimeSlot.Name">
            <summary>
            The date, time, and time zone that a period begins.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeam">
            <summary>
            Public interface to define a Team object of Microsoft Teams
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.Id">
            <summary>
            The Unique ID of the Team/Group
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.DisplayName">
            <summary>
            The display name of the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.Description">
            <summary>
            The description of the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.InternalId">
            <summary>
            The Internal ID of the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.Classification">
            <summary>
            The classification of the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.Specialization">
            <summary>
            The specialization of the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.Visibility">
            <summary>
            The specialization of the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.WebUrl">
            <summary>
            The Web URL of the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.IsArchived">
            <summary>
            Defines whether the Team is archived or not
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.MemberSettings">
            <summary>
            Defines the Members Settings for the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.GuestSettings">
            <summary>
            Defines the Guest Settings for the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.MessagingSettings">
            <summary>
            Defines the Members Settings for the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.FunSettings">
            <summary>
            Defines the Members Settings for the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.DiscoverySettings">
            <summary>
            Defines the Members Settings for the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.ClassSettings">
            <summary>
            Defines the Class Settings for the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.PrimaryChannel">
            <summary>
            Reference to the Primary Channel for the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.Channels">
            <summary>
            Collection of channels in this current Team
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.InstalledApps">
            <summary>
            Collection of installed apps in this current Team
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.Owners">
            <summary>
            Collection of Owners of the current Team
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.Members">
            <summary>
            Collection of Members of the current Team
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.Tags">
            <summary>
            Collection of tags associated with the current Team
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeam.Events">
            <summary>
            Collection of tags associated with the current Team
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeam.ArchiveAsync">
            <summary>
            Archives the team
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeam.Archive">
            <summary>
            Archives the team
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeam.ArchiveAsync(System.Boolean)">
            <summary>
            Archives the team
            </summary>
            <param name="setSPOSiteReadOnlyForMembers">This optional parameter defines whether to set permissions for team members to read-only on the Sharepoint Online site associated with the team</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeam.Archive(System.Boolean)">
            <summary>
            Archives the team
            </summary>
            <param name="setSPOSiteReadOnlyForMembers">This optional parameter defines whether to set permissions for team members to read-only on the Sharepoint Online site associated with the team</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeam.UnarchiveAsync">
            <summary>
            Unarchives the team
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeam.Unarchive">
            <summary>
            Unarchives the team
            </summary>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamApp">
            <summary>
            Defines a Microsoft Teams App installation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamApp.Id">
            <summary>
            The unique Id of the Team App in the current app catalog
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamApp.ExternalId">
            <summary>
            The external ID of the Team App as defined by the developer
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamApp.DisplayName">
            <summary>
            The Display Name of the Team App
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamApp.DistributionMethod">
            <summary>
            The method of distribution for the Team App
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamAppCollection">
            <summary>
            Public interface to define a collection of TeamApp objects of Microsoft Teams
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamAsyncOperation">
            <summary>
            Represents a Microsoft Teams async operation
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamAsyncOperation.Location">
            <summary>
            Location to call to request the current status of an async operation
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamAsyncOperation.WaitForCompletionAsync">
            <summary>
            Waits for the async operation to finish
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamAsyncOperation.WaitForCompletion">
            <summary>
            Waits for the async operation to finish
            </summary>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChannel">
            <summary>
            Defines a Channel of Microsoft Teams
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannel.Id">
            <summary>
            The Unique ID of the Team Channel
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannel.DisplayName">
            <summary>
            The display name of the Team Channel
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannel.Description">
            <summary>
            The description of the Team Channel
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannel.IsFavoriteByDefault">
            <summary>
            Defines whether the Team Channel is favorite by default in the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannel.Email">
            <summary>
            The email address of the Team Channel
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannel.MembershipType">
            <summary>
            Defines the Membership type for the Team Channel
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannel.WebUrl">
            <summary>
            The Web URL of the Team Channel
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannel.FilesFolderWebUrl">
            <summary>
            The fully qualified url for the SharePoint folder hosting this channel's files (uses Graph Beta)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannel.Tabs">
            <summary>
            Tabs in this Channel
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannel.Messages">
            <summary>
            Messages in this Team Channel
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannel.GetFilesFolderAsync(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Gets the <see cref="T:PnP.Core.Model.SharePoint.IFolder"/> hosting the files of this channel
            </summary>
            <param name="expressions">Properties of the folder to load</param>
            <returns>Folder hosting the files of this channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannel.GetFilesFolder(System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.SharePoint.IFolder,System.Object}}[])">
            <summary>
            Gets the <see cref="T:PnP.Core.Model.SharePoint.IFolder"/> hosting the files of this channel
            </summary>
            <param name="expressions">Properties of the folder to load</param>
            <returns>Folder hosting the files of this channel</returns>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChannelCollection">
            <summary>
            Public interface to define a collection of Team Channels
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelCollection.AddAsync(System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelCollection.Add(System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelCollection.AddBatch(PnP.Core.Services.Batch,System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelCollection.AddBatchAsync(System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelCollection.AddBatch(System.String,System.String)">
            <summary>
            Adds a new channel
            </summary>
            <param name="name">Display name of the channel</param>
            <param name="description">Optional description of the channel</param>
            <returns>Newly added channel</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelCollection.GetByDisplayName(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.Teams.ITeamChannel,System.Object}}[])">
            <summary>
            Method to select a channel by displayName
            </summary>
            <param name="displayName">The displayName to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting channel instance, if any</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelCollection.GetByDisplayNameAsync(System.String,System.Linq.Expressions.Expression{System.Func{PnP.Core.Model.Teams.ITeamChannel,System.Object}}[])">
            <summary>
            Method to select a channel by displayName asynchronously
            </summary>
            <param name="displayName">The displayName to search for</param>
            <param name="selectors">The expressions declaring the fields to select</param>
            <returns>The resulting channel instance, if any</returns>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChannelIdentity">
            <summary>
            Defines the channel reference of the message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelIdentity.ChannelId">
            <summary>
            The ID of the channel
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelIdentity.TeamId">
            <summary>
            The ID of the team
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChannelTab">
            <summary>
            Defines the tab in a Team channel
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTab.Id">
            <summary>
            Identifier that uniquely identifies a specific instance of a channel tab. Read only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTab.DisplayName">
            <summary>
            Name of the tab.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTab.SortOrderIndex">
            <summary>
            Index of the order used for sorting tabs.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTab.WebUrl">
            <summary>
            Deep link url of the tab instance. Read only.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTab.Configuration">
            <summary>
            Container for custom settings applied to a tab. The tab is considered configured only once this property is set.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTab.TeamsApp">
            <summary>
            The application that is linked to the tab. This cannot be changed after tab creation.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChannelTabCollection">
            <summary>
            Public interface to define a collection of Tabs for a Team Channel
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWikiTabAsync(System.String)">
            <summary>
            Adds a new wiki channel tab
            </summary>
            <param name="name">Display name of the wiki channel tab</param>
            <returns>Newly added wiki channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWikiTab(System.String)">
            <summary>
            Adds a new wiki channel tab
            </summary>
            <param name="name">Display name of the wiki channel tab</param>
            <returns>Newly added wiki channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWikiTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new wiki channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the wiki channel tab</param>
            <returns>Newly added wiki channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWikiTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new wiki channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the wiki channel tab</param>
            <returns>Newly added wiki channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWikiTabBatchAsync(System.String)">
            <summary>
            Adds a new wiki channel tab
            </summary>
            <param name="name">Display name of the wiki channel tab</param>
            <returns>Newly added wiki channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWikiTabBatch(System.String)">
            <summary>
            Adds a new wiki channel tab
            </summary>
            <param name="name">Display name of the wiki channel tab</param>
            <returns>Newly added wiki channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWebsiteTabAsync(System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to the website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWebsiteTab(System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to the website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWebsiteTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWebsiteTabBatch(PnP.Core.Services.Batch,System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to the website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWebsiteTabBatchAsync(System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to the Website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWebsiteTabBatch(System.String,System.Uri)">
            <summary>
            Adds a new Website channel tab
            </summary>
            <param name="name">Display name of the Website channel tab</param>
            <param name="websiteUri">Uri to the Website that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddDocumentLibraryTabAsync(System.String,System.Uri)">
            <summary>
            Adds a new document library channel tab
            </summary>
            <param name="name">Display name of the DocumentLibrary channel tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added Website channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddDocumentLibraryTab(System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary channel tab
            </summary>
            <param name="name">Display name of the DocumentLibrary channel tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddDocumentLibraryTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the DocumentLibrary channel tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddDocumentLibraryTabBatch(PnP.Core.Services.Batch,System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the DocumentLibrary channel tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddDocumentLibraryTabBatchAsync(System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary channel tab
            </summary>
            <param name="name">Display name of the DocumentLibrary channel tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddDocumentLibraryTabBatch(System.String,System.Uri)">
            <summary>
            Adds a new DocumentLibrary channel tab
            </summary>
            <param name="name">Display name of the DocumentLibrary channel tab</param>
            <param name="documentLibraryUri">Uri to the document library that needs to be added as tab</param>
            <returns>Newly added DocumentLibrary channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWordTabAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="name">Display name of the Word channel tab</param>
            <param name="fileUri">Uri to the file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWordTab(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="name">Display name of the Word channel tab</param>
            <param name="fileUri">Uri to the website that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWordTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Word channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWordTabBatch(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Word channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param> 
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWordTabBatchAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="name">Display name of the Word channel tab</param>
            <param name="fileUri">Uri to word file that needs to be displayed as tab</param>        
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddWordTabBatch(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Word channel tab
            </summary>
            <param name="name">Display name of the Word channel tab</param>
            <param name="fileUri">Uri to the Word file that needs to be added as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Word channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddExcelTabAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to the Excel that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddExcelTab(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to the Excel that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddExcelTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to Excel file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddExcelTabBatch(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to Excel file that needs to be displayed as tab</param> 
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddExcelTabBatchAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to Excel file that needs to be displayed as tab</param>        
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddExcelTabBatch(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to the Excel file that needs to be added as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPdfTabAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to the Pdf file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPdfTab(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="name">Display name of the Pdf channel tab</param>
            <param name="fileUri">Uri to the Pdf that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPdfTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Excel channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Excel channel tab</param>
            <param name="fileUri">Uri to Pdf file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Excel channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPdfTabBatch(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Pdf channel tab</param>
            <param name="fileUri">Uri to Pdf file that needs to be displayed as tab</param> 
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPdfTabBatchAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="name">Display name of the Pdf channel tab</param>
            <param name="fileUri">Uri to Pdf file that needs to be displayed as tab</param>        
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPdfTabBatch(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Pdf channel tab
            </summary>
            <param name="name">Display name of the Pdf channel tab</param>
            <param name="fileUri">Uri to the Pdf file that needs to be added as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Pdf channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPptTabAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to the file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPptTab(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to the Ppt that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPptTabBatchAsync(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to Ppt file that needs to be displayed as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPptTabBatch(PnP.Core.Services.Batch,System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to Ppt file that needs to be displayed as tab</param> 
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPptTabBatchAsync(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to Ppt file that needs to be displayed as tab</param>        
            <param name="fileId">The sourceDoc ID of the file</param>      
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPptTabBatch(System.String,System.Uri,System.Guid)">
            <summary>
            Adds a new Ppt channel tab
            </summary>
            <param name="name">Display name of the Ppt channel tab</param>
            <param name="fileUri">Uri to the Ppt file that needs to be added as tab</param>
            <param name="fileId">The sourceDoc ID of the file</param>
            <returns>Newly added Ppt channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPlannerTabAsync(System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPlannerTab(System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPlannerTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPlannerTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPlannerTabBatchAsync(System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPlannerTabBatch(System.String)">
            <summary>
            Adds a new planner channel tab
            </summary>
            <param name="name">Display name of the planner channel tab</param>
            <returns>Newly added planner channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddStreamsTabAsync(System.String)">
            <summary>
            Adds a new Streams channel tab
            </summary>
            <param name="name">Display name of the Streams channel tab</param>
            <returns>Newly added Streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddStreamsTab(System.String)">
            <summary>
            Adds a new Streams channel tab
            </summary>
            <param name="name">Display name of the Streams channel tab</param>
            <returns>Newly added Streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddStreamsTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new streams channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the streams channel tab</param>
            <returns>Newly added Streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddStreamsTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new streams channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the streams channel tab</param>
            <returns>Newly added Streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddStreamsTabBatchAsync(System.String)">
            <summary>
            Adds a new streams channel tab
            </summary>
            <param name="name">Display name of the streams channel tab</param>
            <returns>Newly added streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddStreamsTabBatch(System.String)">
            <summary>
            Adds a new Streams channel tab
            </summary>
            <param name="name">Display name of the Streams channel tab</param>
            <returns>Newly added Streams channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddFormsTabAsync(System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddFormsTab(System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddFormsTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddFormsTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddFormsTabBatchAsync(System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddFormsTabBatch(System.String)">
            <summary>
            Adds a new Forms channel tab
            </summary>
            <param name="name">Display name of the Forms channel tab</param>
            <returns>Newly added Forms channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddOneNoteTabAsync(System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added OneNote channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddOneNoteTab(System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added OneNote channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddOneNoteTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added OneNote channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddOneNoteTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added OneNote channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddOneNoteTabBatchAsync(System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added planner OneNote tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddOneNoteTabBatch(System.String)">
            <summary>
            Adds a new OneNote channel tab
            </summary>
            <param name="name">Display name of the OneNote channel tab</param>
            <returns>Newly added OneNote channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPowerBiTabAsync(System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPowerBiTab(System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPowerBiTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPowerBiTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPowerBiTabBatchAsync(System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddPowerBiTabBatch(System.String)">
            <summary>
            Adds a new PowerBi channel tab
            </summary>
            <param name="name">Display name of the PowerBi channel tab</param>
            <returns>Newly added PowerBi channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddSharePointPageOrListTabAsync(System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddSharePointPageOrListTab(System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddSharePointPageOrListTabBatchAsync(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddSharePointPageOrListTabBatch(PnP.Core.Services.Batch,System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="batch">Batch to use</param>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddSharePointPageOrListTabBatchAsync(System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChannelTabCollection.AddSharePointPageOrListTabBatch(System.String)">
            <summary>
            Adds a new sharepoint or page channel tab
            </summary>
            <param name="name">Display name of the sharepoint or page channel tab</param>
            <returns>Newly added sharepoint or page channel tab</returns>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChannelTabConfiguration">
            <summary>
            Public interface to define the configuration settings for a Team tab
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTabConfiguration.EntityId">
            <summary>
            Identifier for the entity hosted by the tab provider.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTabConfiguration.ContentUrl">
            <summary>
            Url used for rendering tab contents in Teams. Required.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTabConfiguration.RemoveUrl">
            <summary>
            Url called by Teams client when a Tab is removed using the Teams Client.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTabConfiguration.WebsiteUrl">
            <summary>
            Url for showing tab contents outside of Teams.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTabConfiguration.HasContent">
            <summary>
            Is there content in this tab.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTabConfiguration.WikiTabId">
            <summary>
            Wiki tab id.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChannelTabConfiguration.WikiDefaultTab">
            <summary>
            Is this the default wiki tab.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessage">
            <summary>
            Represents an individual chat message within a channel or chat. The chat message can be a root chat message or 
            part of a reply thread that is defined by the replyToId property in the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Id">
            <summary>
            Read-only. Unique Id of the message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.ReplyToId">
            <summary>
            Read-only. Id of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels not chats)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.From">
            <summary>
            Read only. Details of the sender of the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Etag">
            <summary>
            Read-only. Version number of the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.MessageType">
            <summary>
            The type of chat message. The possible values are: message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.CreatedDateTime">
            <summary>
            Read only. Timestamp of when the chat message was created.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.LastModifiedDateTime">
            <summary>
            Read only. Timestamp of when the chat message is created or edited, including when a reply is made (if it's a root chat message in a channel) or a reaction is added or removed.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.DeletedDateTime">
            <summary>
            Read only. Timestamp at which the chat message was deleted, or null if not deleted.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Subject">
            <summary>
            The subject of the chat message, in plaintext.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Body">
            <summary>
            Plaintext/HTML representation of the content of the chat message. Representation is specified by the contentType inside the body. 
            The content is always in HTML if the chat message contains a chatMessageMention.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.ChannelIdentity">
            <summary>
            Channel identity reference
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Summary">
            <summary>
            Summary text of the chat message that could be used for push notifications and summary views or fall back views. 
            Only applies to channel chat messages, not chat messages in a chat.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Importance">
            <summary>
            The importance of the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.WebUrl">
            <summary>
            The Web URL of the team chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Locale">
            <summary>
            Locale of the team chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Reactions">
            <summary>
            Reactions for this chat message (for example, Like).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Mentions">
            <summary>
            List of entities mentioned in the chat message. Currently supports user, bot, team, channel.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Attachments">
            <summary>
            Attached files
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.HostedContents">
            <summary>
            Hosted Content tiles
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessage.Replies">
            <summary>
            Collection of replies for a message
            Implements <see cref="T:System.Linq.IQueryable`1"/>. <br />
            See <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-getdata.html#requesting-model-collections">Requesting model collections</see> 
            and <see href="https://pnp.github.io/pnpcore/using-the-sdk/basics-iqueryable.html">IQueryable performance considerations</see> to learn more.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReplyAsync(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="options">Options for the reply to create</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReply(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="options">Options for the reply to create</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReplyBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="batch">Batch the reply is associated with</param>
            <param name="options">Options for the reply to create</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReplyBatch(PnP.Core.Services.Batch,PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="batch">Batch the reply is associated with</param>
            <param name="options">Options for the reply to create</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReplyBatchAsync(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="options">Options for the reply to create</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReplyBatch(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="options">Options for the reply to create</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReplyAsync(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReply(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="content">Content of the reply</param>
            <param name="contentType">Reply content type e.g. Text, Html</param>
            <param name="subject">Reply Subject</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReplyBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="batch">Batch the reply is associated with</param>
            <param name="content">Content of the reply</param>
            <param name="contentType">Reply content type e.g. Text, Html</param>
            <param name="subject">Reply Subject</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReplyBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="batch">Batch the reply is associated with</param>
            <param name="content">Content of the reply</param>
            <param name="contentType">Reply content type e.g. Text, Html</param>
            <param name="subject">Reply Subject</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReplyBatchAsync(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="content">Content of the Reply</param>
            <param name="contentType">Reply content type e.g. Text, Html</param>
            <param name="subject">Reply Subject</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessage.AddReplyBatch(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a reply to an existing message
            </summary>
            <param name="content">Content of the Reply</param>
            <param name="contentType">Reply content type e.g. Text, Html</param>
            <param name="subject">Reply Subject</param>
            <returns>Newly added reply</returns>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageAttachment">
            <summary>
            Attachments connected to a chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageAttachment.Id">
            <summary>
            Read-only. Unique id of the attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageAttachment.ContentType">
            <summary>
            The media type of the content attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageAttachment.ContentUrl">
            <summary>
            URL for the content of the attachment. Supported protocols: http, https, file and data.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageAttachment.Content">
            <summary>
            The content of the attachment. If the attachment is a rich card, set the property to the rich card object. 
            This property and contentUrl are mutually exclusive.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageAttachment.Name">
            <summary>
            Name of the attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageAttachment.ThumbnailUrl">
            <summary>
            URL to a thumbnail image that the channel can use if it supports using an alternative, smaller form of content or contentUrl. 
            For example, if you set contentType to application/word and set contentUrl to the location of the Word document, you might 
            include a thumbnail image that represents the document. The channel could display the thumbnail image instead of the document. 
            When the user clicks the image, the channel would open the document.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageAttachmentCollection">
            <summary>
            Collection of chat messages
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageCollection">
            <summary>
            A chat is a collection of chatMessages between one or more participants. Participants can be users or apps.
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.AddAsync(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.Add(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.AddBatchAsync(PnP.Core.Services.Batch,System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.AddBatch(PnP.Core.Services.Batch,System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.AddBatchAsync(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.AddBatch(System.String,PnP.Core.Model.Teams.ChatMessageContentType,System.String)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="content">Content of the message</param>
            <param name="contentType">Message content type e.g. Text, Html</param>
            <param name="subject">Message Subject</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.AddAsync(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.Add(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat
            </summary>
            <param name="options">Full chat message options</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.AddBatchAsync(PnP.Core.Services.Batch,PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.AddBatch(PnP.Core.Services.Batch,PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="batch">Batch the message is associated with</param>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.AddBatchAsync(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamChatMessageCollection.AddBatch(PnP.Core.Model.Teams.ChatMessageOptions)">
            <summary>
            Adds a new channel chat message
            </summary>
            <param name="options">Full chat message options</param>
            <returns>Newly added channel chat message</returns>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageContent">
            <summary>
            Public interface to define the content of a chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageContent.Content">
            <summary>
            The content of the item.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageContent.ContentType">
            <summary>
            The type of the content. Possible values are text and html.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageHostedContent">
            <summary>
            Attachments connected to a chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageHostedContent.Id">
            <summary>
            Read-only. Unique id of the attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageHostedContent.ContentType">
            <summary>
            The media type of the content attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageHostedContent.ContentBytes">
            <summary>
            The content bytes of the attachment as Base64-encoded bytes
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageHostedContentCollection">
            <summary>
            Collection of chat messages
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageMention">
            <summary>
            Represents a mention in a chatMessage entity. The mention can be to a user, team, bot, or channel.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageMention.Id">
            <summary>
            Index of an entity being mentioned in the specified chatMessage. 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageMention.MentionText">
            <summary>
            String used to represent the mention. For example, a user's display name, a team name.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageMention.Mentioned">
            <summary>
            The entity (user, application, team, or channel) that was mentioned. If it was a channel or team that was @mentioned, 
            the identitySet contains a conversation property giving the ID of the team/channel, and a conversationIdentityType 
            property that represents either the team or channel.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageMentionCollection">
            <summary>
            Chat mentions
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageMentionedIdentitySet">
            <summary>
            Represents the resource (user, application, or conversation) @mentioned in a message in a chat or a channel.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageMentionedIdentitySet.Application">
            <summary>
            If present, represents an application (for example, bot) @mentioned in a message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageMentionedIdentitySet.Conversation">
            <summary>
            If present, represents a conversation (for example, team or channel) @mentioned in a message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageMentionedIdentitySet.User">
            <summary>
            If present, represents a user @mentioned in a message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageMentionedIdentitySet.Tag">
            <summary>
            If present, represents a tag @mentioned in a team message.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageReaction">
            <summary>
            Represents a reaction to a chatMessage entity.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReaction.CreatedDateTime">
            <summary>
            The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. 
            For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReaction.ReactionType">
            <summary>
            Type of reaction
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReaction.User">
            <summary>
            The user who reacted to the message.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageReactionCollection">
            <summary>
            Reactions on this chat
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageReply">
            <summary>
            Represents an individual Reply on a chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.Id">
            <summary>
            Read-only. Unique Id of the message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.ReplyToId">
            <summary>
            Read-only. Id of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels not chats)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.From">
            <summary>
            Read only. Details of the sender of the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.Etag">
            <summary>
            Read-only. Version number of the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.MessageType">
            <summary>
            The type of chat message. The possible values are: message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.CreatedDateTime">
            <summary>
            Read only. Timestamp of when the chat message was created.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.LastModifiedDateTime">
            <summary>
            Read only. Timestamp of when the chat message is created or edited, including when a reply is made (if it's a root chat message in a channel) or a reaction is added or removed.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.DeletedDateTime">
            <summary>
            Read only. Timestamp at which the chat message was deleted, or null if not deleted.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.Subject">
            <summary>
            The subject of the chat message, in plaintext.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.Body">
            <summary>
            Plaintext/HTML representation of the content of the chat message. Representation is specified by the contentType inside the body. 
            The content is always in HTML if the chat message contains a chatMessageMention.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.ChannelIdentity">
            <summary>
            Channel identity reference
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.Summary">
            <summary>
            Summary text of the chat message that could be used for push notifications and summary views or fall back views. 
            Only applies to channel chat messages, not chat messages in a chat.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.Importance">
            <summary>
            The importance of the chat message.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.WebUrl">
            <summary>
            The Web URL of the team chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.Locale">
            <summary>
            Locale of the team chat message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.Reactions">
            <summary>
            Reactions for this chat message (for example, Like).
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.Mentions">
            <summary>
            List of entities mentioned in the chat message. Currently supports user, bot, team, channel.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.Attachments">
            <summary>
            Attached files
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamChatMessageReply.HostedContents">
            <summary>
            Hosted Content tiles
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamChatMessageReplyCollection">
            <summary>
            A collection of the replies on a chat
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamClassSettings">
            <summary>
            Public interface to define the settings for a classroom
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamClassSettings.NotifyGuardiansAboutAssignments">
            <summary>
            Do guardians need to be notified about assignments?
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamConversationIdentity">
            <summary>
            Represents a tag in Microsoft Teams. Tags allow users to quickly connect to subset of users in a team.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamConversationIdentity.DisplayName">
            <summary>
            Display name of the conversation. Optional.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamConversationIdentity.Id">
            <summary>
            ID of the conversation.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamConversationIdentity.ConversationIdentityType">
            <summary>
            Type of conversation. Possible values are: team, channel, and chat.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamDiscoverySettings">
            <summary>
            Public interface to define the discovery settings for a Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamDiscoverySettings.ShowInTeamsSearchAndSuggestions">
            <summary>
            Show team in Teams search and suggestions?
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamFunSettings">
            <summary>
            Public interface to define the fun settings for a Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamFunSettings.AllowGiphy">
            <summary>
            Defines whether the Giphy are allowed in the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamFunSettings.GiphyContentRating">
            <summary>
            Defines the Giphy content rating (strict or moderate)
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamFunSettings.AllowStickersAndMemes">
            <summary>
            Defines whether the stickers and meme are allowed in the Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamFunSettings.AllowCustomMemes">
            <summary>
            Defines whether the custom memes are allowed in the Team
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamGuestSettings">
            <summary>
            Public interface to define the guest settings for a Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamGuestSettings.AllowCreateUpdateChannels">
            <summary>
            Defines whether the guests can create or update channels
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamGuestSettings.AllowDeleteChannels">
            <summary>
            Defines whether the guests can delete channels
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamIdentitySet">
            <summary>
            Identity information about a Teams element
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamIdentitySet.Application">
            <summary>
            Optional. The application associated with this action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamIdentitySet.Conversation">
            <summary>
            Optional. The team or channel associated with this action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamIdentitySet.ConversationIdentityType">
            <summary>
            Optional. Indicates whether the conversation property identifies a team or channel.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamIdentitySet.Device">
            <summary>
            Optional. The device associated with this action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamIdentitySet.Phone">
            <summary>
            Optional. The phone number associated with this action.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamIdentitySet.User">
            <summary>
            Optional. The user associated with this action.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamMembersSettings">
            <summary>
            Public interface to define the memebers settings for a Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMembersSettings.AllowCreateUpdateChannels">
            <summary>
            Defines whether the team members can update channels
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMembersSettings.AllowCreatePrivateChannels">
            <summary>
            Defines whether the team members can create private channels
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMembersSettings.AllowDeleteChannels">
            <summary>
            Defines whether the team members can delete channels
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMembersSettings.AllowAddRemoveApps">
            <summary>
            Defines whether the team members can add or remove apps
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMembersSettings.AllowCreateUpdateRemoveTabs">
            <summary>
            Defines whether the team members can update or remove tabs
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMembersSettings.AllowCreateUpdateRemoveConnectors">
            <summary>
            Defines whether the team members can create, update, or remove connectors
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamMessagingSettings">
            <summary>
            Public interface to define the messaging settings for a Team
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMessagingSettings.AllowUserEditMessages">
            <summary>
            Defines whether users can edit messages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMessagingSettings.AllowUserDeleteMessages">
            <summary>
            Defines whether users can delete messages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMessagingSettings.AllowOwnerDeleteMessages">
            <summary>
            Defines whether owners can delete messages
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMessagingSettings.AllowTeamMentions">
            <summary>
            Defines whether users can use team mentions
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamMessagingSettings.AllowChannelMentions">
            <summary>
            Defines whether users can use channel mentions
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamTag">
            <summary>
            Represents a tag associated with a team.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTag.Description">
            <summary>
            Tag description as it will appear to the user in Microsoft Teams.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTag.DisplayName">
            <summary>
            Name of the tag. The value can't be more than 40 characters.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTag.Id">
            <summary>
            ID of the tag.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTag.MemberCount">
            <summary>
            The number of users assigned to the tag.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTag.TeamId">
            <summary>
            ID of the team in which the tag is defined.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTag.TagType">
            <summary>
            Tag description as it will appear to the user in Microsoft Teams.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTag.Members">
            <summary>
            Members that are associated with the Teams tag
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamTagCollection">
            <summary>
            Tags on the team
            </summary>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamTagCollection.AddAsync(PnP.Core.Model.Teams.TeamTagOptions)">
            <summary>
            Adds a new tag to a team
            </summary>
            <param name="options">Tag creation options</param>
            <returns>Newly created tag</returns>
        </member>
        <member name="M:PnP.Core.Model.Teams.ITeamTagCollection.Add(PnP.Core.Model.Teams.TeamTagOptions)">
            <summary>
            Adds a new tag to a team
            </summary>
            <param name="options">Tag creation options</param>
            <returns>Newly created tag</returns>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamTagIdentity">
            <summary>
            Represents a tag in Microsoft Teams. Tags allow users to quickly connect to subset of users in a team.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTagIdentity.DisplayName">
            <summary>
            Display name of the tag.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTagIdentity.Id">
            <summary>
            ID of the tag.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamTagMember">
            <summary>
            Represents a tag associated with a team.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTagMember.DisplayName">
            <summary>
            The member's display name.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTagMember.TenantId">
            <summary>
            The ID of the tenant that the tag member is a part of.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTagMember.Id">
            <summary>
            ID of the member.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ITeamTagMember.UserId">
            <summary>
            The user ID of the member.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ITeamTagMemberCollection">
            <summary>
            Members on this team tag
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ChatMessageAttachmentOptions">
            <summary>
            Chat message attachment
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageAttachmentOptions.Id">
            <summary>
            Unique id of the attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageAttachmentOptions.ContentType">
            <summary>
            The media type of the content attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageAttachmentOptions.ContentUrl">
            <summary>
            URL for the content of the attachment. Supported protocols: http, https, file and data.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageAttachmentOptions.Content">
            <summary>
            The content of the attachment. If the attachment is a rich card, set the property to the rich card object. 
            This property and contentUrl are mutually exclusive.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageAttachmentOptions.Name">
            <summary>
            Name of the attachment.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageAttachmentOptions.ThumbnailUrl">
            <summary>
            URL to a thumbnail image that the channel can use if it supports using an alternative, smaller form of content or contentUrl. 
            For example, if you set contentType to application/word and set contentUrl to the location of the Word document, you might 
            include a thumbnail image that represents the document. The channel could display the thumbnail image instead of the document. 
            When the user clicks the image, the channel would open the document.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ChatMessageHostedContentOptions">
            <summary>
            Chat Message Hosted Content options
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageHostedContentOptions.Id">
            <summary>
            Hosted Content Id
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageHostedContentOptions.ContentType">
            <summary>
            Hosted content type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageHostedContentOptions.ContentBytes">
            <summary>
            Hosted content bytes
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ChatMessageMentionOptions">
            <summary>
            Chat message mention options
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageMentionOptions.Id">
            <summary>
            Index of an entity being mentioned in the specified chatMessage. 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageMentionOptions.MentionText">
            <summary>
            String used to represent the mention. For example, a user's display name, a team name.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageMentionOptions.Mentioned">
            <summary>
            The entity (user, application, team, or channel) that was mentioned. If it was a channel or team that was @mentioned, 
            the identitySet contains a conversation property giving the ID of the team/channel, and a conversationIdentityType 
            property that represents either the team or channel.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.ChatMessageOptions">
            <summary>
            Chat Message options
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageOptions.Content">
            <summary>
            Message content
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageOptions.ContentType">
            <summary>
            Type of the message content
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageOptions.Subject">
            <summary>
            Message Subject
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageOptions.Attachments">
            <summary>
            Attachment options
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageOptions.HostedContents">
            <summary>
            Message hosted content options
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.ChatMessageOptions.Mentions">
            <summary>
            Mention options
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventAddressOptions">
            <summary>
            Options that can be set when creating an address location for a meeting request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventAddressOptions.Street">
            <summary>
            Street
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventAddressOptions.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventAddressOptions.State">
            <summary>
            State
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventAddressOptions.CountryOrRegion">
            <summary>
            Country Or Region
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventAddressOptions.PostalCode">
            <summary>
            PostalCode
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventAttendeeOptions">
            <summary>
            Options that can be set for the attendees
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventAttendeeOptions.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventAttendeeOptions.EmailAddress">
            <summary>
            Mail address
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventAttendeeOptions.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventCoordinateOptions">
            <summary>
            Options that can be set when creating a coordinate location for a meeting request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCoordinateOptions.Latitude">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCoordinateOptions.Longitude">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCoordinateOptions.Accuracy">
            <summary>
            Accuracy
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCoordinateOptions.Altitude">
            <summary>
            Altitude
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCoordinateOptions.AltitudeAccuracy">
            <summary>
            Altitude Accuracy
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventCreateOptions">
            <summary>
            Options that can be set when creating a meeting request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.Subject">
            <summary>
            Subject property
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.Body">
            <summary>
            Body message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.BodyContentType">
            <summary>
            Body content type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.Start">
            <summary>
            Start time of the event
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.StartTimeZone">
            <summary>
            Start time zone
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.End">
            <summary>
            End time of the event
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.EndTimeZone">
            <summary>
            End time zone
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.Location">
            <summary>
            Location of the event
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.Locations">
            <summary>
            Locations of the event. 
            An event can have multiple locations
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.Attendees">
            <summary>
            List of attendees to be invited to the meeting
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.AllowNewTimeProposals">
            <summary>
            Allow new time proposals
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.HideAttendees">
            <summary>
            When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. 
            Default is false.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.IsAllDay">
            <summary>
            Set to true if the event lasts all day.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.ResponseRequested">
            <summary>
            Set to true if the sender would like a response when the event is accepted or declined.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.IsOnlineMeeting">
            <summary>
            True if this event has online meeting information, false otherwise. 
            Default is false. 
            Optional.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.TransactionId">
            <summary>
            Transaction ID
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.Importance">
            <summary>
            The importance of the event. 
            The possible values are: low, normal, high.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.Sensitivity">
            <summary>
            The sensitivity of the event. 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.ShowAs">
            <summary>
            The status to show
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.OnlineMeetingProvider">
            <summary>
            Represents the online meeting service provider.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventCreateOptions.Recurrence">
            <summary>
            The recurrence pattern for the event.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventLocationOptions">
            <summary>
            Options that can be set when creating a location for a meeting request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventLocationOptions.Type">
            <summary>
            Type of location
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventLocationOptions.DisplayName">
            <summary>
            Name of the location
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventLocationOptions.LocationEmailAddress">
            <summary>
            Location email address
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventLocationOptions.LocationUri">
            <summary>
            Location Uri
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventLocationOptions.Address">
            <summary>
            Address options
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventLocationOptions.Coordinates">
            <summary>
            Coordinates options
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventRecipientOptions">
            <summary>
            Options that can be set for a recipient
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecipientOptions.Address">
            <summary>
            Mail address for the recipient
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecipientOptions.Name">
            <summary>
            Name for the recipient
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventRecurrenceOptions">
            <summary>
            Options that can be set for the recurrence
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrenceOptions.Pattern">
            <summary>
            Pattern options
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrenceOptions.Range">
            <summary>
            Range options
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventRecurrencePatternOptions">
            <summary>
            Options that can be set for the recurrence pattern
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrencePatternOptions.Type">
            <summary>
            Type of recurrence
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrencePatternOptions.Interval">
            <summary>
            Interval
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrencePatternOptions.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrencePatternOptions.DayOfMonth">
            <summary>
            Day of the month
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrencePatternOptions.DaysOfWeek">
            <summary>
            Days of week of the recurrence event
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrencePatternOptions.FirstDayOfWeek">
            <summary>
            First day of week
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrencePatternOptions.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventRecurrenceRangeOptions">
            <summary>
            Options that can be set for the recurrence range
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrenceRangeOptions.StartDate">
            <summary>
            Start date
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrenceRangeOptions.EndDate">
            <summary>
            End date
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrenceRangeOptions.NumberOfOccurences">
            <summary>
            Amount of occurences
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrenceRangeOptions.RecurrenceTimeZone">
            <summary>
            Time zone
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventRecurrenceRangeOptions.Type">
            <summary>
            Range type
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.EventUpdateOptions">
            <summary>
            Options that can be set when creating a meeting request
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.Subject">
            <summary>
            Subject property
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.Body">
            <summary>
            Body message
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.BodyContentType">
            <summary>
            Body content type
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.Start">
            <summary>
            Start time of the event
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.StartTimeZone">
            <summary>
            Start time zone
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.End">
            <summary>
            End time of the event
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.EndTimeZone">
            <summary>
            End time zone
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.Location">
            <summary>
            Location of the event
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.Locations">
            <summary>
            Locations of the event. 
            An event can have multiple locations
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.Attendees">
            <summary>
            List of attendees to be invited to the meeting
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.AllowNewTimeProposals">
            <summary>
            Allow new time proposals
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.HideAttendees">
            <summary>
            When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. 
            Default is false.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.IsAllDay">
            <summary>
            Set to true if the event lasts all day.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.ResponseRequested">
            <summary>
            Set to true if the sender would like a response when the event is accepted or declined.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.IsOnlineMeeting">
            <summary>
            True if this event has online meeting information, false otherwise. 
            Default is false. 
            Optional.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.Importance">
            <summary>
            The importance of the event. 
            The possible values are: low, normal, high.
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.Sensitivity">
            <summary>
            The sensitivity of the event. 
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.ShowAs">
            <summary>
            The status to show
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.EventUpdateOptions.OnlineMeetingProvider">
            <summary>
            Represents the online meeting service provider.
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamTagOptions">
            <summary>
            Options for the team tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.TeamTagOptions.DisplayName">
            <summary>
            Display name of the tag
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.TeamTagOptions.Members">
            <summary>
            Members associated with the tags
            </summary>
        </member>
        <member name="T:PnP.Core.Model.Teams.TeamTagUserOptions">
            <summary>
            Options for the team tag members
            </summary>
        </member>
        <member name="P:PnP.Core.Model.Teams.TeamTagUserOptions.UserId">
            <summary>
            UserId to add to the tag
            </summary>
        </member>
        <member name="T:PnP.Core.Model.RequestModuleExtensions">
            <summary>
            Set of extension methods used to bring request module support
            </summary>
        </member>
        <member name="M:PnP.Core.Model.RequestModuleExtensions.WithModule``1(PnP.Core.Model.ISupportModules{``0},PnP.Core.Services.IRequestModule)">
            <summary>
            Adds request modules to be executed when the request for this model will be executed
            </summary>
            <typeparam name="TModel">Model type</typeparam>
            <param name="dataModel">Model instance to operate on</param>
            <param name="module">Request module to add</param>
            <returns>The passed model instance</returns>
        </member>
        <member name="M:PnP.Core.Model.RequestModuleExtensions.WithHeaders``1(PnP.Core.Model.ISupportModules{``0},System.Collections.Generic.Dictionary{System.String,System.String},System.Action{System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            Executes this request with additional request headers
            </summary>
            <typeparam name="TModel">Model type</typeparam>
            <param name="dataModel">Model instance to operate on</param>
            <param name="headers">Collection of headers to add to add to the request</param>
            <param name="responseHeaders">Delegate that can be invoked to pass along the response headers</param>
            <returns>The passed model instance</returns>
        </member>
        <member name="T:PnP.Core.PnPConstants">
            <summary>
            Support class to provide all the constants for the engine
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MicrosoftGraphBaseUrl">
            <summary>
            The string base URL of the Microsoft Graph
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MicrosoftGraphBaseUri">
            <summary>
            The base URI of the Microsoft Graph
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.GraphV1Endpoint">
            <summary>
            Graph v1 endpoint
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.GraphBetaEndpoint">
            <summary>
            Graph beta endpoint 
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MetaDataUri">
            <summary>
            The name of the URI metadata attribute
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MetaDataId">
            <summary>
            The name of the ID metadata attribute
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MetaDataType">
            <summary>
            The name of the Data Type metadata attribute
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MetaDataGraphType">
            <summary>
            The name of the Graph ODATA metadata attribute
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MetaDataEtag">
            <summary>
            The name of the ETag metadata attribute
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MetaDataGraphId">
            <summary>
            The name of the Microsoft Graph ID metadata attribute
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MetaDataRestId">
            <summary>
            The name of the REST Id metadata attribute
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MetaDataListId">
            <summary>
            The id of the list holding an item
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.MetaDataRestEntityTypeName">
            <summary>
            The name of the Entity Type Name metadata attribute
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.GraphNextLink">
            <summary>
            Next link in Microsoft Graph
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.SharePointRestListItemNextLink">
            <summary>
            Next link in SharePoint REST
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.SharePointRestMetadata">
            <summary>
            Metadata property in SharePoint REST
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.GenericRequestModuleId">
            <summary>
            Id of the generic request module
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.CustomHeadersModuleId">
            <summary>
            Id of the custom header request module
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.SPRequestGuidHeader">
            <summary>
            SPRequestGuid SharePoint REST response header
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.SPClientServiceRequestDurationHeader">
            <summary>
            SPClientServiceRequestDuration SharePoint REST response header
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.XSharePointHealthScoreHeader">
            <summary>
            X-SharePointHealthScore SharePoint REST response header
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.XSPServerStateHeader">
            <summary>
            X-SP-SERVERSTATE SharePoint REST response header
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.ContentTypeHubUrl">
            <summary>
            The string absolute path of the Content Type Hub
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.JsonSerializer_IgnoreNullValues">
            <summary>
            Cached JsonSerializerOptions for performance using IgnoreNullValues = true
            See https://github.com/dotnet/runtime/issues/38982 and https://www.meziantou.net/avoid-performance-issue-with-jsonserializer-by-reusing-the-same-instance-of-json.htm
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.JsonSerializer_IgnoreNullValues_CamelCase">
            <summary>
            Cached JsonSerializerOptions for performance using IgnoreNullValues = true and PropertyNamingPolicy = JsonNamingPolicy.CamelCase
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.JsonSerializer_WriteIndentedFalse">
            <summary>
            Cached JsonSerializerOptions for performance using WriteIndented = false
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.JsonSerializer_WriteIndentedTrue">
            <summary>
            Cached JsonSerializerOptions for performance using WriteIndented = true
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.JsonSerializer_IgnoreNullValues_StringEnumConvertor">
            <summary>
            Cached JsonSerializerOptions for performance using IgnoreNullValues = true with JsonStringEnumConverter
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.JsonSerializer_WriteIndentedFalse_CamelCase_JsonStringEnumConverter">
            <summary>
            Cached JsonSerializerOptions for performance using WriteIndented = false, CamelCase with JsonStringEnumConverter
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.JsonSerializer_PropertyNameCaseInsensitiveTrue">
            <summary>
            Cached JsonSerializerOptions for performance using PropertyNameCaseInsensitive = true
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.JsonSerializer_AllowTrailingCommasTrue">
            <summary>
            Cached JsonSerializerOptions for performance using AllowTrailingCommas = true
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.JsonSerializer_SPGuidConverter_DateTimeConverter">
            <summary>
            Cached JsonSerializerOptions for performance with SPGuidConverter and DateTimeConverter
            </summary>
        </member>
        <member name="F:PnP.Core.PnPConstants.JsonSerializer_IgnoreNullValues_SharePointRestCollectionJsonConverter_JsonStringEnumConverter">
            <summary>
            Cached JsonSerializerOptions for performance using IgnoreNullValues = true with SharePointRestCollectionJsonConverter and JsonStringEnumConverter
            </summary>
        </member>
        <member name="T:PnP.Core.PnPCoreResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ArgumentExpressionNotValid">
            <summary>
              Looks up a localized string similar to Argument expression is not valid.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_AsyncOperationError_MaxRetries">
            <summary>
              Looks up a localized string similar to Max retries of {0} reached while waiting for operation {1}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_BatchClient_BatchRequestIdNotFound">
            <summary>
              Looks up a localized string similar to Batchrequest {0} was not found in one of the current batches.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_BatchResult_BatchNotYetExecuted">
            <summary>
              Looks up a localized string similar to Cannot access the result since batch was not yet executed.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_CannotBeZero">
            <summary>
              Looks up a localized string similar to {0} cannot be 0.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_CollectionNotLoaded">
            <summary>
              Looks up a localized string similar to Please ensure you load this collection once before calling GetAllPages or GetNextPage.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ConfigurationError_CannotSetCanUseBeta">
            <summary>
              Looks up a localized string similar to The GraphAlwaysUseBeta is set to true, you can&apos;t turn off the &apos;on-demand&apos; beta support. First set GraphAlwaysUseBeta to false before turning of GraphCanUseBeta.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ConfigurationError_InvalidPnPContextConfigurationName">
            <summary>
              Looks up a localized string similar to Invalid configuration name &apos;{0}&apos; for PnPContext creation.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ContentType_ErrorObtaining">
            <summary>
              Looks up a localized string similar to Error occured on obtaining the content type.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ContentType_NoDocumentSet">
            <summary>
              Looks up a localized string similar to The specified content type is not of type &apos;Document Set&apos;. Impossible to return this as &apos;Document Set&apos;.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ContentType_WrongDocumentSetId">
            <summary>
              Looks up a localized string similar to The specified content type is not of type &apos;Document Set&apos;. Start your ID with 0x0120D520.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_CreatePnPContext_AuthenticationProvider">
            <summary>
              Looks up a localized string similar to There was no authentication provider setup, please ensure you define an authentication provider via configuration or via code. See https://pnp.github.io/pnpcore/using-the-sdk/readme.html for more details.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_CreatePnPContext_GroupId">
            <summary>
              Looks up a localized string similar to Please provide the id (Guid) of a the Microsoft 365 group you want to create a PnPContext for.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_CSOM_MalformedDateTime">
            <summary>
              Looks up a localized string similar to Provided CSOM datetime ({0}) is malformed.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Feature_AlreadyActivated">
            <summary>
              Looks up a localized string similar to Feature was already activated.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Feature_CannotDeactivateNotActive">
            <summary>
              Looks up a localized string similar to Feature was not activated, nothing to deactive.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_GetListByServerRelativeUrl_ServerRelativeUrl">
            <summary>
              Looks up a localized string similar to You need to provide a value for the ServerRelativeUrl parameter.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_GraphBetaNotAllowed">
            <summary>
              Looks up a localized string similar to Adding this entity requires the use of the Graph beta endpoint.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_InstanceWasDeleted">
            <summary>
              Looks up a localized string similar to This model instance was deleted, you can&apos;t use it anymore.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Invalid_WebhookExpiration">
            <summary>
              Looks up a localized string similar to The specified expiration date is invalid. Should be greater than today and within {0} months.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_InvalidArgumentsNumber">
            <summary>
              Looks up a localized string similar to Invalid arguments number.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_InvalidDomainModelConfiguration">
            <summary>
              Looks up a localized string similar to Invalid domain model configuration for entity {0}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_InvalidNextPage">
            <summary>
              Looks up a localized string similar to There&apos;s no valid next page metadata available.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_InvalidOperation_NotAsyncQueryableSource">
            <summary>
              Looks up a localized string similar to Queryable source does not support async.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_InvalidSPOResource">
            <summary>
              Looks up a localized string similar to The {0} is not a resource from the SharePoint site {1}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_InvalidTResultType">
            <summary>
              Looks up a localized string similar to Expected TResult of type {0} or {1}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_InvalidTypeForCollection">
            <summary>
              Looks up a localized string similar to Invalid type for object to add to the collection.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_InvalidTypeForFilter">
            <summary>
              Looks up a localized string similar to Invalid type for the filter object.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Json_ArrayOutOfBoundaries">
            <summary>
              Looks up a localized string similar to The requested index is out of the JSON array boundaries.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Json_EmptyArray">
            <summary>
              Looks up a localized string similar to The expected JSON array is empty.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Json_Unexpected">
            <summary>
              Looks up a localized string similar to Unexpected JSON.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_LinqError_MissingValue">
            <summary>
              Looks up a localized string similar to Missing value for {0} in {1}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ListItemAdd_WrongInternalFieldName">
            <summary>
              Looks up a localized string similar to There was an exception while writing field {0}. Verify you&apos;re using the correct InternalName value for the field you want to write to..
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ListItemUpdate_NoFieldsLoaded">
            <summary>
              Looks up a localized string similar to Please ensure your list Fields are loaded before getting list data. E.g. await list.LoadAsync(p =&gt; p.Fields.QueryProperties(p =&gt; p.InternalName, p =&gt; p.FieldTypeKind, p =&gt; p.TypeAsString, p =&gt; p.Title)).
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ListItemUpdate_NoTaxonomyNoteField">
            <summary>
              Looks up a localized string similar to Could not locate hidden taxonomy multivalue note field.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_MailHandler_NoRecipient">
            <summary>
              Looks up a localized string similar to At least one recipient is needed before a mail can be send.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_MissingAddApiHandler">
            <summary>
              Looks up a localized string similar to Adding requires the implementation of an AddApiCallHandler handler returning an add ApiCall.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ModelMetadataIncorrect_MissingClassMapping">
            <summary>
              Looks up a localized string similar to Each domain model object must be decorated with a ClassMapping attribute.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ModelMetadataIncorrect_MissingConcreteTypeAttribute">
            <summary>
              Looks up a localized string similar to There was no instantiatable ConcreteType defined on the {0} interface.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ModelMetadataIncorrect_MissingGetMapping">
            <summary>
              Looks up a localized string similar to Specify the GraphGet/GraphGetLinq field of the ClassMapping property.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ModelMetadataIncorrect_MissingGraphName">
            <summary>
              Looks up a localized string similar to GraphName was not set.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_CantPromoteHomePageAsNews">
            <summary>
              Looks up a localized string similar to You can&apos;t promote a home page as news article.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_CantUseFullWidthSection">
            <summary>
              Looks up a localized string similar to You can&apos;t use a OneColumnFullWidth section in this site template ({0}).
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_ControlNotAllowedInFullWidthSection">
            <summary>
              Looks up a localized string similar to You cannot host text controls inside a one column full width section, only an image web part or hero web part are allowed.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_InvalidZoneEmphasis">
            <summary>
              Looks up a localized string similar to The zoneEmphasis value needs to be between 0 and 3.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_LayoutUndetermined">
            <summary>
              Looks up a localized string similar to Page layout type could not be determined for this page.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_ListItemNotLoaded">
            <summary>
              Looks up a localized string similar to You first need to save the page before you check for the &apos;{0}&apos; property.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_NoClientSideComponentsRetrieved">
            <summary>
              Looks up a localized string similar to No client side components could be returned for this web...should not happen but it did....
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_PageCannotBePromotedAsNews">
            <summary>
              Looks up a localized string similar to You can only promote article and repost pages as news article.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_PageWasNotSaved">
            <summary>
              Looks up a localized string similar to Page {0} was not loaded/saved to SharePoint and therefore can&apos;t be deleted.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_VerticalColumnFullWidthSectionExists">
            <summary>
              Looks up a localized string similar to You already have a full width section on this page, you can&apos;t add a section with vertical column.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_VerticalColumnSectionExists">
            <summary>
              Looks up a localized string similar to You can only have one section with a vertical column on a page.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Page_VerticalColumnSectionExistsNoFullWidth">
            <summary>
              Looks up a localized string similar to You already have a section with vertical column on this page, you can&apos;t add a full width section.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_PnPContext_EmptyConfiguration">
            <summary>
              Looks up a localized string similar to Please provide a configuration value via the {0} parameter.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_PnPContext_InvalidConfiguration">
            <summary>
              Looks up a localized string similar to The passed configuration &apos;{0}&apos; does not exist.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_PropertyDoesNotExist">
            <summary>
              Looks up a localized string similar to Property {0} does not exist in this entity.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_PropertyNotLoaded">
            <summary>
              Looks up a localized string similar to Property {0} was not yet loaded.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_PropertyNotLoaded_List">
            <summary>
              Looks up a localized string similar to Please first fetch this list from SharePoint before doing operations on it.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_PropertyNotLoaded_NestedProperties">
            <summary>
              Looks up a localized string similar to Loading nested properties (e.g. RootFolder.ServerRelativeUrl) is not supported, instead you can use RootFolder.QueryProperties(p =&gt; p.ServerRelativeUrl)..
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_PropertyNotLoaded_OnlyQueryPropertiesSupported">
            <summary>
              Looks up a localized string similar to Only the &apos;QueryProperties&apos; method is supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_RetrievingContentTypeHubSiteId">
            <summary>
              Looks up a localized string similar to Error occured on retrieving the site id from the content type hub.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_RoleDefinition_NotFound">
            <summary>
              Looks up a localized string similar to Role definition &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_SendMailDelegated">
            <summary>
              Looks up a localized string similar to Sending a mail through the &apos;GraphUser&apos; interface is only valid with the application permission authentication flow.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_SendMailMe">
            <summary>
              Looks up a localized string similar to Sending a mail through &apos;Me&apos; is only valid with delegated authentication flow.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ServiceException_BatchMaxRetries">
            <summary>
              Looks up a localized string similar to Requests inside a batch reached their max retry count of {0}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_ServiceException_MaxRetries">
            <summary>
              Looks up a localized string similar to Request reached it&apos;s max retry count of {0}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_SharePointRest_UnexpectedResult">
            <summary>
              Looks up a localized string similar to Unexpected HTTP result value in returned batch response.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_TeamsAsyncOperationError_MaxRetries">
            <summary>
              Looks up a localized string similar to Max retries of {0} reached while waiting for Teams operation {1}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Test_MissingPropertiesFile">
            <summary>
              Looks up a localized string similar to Test [{0}] is missing properties file {1}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Test_MissingResponseFile">
            <summary>
              Looks up a localized string similar to Test [{0}] is missing response file {1}. Request key was {2}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_UnresolvedTokens">
            <summary>
              Looks up a localized string similar to Unresolved tokens found in API call {0}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_AddingContentTypesToListOnContentTypeHub">
            <summary>
              Looks up a localized string similar to You cannot add a content type to a list on the Content Type Hub.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_AddingContentTypeToList">
            <summary>
              Looks up a localized string similar to Adding new content types on a list is not possible, use the AddAvailableContentType method to add an existing site content type.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_BackgroundImageHeaderIsNotOfTypeExtended">
            <summary>
              Looks up a localized string similar to You can only set the background image when the header layout is set to Extended..
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_BatchFieldUpdateAndPushChangesForContentTypeHub">
            <summary>
              Looks up a localized string similar to Using the UpdateAndPushChangesBatch methods on ContentTypeHub fields is not supported. If you happen to need push updated fields to lists inside the content type hub then directly connect to the content type hub.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_CannotAddBatch">
            <summary>
              Looks up a localized string similar to Batch could not be added to list of batches.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_CollectionModelIsNotQueryable">
            <summary>
              Looks up a localized string similar to The model in the queried collection does not implement the IQueryableDataModel interface.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_Criteria">
            <summary>
              Looks up a localized string similar to Criteria {0} is not supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_Expression">
            <summary>
              Looks up a localized string similar to Expression {0} is not valid.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ExpressionBody">
            <summary>
              Looks up a localized string similar to Expression {0} is not supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ExpressionConstantNotValid">
            <summary>
              Looks up a localized string similar to Constant {0} is of a non supported type ({1}).
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ExpressionConstantOnlyTypes">
            <summary>
              Looks up a localized string similar to Constant {0} is invalid. Only {1} and {2} are supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ExpressionMustReturnBoolean">
            <summary>
              Looks up a localized string similar to Expression {0} is not valid because it must return a boolean result.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ExpressionOnlyIndexer">
            <summary>
              Looks up a localized string similar to Expression {0} is not supported. Only calls to {1} indexer are supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ExpressionOnlyMembers">
            <summary>
              Looks up a localized string similar to Expression {0} is invalid. Only calls to members {1} are supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ExpressionOnlyMethods">
            <summary>
              Looks up a localized string similar to Expression {0} is invalid. Only calls to methods {1} are supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ExpressionOnlyTypes">
            <summary>
              Looks up a localized string similar to Expression {0} is not supported. Only {1} and {2} are supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ExpressionType">
            <summary>
              Looks up a localized string similar to Expression type {0} is not supported inside filtering expressions.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_Extension_Converting_File">
            <summary>
              Looks up a localized string similar to It is not allowed to convert a file with the extension {0} to {1}. Supported extensions are: {2}..
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ExtraGet">
            <summary>
              Looks up a localized string similar to Loading the {0} property requires an extra GET request ({1}) which is not supported when using nested QueryProperties methods.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_FailedAddingTermRelation">
            <summary>
              Looks up a localized string similar to Adding a relationship can only be done starting from a term.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_FileServerRelativeUrlNotLoaded">
            <summary>
              Looks up a localized string similar to Ensure you&apos;ve requested the &apos;FileServerRelativeUrl&apos; property before you call UpdateAsync() on a file&apos;s properties.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_FollowRequest">
            <summary>
              Looks up a localized string similar to The Follow request is not supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_GraphUserOnSharePoint">
            <summary>
              Looks up a localized string similar to You can&apos;t call AsGraphUserAsync on a SharePoint user with principal type different than User or SecurityGroup.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_GraphUserOnSharePointNoGraphId">
            <summary>
              Looks up a localized string similar to You can&apos;t call AsGraphUserAsync on a SharePoint user without the GraphId property requested and populated.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_InteractiveRequestBatch">
            <summary>
              Looks up a localized string similar to Interactive requests cannot be grouped together, execute them one by one.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_MemberType">
            <summary>
              Looks up a localized string similar to Member of type {0} is not supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_Method">
            <summary>
              Looks up a localized string similar to The method &apos;{0}&apos; is not supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_MissingSharePointPrincipal">
            <summary>
              Looks up a localized string similar to You need to provide the user via it&apos;s principal when adding a list item or when updating it via one of the Update() methods. Updating using SystemUpdate() or SystemUpdateOverwriteVersion() do work with just the user id value.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_NodeType">
            <summary>
              Looks up a localized string similar to Node of type {0} of expression {1} is not supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_NoIQueryableDataModel">
            <summary>
              Looks up a localized string similar to The used model ({0}) does not implement IQueryableDataModel.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_NotAnImageMimeType">
            <summary>
              Looks up a localized string similar to Image is not a supported mime type: image/png, image/jpeg, image/gif, image/bmp, image/tiff.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_PagePublishingOnSubWeb">
            <summary>
              Looks up a localized string similar to Page publish scheduling only works on the pages library in the root web of a site collection.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_Projection">
            <summary>
              Looks up a localized string similar to The projection is not supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_PublishingContentTypeOutsideContentTypeHub">
            <summary>
              Looks up a localized string similar to This function can only be called on the content type hub.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_QueryPropertiesUse">
            <summary>
              Looks up a localized string similar to This function can be called from a LINQ query only.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_Selector">
            <summary>
              Looks up a localized string similar to The selector type is not supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_SharePointUserOnGraph">
            <summary>
              Looks up a localized string similar to You can&apos;t call AsSharePointUserAsync on a Graph user without the UserPrincipalProperty requested and populated.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_SiteIsAlreadyHubSite">
            <summary>
              Looks up a localized string similar to Site is already registered as a hub site..
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_SiteIsAlreadyPartOfAHubSite">
            <summary>
              Looks up a localized string similar to Site is already part of a hub site..
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_SiteIsNotAHubSite">
            <summary>
              Looks up a localized string similar to Site is not a hub site..
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_SkipOnItems">
            <summary>
              Looks up a localized string similar to Skip on items&apos;s list is not supported. Please consider the usage of CAML query.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_UnaryOperator">
            <summary>
              Looks up a localized string similar to The unary operator &apos;{0}&apos; is not supported.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_ViaBatch">
            <summary>
              Looks up a localized string similar to You cannot do a batch add of a model to a modelcollection that was not yet requested. Common reasons are adding an item and using that same item in a single batch.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Unsupported_WebDeleteIsInteractive">
            <summary>
              Looks up a localized string similar to You can&apos;t delete webs in batch, use the DeleteAsync() or Delete() methods.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_WebTemplate_NotFound">
            <summary>
              Looks up a localized string similar to A site template with the name {0} could not be found.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Exception_Xml_InvalidXmlCharacter">
            <summary>
              Looks up a localized string similar to Invalid character in Xml String. Chr {0} is illegal.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Log_Debug_JsonCannotMapField">
            <summary>
              Looks up a localized string similar to Field {0} could not be mapped when converting from JSON.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Log_Debug_LogMetrics">
            <summary>
              Looks up a localized string similar to Method &apos;{0}&apos; | File &apos;{1}&apos; | Line Number: {2}  | Started: {3} | Ended {4} | Elapsed {5} ms.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Log_Debug_OperationCompleted">
            <summary>
              Looks up a localized string similar to Operation {0} completed.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Log_Information_ApiCallCancelled">
            <summary>
              Looks up a localized string similar to API call {0} cancelled: {1}.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Log_Information_NoChangesSkipSystemUpdate">
            <summary>
              Looks up a localized string similar to No changes so skipping SystemUpdate.
            </summary>
        </member>
        <member name="P:PnP.Core.PnPCoreResources.Log_Information_OperationNotReady">
            <summary>
              Looks up a localized string similar to Operation {0} not ready yet. Status = {1}. Waiting for {2} seconds, attempt number {3}.
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.FilteringConcatOperator">
            <summary>
            Enumeration of logical concat operators for queries
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.FilteringConcatOperator.AND">
            <summary>
            Logical AND for query items in query groups
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.FilteringConcatOperator.OR">
            <summary>
            Logical OR for query items in query groups
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.FilteringCriteria">
            <summary>
            Enumeration of filtering criteria for queries
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.FilteringCriteria.Equal">
            <summary>
            Corresponds to the = operator
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.FilteringCriteria.NotEqual">
            <summary>
            Corresponds to the != operator
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.FilteringCriteria.GreaterThan">
            <summary>
            Corresponds to the > operator
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.FilteringCriteria.GreaterThanOrEqual">
            <summary>
            Corresponds to the >= operator
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.FilteringCriteria.LessThan">
            <summary>
            Corresponds to the &lt; operator
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.FilteringCriteria.LessThanOrEqual">
            <summary>
            Corresponds to the &lt;= operator
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.FilteringCriteria.Not">
            <summary>
            Corresponds to the ! operator
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.ODataTargetPlatform">
            <summary>
            Defines the target platform for the query
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.ODataTargetPlatform.Graph">
            <summary>
            Microsoft Graph (primary choice)
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.ODataTargetPlatform.SPORest">
            <summary>
            Microsoft SharePoint Online REST API (fallback)
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.OrderByDirection">
            <summary>
            Enumeration of the ordering criteria for sorting results
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.OrderByDirection.Asc">
            <summary>
            Ascending sorting
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.OrderByDirection.Desc">
            <summary>
            Descending sorting
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.BaseQueryProvider">
            <summary>
            Base abstract class to implement the basic logic of an IQueryProvider
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.BaseQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Creates a query for the provided expression
            </summary>
            <typeparam name="TResult">Result type of the query</typeparam>
            <param name="expression">Expression that will be translated into a query</param>
            <returns>Created query</returns>
        </member>
        <member name="M:PnP.Core.QueryModel.BaseQueryProvider.AddToBatchAsync``1(System.Linq.Expressions.Expression,PnP.Core.Services.Batch)">
            <summary>
            Adds the expression to the batch specified
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="expression"></param>
            <param name="batch"></param>
        </member>
        <member name="M:PnP.Core.QueryModel.BaseQueryProvider.AddToCurrentBatchAsync``1(System.Linq.Expressions.Expression)">
            <summary>
            Adds the expression to the current batch
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="expression"></param>
        </member>
        <member name="M:PnP.Core.QueryModel.BaseQueryProvider.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Executes the provided expression
            </summary>
            <typeparam name="TResult">Resulting type of the linq expression execution</typeparam>
            <param name="expression">Expression to execute</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Loaded model instace of type <typeparamref name="TResult"/></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.BaseQueryProvider.Execute``1(System.Linq.Expressions.Expression)">
            <summary>
            Executes the provided expression
            </summary>
            <typeparam name="TResult">Resulting type of the linq expression execution</typeparam>
            <param name="expression">Expression to execute</param>
            <returns>Loaded model instace of type <typeparamref name="TResult"/></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.BaseQueryProvider.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executes the provided expression
            </summary>
            <param name="expression">Expression to execute</param>
        </member>
        <member name="M:PnP.Core.QueryModel.BaseQueryProvider.CreateQuery(System.Linq.Expressions.Expression)">
            <summary>
            Creates a query for the provided expression
            </summary>
            <param name="expression">Expression to create a query for</param>        
        </member>
        <member name="M:PnP.Core.QueryModel.BaseQueryProvider.ExecuteObjectAsync(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Executes the provided expression
            </summary>
            <param name="expression">Expression to execute</param>
            <param name="token">Token for cancellation</param>
        </member>
        <member name="T:PnP.Core.QueryModel.IAsyncQueryProvider">
            <summary>
                <para>
                    Defines method to execute queries asynchronously that are described by an IQueryable object.
                </para>
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.IAsyncQueryProvider.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Executes the strongly-typed query represented by a specified expression tree asynchronously.
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.IAsyncQueryProvider.AddToBatchAsync``1(System.Linq.Expressions.Expression,PnP.Core.Services.Batch)">
            <summary>
            Adds the expression to the specified batch
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="expression"></param>
            <param name="batch"></param>
        </member>
        <member name="M:PnP.Core.QueryModel.IAsyncQueryProvider.AddToCurrentBatchAsync``1(System.Linq.Expressions.Expression)">
            <summary>
            Adds the expression to the current batch
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="expression"></param>
        </member>
        <member name="T:PnP.Core.QueryModel.QueryableExtensions">
            <summary>
                Useful extension methods for use with Entity Framework LINQ queries.
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.AsBatchAsync``1(System.Linq.IQueryable{``0})">
            <summary>
            Adds the query to the current batch
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.AsBatch``1(System.Linq.IQueryable{``0})">
            <summary>
            Adds the query to the current batch
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.AsBatchAsync``1(System.Linq.IQueryable{``0},PnP.Core.Services.Batch)">
            <summary>
            Adds the query to the specified batch
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="batch"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.AsBatch``1(System.Linq.IQueryable{``0},PnP.Core.Services.Batch)">
            <summary>
            Adds the query to the specified batch
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="batch"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.QueryProperties``1(PnP.Core.Model.ISupportQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Extension method to declare a field/metadata property to load while executing the REST query
            </summary>
            <typeparam name="TResult">The type of the target entity</typeparam>
            <param name="source">The collection of items to load the field/metadata from</param>
            <param name="selectors">A selector for a field/metadata</param>
            <returns>The resulting collection</returns>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.QueryProperties``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Extension method to declare the fields/metadata properties to load while executing the REST query
            </summary>
            <typeparam name="TResult">The type of the target entity</typeparam>
            <param name="source">The collection of items to load fields/metadata from</param>
            <param name="selectors">An array of selectors for the fields/metadata</param>
            <returns>The resulting collection</returns>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the first element of a sequence.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to return the first element of. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns>
            A task that represents the asynchronous operation.
            The task result contains the first element in <paramref name="source" />.
            </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is <see langword="null" />. </exception>
            <exception cref="T:System.InvalidOperationException"> <paramref name="source" /> contains no elements. </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the first element of a sequence that satisfies a specified condition.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to return the first element of. </param>
            <param name="predicate"> A function to test each element for a condition. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns>
            A task that represents the asynchronous operation.
            The task result contains the first element in <paramref name="source" /> that passes the test in
            <paramref name="predicate" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                <para>
                    No element satisfies the condition in <paramref name="predicate" />
                </para>
                <para>
                    -or -
                </para>
                <para>
                    <paramref name="source" /> contains no elements.
                </para>
            </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the first element of a sequence, or a default value if the sequence contains no elements.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to return the first element of. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns>
            A task that represents the asynchronous operation.
            The task result contains <see langword="default" /> ( <typeparamref name="TSource" /> ) if
            <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.
            </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is <see langword="null" />. </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the first element of a sequence that satisfies a specified condition
            or a default value if no such element is found.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to return the first element of. </param>
            <param name="predicate"> A function to test each element for a condition. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns>
            A task that represents the asynchronous operation.
            The task result contains <see langword="default" /> ( <typeparamref name="TSource" /> ) if <paramref name="source" />
            is empty or if no element passes the test specified by <paramref name="predicate" /> ; otherwise, the first
            element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it
            asynchronously
            according to a specified key selector function.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <typeparam name="TKey"> The type of the key returned by <paramref name="keySelector" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from. </param>
            <param name="keySelector"> A function to extract a key from each element. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns>
            A task that represents the asynchronous operation.
            The task result contains a <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains selected keys and values.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it
            asynchronously
            according to a specified key selector function and a comparer.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <typeparam name="TKey"> The type of the key returned by <paramref name="keySelector" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from. </param>
            <param name="keySelector"> A function to extract a key from each element. </param>
            <param name="comparer"> An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns>
            A task that represents the asynchronous operation.
            The task result contains a <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains selected keys and values.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it
            asynchronously
            according to a specified key selector and an element selector function.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <typeparam name="TKey"> The type of the key returned by <paramref name="keySelector" />. </typeparam>
            <typeparam name="TElement"> The type of the value returned by <paramref name="elementSelector" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from. </param>
            <param name="keySelector"> A function to extract a key from each element. </param>
            <param name="elementSelector"> A transform function to produce a result element value from each element. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns>
            A task that represents the asynchronous operation.
            The task result contains a <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains values of type
            <typeparamref name="TElement" /> selected from the input sequence.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it
            asynchronously
            according to a specified key selector function, a comparer, and an element selector function.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <typeparam name="TKey"> The type of the key returned by <paramref name="keySelector" />. </typeparam>
            <typeparam name="TElement"> The type of the value returned by <paramref name="elementSelector" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from. </param>
            <param name="keySelector"> A function to extract a key from each element. </param>
            <param name="elementSelector"> A transform function to produce a result element value from each element. </param>
            <param name="comparer"> An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns>
            A task that represents the asynchronous operation.
            The task result contains a <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains values of type
            <typeparamref name="TElement" /> selected from the input sequence.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.ForEachAsync``1(System.Linq.IQueryable{``0},System.Action{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously enumerates the query results and performs the specified action on each element.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="T"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to enumerate. </param>
            <param name="action"> The action to perform on each element. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns> A task that represents the asynchronous operation. </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> or <paramref name="action" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a <see cref="T:System.Collections.Generic.List`1" /> from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it
            asynchronously.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to create a list from. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns>
            A task that represents the asynchronous operation.
            The task result contains a <see cref="T:System.Collections.Generic.List`1" /> that contains elements from the input sequence.
            </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is <see langword="null" />. </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates an array from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it asynchronously.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to create an array from. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns>
            A task that represents the asynchronous operation.
            The task result contains an array that contains elements from the input sequence.
            </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is <see langword="null" />. </exception>
            <exception cref="T:System.OperationCanceledException"> If the <see cref="T:System.Threading.CancellationToken"/> is canceled. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.AsAsyncEnumerable``1(System.Linq.IQueryable{``0})">
            <summary>
            Returns an <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> which can be enumerated asynchronously.
            </summary>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use <see langword="await" /> to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source"> An <see cref="T:System.Linq.IQueryable`1" /> to enumerate. </param>
            <returns> The query results. </returns>
            <exception cref="T:System.InvalidOperationException"> <paramref name="source" /> is <see langword="null" />. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is not a <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" />. </exception>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableExtensions.AsRequested``1(PnP.Core.Model.IDataModelCollection{``0})">
            <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> which can be enumerated without executing an actual LINQ query on the target data provider.
            </summary>
            <typeparam name="TSource"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source"> An <see cref="T:PnP.Core.Model.IDataModelCollection`1" /> to enumerate. </param>
            <returns> The query results. </returns>
            <exception cref="T:System.InvalidOperationException"> <paramref name="source" /> is <see langword="null" />. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is not a <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" />. </exception>
        </member>
        <member name="T:PnP.Core.QueryModel.QueryableMethods">
            <summary>
            A class that provides reflection metadata for translatable LINQ methods.
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.QueryableMethods.FirstWithoutPredicate">
            <summary>
            The <see cref="T:System.Reflection.MethodInfo" /> for <see cref="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})" />
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.QueryableMethods.FirstWithPredicate">
            <summary>
            The <see cref="T:System.Reflection.MethodInfo" /> for <see cref="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.QueryableMethods.FirstOrDefaultWithoutPredicate">
            <summary>
            The <see cref="T:System.Reflection.MethodInfo" /> for <see cref="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.QueryableMethods.FirstOrDefaultWithPredicate">
            <summary>
            The <see cref="T:System.Reflection.MethodInfo" /> for <see cref="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.QueryableMethods.QueryProperties">
            <summary>
            The <see cref="T:System.Reflection.MethodInfo" /> for <see cref="M:PnP.Core.QueryModel.QueryableExtensions.QueryProperties``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])" />
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.BaseQueryableDataModelCollection`1">
            <summary>
            Base abstract type for any LINQ IQueryable collection of the Domain Model
            In the real model, could inherit from <see cref="T:PnP.Core.Model.BaseDataModelCollection`1"/>
            and implement <see cref="T:System.Linq.IQueryable`1"/>
            </summary>
            <typeparam name="TModel">The Type of the collection</typeparam>
        </member>
        <member name="T:PnP.Core.QueryModel.FilterItem">
            <summary>
            Defines a filtering criteria item
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.FilterItem.Field">
            <summary>
            The name of the field for the filtering criteria
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.FilterItem.Criteria">
            <summary>
            The filtering criteria. Default: Equal.
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.FilterItem.Value">
            <summary>
            The actual value for the filtering criteria
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.FiltersGroup">
            <summary>
            Defines a group of filters
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.FiltersGroup.#ctor">
            <summary>
            Constructs a group of filters
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.FiltersGroup.#ctor(System.Collections.Generic.List{PnP.Core.QueryModel.ODataFilter})">
            <summary>
            Constructs a group of filters based upon the provide list of filters
            </summary>
            <param name="filters">List of <see cref="T:PnP.Core.QueryModel.ODataFilter"/> filters</param>
        </member>
        <member name="P:PnP.Core.QueryModel.FiltersGroup.Filters">
            <summary>
            
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.ODataFilter">
            <summary>
            Interface to define the basic functionalities of a filtering item (either a single item or a group of items)
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.ODataFilter.ConcatOperator">
            <summary>
            The concatenation operator between the current filter item and the next one in the chain, within the current filtering group. Default: AND.
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.OrderByItem">
            <summary>
            Defines a single sorting item
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.OrderByItem.Field">
            <summary>
            The name of the field to sort by
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.OrderByItem.Direction">
            <summary>
            The direction (Ascending/Descending) for the sorting criteria. Default: Ascending.
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.QueryableDataModelCollection`1">
            <summary>
            Base type for any LINQ IQueryable collection of the Domain Model
            In the real model, could inherit from <see cref="T:PnP.Core.Model.BaseDataModelCollection`1"/>
            and implement <see cref="T:System.Linq.IQueryable`1"/>
            </summary>
            <typeparam name="TModel">The Type of the collection</typeparam>
        </member>
        <member name="M:PnP.Core.QueryModel.QueryableDataModelCollection`1.ToString">
            <summary>
            Returns OData query string for the current expression
            </summary>
        </member>
        <member name="T:PnP.Core.QueryModel.ODataQuery`1">
            <summary>
            Internal class to define an OData query with an in-memory abstract model
            </summary>
            <typeparam name="TModel">Defines the main type targeted by the query</typeparam>
            <remarks>
            We support what is defined here: https://docs.microsoft.com/en-us/sharepoint/dev/sp-add-ins/use-odata-query-operations-in-sharepoint-rest-requests#odata-query-operators-supported-in-the-sharepoint-rest-service
            except the substrinof and startswith functions
            </remarks>
        </member>
        <member name="P:PnP.Core.QueryModel.ODataQuery`1.Top">
            <summary>
            Property corresponding to the $top OData query option
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.ODataQuery`1.Skip">
            <summary>
            Property corresponding to the $skip OData query option
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.ODataQuery`1.Filters">
            <summary>
            Property corresponding to the $filter OData query option
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.ODataQuery`1.OrderBy">
            <summary>
            Property corresponding to the $orderby OData query option
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.ODataQuery`1.Fields">
            <summary>
            Returns the list of fields to load
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.ODataQuery`1.ToQueryString(PnP.Core.QueryModel.ODataTargetPlatform)">
            <summary>
            Converts the in-memory OData query representation into an actual set of querystring OData options
            </summary>
            <param name="targetPlatform">Defines the target platform for the OData query</param>
            <returns>The OData querystring for the current query</returns>
        </member>
        <member name="M:PnP.Core.QueryModel.ODataQuery`1.GetOrderBy(PnP.Core.QueryModel.ODataTargetPlatform,System.Boolean)">
            <summary>
            Returns the OData $orderby clause
            </summary>
            <param name="targetPlatform"></param>
            <param name="urlEncode"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.ODataQuery`1.GetFilters(PnP.Core.QueryModel.ODataTargetPlatform,System.Boolean)">
            <summary>
            Returns the OData $filter clause
            </summary>
            <param name="targetPlatform"></param>
            <param name="urlEncode"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.ODataQuery`1.TranslateFieldName(System.String,PnP.Core.QueryModel.ODataTargetPlatform)">
            <summary>
            Private method to translate the query field toward the target platform
            </summary>
            <param name="fieldName"></param>
            <param name="targetPlatform"></param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.QueryModel.ODataUtilities">
            <summary>
            Utility class
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.ODataUtilities.ConvertToString(System.Object)">
            <summary>
            Convert a value to a valid string formatted for OData. String values are quoted and escaped
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.QueryModel.BaseDataModelExtensions">
            <summary>
            Class holding data model extension methods
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.BaseDataModelExtensions.AndThen``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
            Chains async calls. See https://stackoverflow.com/a/52739551 for more information
            </summary>
            <typeparam name="TIn">Input task</typeparam>
            <typeparam name="TOut">Output task</typeparam>
            <param name="inputTask">Async operatation to start from</param>
            <param name="mapping">Async operation to run next</param>
            <returns>Task outcome from the ran async operation</returns>
        </member>
        <member name="T:PnP.Core.QueryModel.DataModelQueryProvider`1">
            <summary>
            Concrete implementation of an IQueryProvider for the Domain Model
            </summary>
            <typeparam name="TModel">The Type of the Domain Model object that the IQueryProvider supports</typeparam>
        </member>
        <member name="F:PnP.Core.QueryModel.DataModelQueryProvider`1.queryService">
            <summary>
            The internal Query Service used to execute the actual queries
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.DataModelQueryProvider`1.#ctor(PnP.Core.QueryModel.DataModelQueryService{`0})">
            <summary>
            Creates a new instance of the IQueryProvider based on an external Query Service
            </summary>
            <param name="queryService"></param>
        </member>
        <member name="M:PnP.Core.QueryModel.DataModelQueryProvider`1.Translate(System.Linq.Expressions.Expression)">
            <summary>
            Internal method to execute the translation of the query expression 
            into an actual query text for the target Query Service
            </summary>
            <param name="expression">The expression to translate</param>
            <returns>The expression translated into the actual query text for the target Query Service</returns>
        </member>
        <member name="M:PnP.Core.QueryModel.DataModelQueryService`1.#ctor">
            <summary>
            Protected default constructor, to force creation using
            the PnPContext instance
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.DataModelQueryService`1.#ctor(PnP.Core.Services.PnPContext,PnP.Core.Model.IDataModelParent,System.String)">
            <summary>
            Constructor based on a PnPContext instance
            </summary>
            <param name="pnPContext">The PnPContext instance to use for executing the queries</param>
            <param name="parent">The parent Domain Model object for the current query</param>
            <param name="memberName">Optional name of the member behind this query service</param>
        </member>
        <member name="T:PnP.Core.QueryModel.ExpressionNormalizer">
            <summary>
            Translates bool expressions into normal form for eaiser manipulation later on when building REST queries based on LINQ expression. <br/><br/>
            <b>Examples:</b> <br/>
            <list type="bullet">
            <item><para> <code>w.Contains("smth") -> w.Contains("smth") == true</code></para></item>
            <item><para> <code>!w.Contains("smth") and w.Title == "smth" and w.HasData -> w.Contains("smth") == false and w.Title == "smth" and w.HasData == true</code></para></item>
            </list>
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.ExpressionNormalizer.Normalize">
            <summary>
            Initial function, which normalizes the expression
            </summary>
            <returns>New normalized version of the expresion or initial expression, if it's already normalized</returns>
        </member>
        <member name="M:PnP.Core.QueryModel.ExpressionNormalizer.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Converts l.Contains("smth") to explicit BinaryExpression, ie. <code> l.Contains("smth") == true </code>
            </summary>
            <param name="body">The initial <see cref="T:System.Linq.Expressions.MethodCallExpression"/></param>
            <returns>New <see cref="T:System.Linq.Expressions.BinaryExpression"/> if conversion is possible</returns>
        </member>
        <member name="M:PnP.Core.QueryModel.ExpressionNormalizer.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Converts l.HasSmth to explicit BinaryExpression, ie.<code> l.HasSmth == true </code>
            </summary>
            <param name="body">The initial <see cref="T:System.Linq.Expressions.MemberExpression"/></param>
            <returns>New <see cref="T:System.Linq.Expressions.BinaryExpression"/> if conversion is possible</returns>
        </member>
        <member name="M:PnP.Core.QueryModel.ExpressionNormalizer.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Converts <see cref="T:System.Linq.Expressions.UnaryExpression"/> to the <see cref="T:System.Linq.Expressions.BinaryExpression"/> by examining operands.
            </summary>
            <param name="unaryExpression"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.ExpressionNormalizer.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            If current expression is not normalized, tries to normalize left and right part of the <see cref="T:System.Linq.Expressions.BinaryExpression"/>
            </summary>
            <param name="binaryExpression">Initial <see cref="T:System.Linq.Expressions.BinaryExpression"/></param>
            <returns>New <see cref="T:System.Linq.Expressions.BinaryExpression"/> where left and right parts are normalized</returns>
        </member>
        <member name="M:PnP.Core.QueryModel.ExpressionNormalizer.CreateBinaryBoolExpression(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Creates <see cref="T:System.Linq.Expressions.BinaryExpression"/> out of a regular expression. <br/><br/>
            <b>Examples:</b> <br/>
            <list type="bullet">
            <item><para> <code>w.Contains("smth") -> w.Contains("smth") == true</code></para></item>
            <item><para> <code>w.HasData -> w.HasData == true</code></para></item>
            </list>
            </summary>
            <param name="body"><see cref="T:System.Linq.Expressions.Expression"/> instance, wil be used as a left side of the <see cref="T:System.Linq.Expressions.BinaryExpression"/></param>
            <param name="value"><see cref="T:System.Boolean"/> value, will be used as a constant in the right side of the <see cref="T:System.Linq.Expressions.BinaryExpression"/></param>
            <returns>New <see cref="T:System.Linq.Expressions.BinaryExpression"/></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.ExpressionNormalizer.IsBoolExpression``1(System.Linq.Expressions.Expression)">
            <summary>
            Checks whether <see cref="T:System.Linq.Expressions.Expression"/> is of <typeparamref name="T"/> type and whether the return type for the expression is <see cref="T:System.Boolean"/>
            </summary>
            <typeparam name="T"><see cref="T:System.Linq.Expressions.Expression"/> to check against</typeparam>
            <param name="body"><see cref="T:System.Linq.Expressions.Expression"/> instance to check</param>
            <returns><em>true</em> if <paramref name="body"/> is of type <typeparamref name="T"/> and returns <see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:PnP.Core.QueryModel.ExpressionNormalizer.IsNormalizedBoolExpression``1(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Checks whether the left side of the <paramref name="expression"/> is of type <typeparamref name="T"/>, the return type of the right side is <see cref="T:System.Boolean"/><br/><br/>
            <b>Examples:</b> <br/>
            <list type="bullet">
            <item><para> <code>w.Contains("smth") == True -> return true;</code></para></item>
            <item><para> <code>w.Contains("smth") -> return false;</code></para></item>
            <item><para> <code>w.HasData == False -> return true;</code></para></item>
            </list>
            </summary>
            <typeparam name="T"><see cref="T:System.Linq.Expressions.Expression"/> to check against</typeparam>
            <param name="expression"><see cref="T:System.Linq.Expressions.Expression"/> instance to check</param>
            <returns>True, if <paramref name="expression"/> meets conditions</returns>
        </member>
        <member name="T:PnP.Core.QueryModel.FunctionMapping">
            <summary>
            Contains the mapping from methods/members to OData functions
            </summary>
        </member>
        <member name="F:PnP.Core.QueryModel.FunctionMapping.DefinedFunctions">
            <summary>
            List of supported functions
            </summary>
        </member>
        <member name="P:PnP.Core.QueryModel.FunctionMapping.SupportedMembers">
            <summary>
            Returns the list of supported methods and properties
            </summary>
        </member>
        <member name="M:PnP.Core.QueryModel.FunctionMapping.TryMapMember(System.Reflection.MemberInfo,System.String,System.Object[],System.String@)">
            <summary>
            Tries to map a member (method/property) and gets the OData formatted function
            </summary>
            <param name="member">The member to map</param>
            <param name="source">The source field name</param>
            <param name="arguments">The arguments used for method invocation</param>
            <param name="functionCall">The OData function call</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Services.IAuthenticationProvider">
            <summary>
            Defines the public interface that any Authentication Provider must implement
            </summary>
        </member>
        <member name="M:PnP.Core.Services.IAuthenticationProvider.AuthenticateRequestAsync(System.Uri,System.Net.Http.HttpRequestMessage)">
            <summary>
            Authenticates the specified request message.
            </summary>
            <param name="resource">Request uri</param>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to authenticate.</param>
            <returns>The task to await.</returns>
        </member>
        <member name="M:PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri,System.String[])">
            <summary>
            Gets an access token for the requested resource and scope
            </summary>
            <param name="resource">Resource to request an access token for</param>
            <param name="scopes">Scopes to request</param>
            <returns>An access token</returns>
        </member>
        <member name="M:PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri)">
            <summary>
            Gets an access token for the requested resource 
            </summary>
            <param name="resource">Resource to request an access token for</param>
            <returns>An access token</returns>
        </member>
        <member name="T:PnP.Core.Services.ILegacyAuthenticationProvider">
            <summary>
            Defines the interface that a legacy Authentication Provider must implement.
            Note: this is only meant to be used by PnP Framework, no 3rd party support will be provided.
            </summary>
        </member>
        <member name="M:PnP.Core.Services.ILegacyAuthenticationProvider.GetCookieHeader(System.Uri)">
            <summary>
            Provides the value of the Cookie header for legacy cookie-based authentication
            </summary>
            <param name="targetUrl">The URL of the target API</param>
            <returns>The string value of the Cookie header to use for cookie authentication</returns>
        </member>
        <member name="M:PnP.Core.Services.ILegacyAuthenticationProvider.GetRequestDigest">
            <summary>
            Provides the value of the Request Digest header for legacy cookie-based authentication
            </summary>
            <returns>The string value of the Request Digest header to use for cookie authentication</returns>
        </member>
        <member name="P:PnP.Core.Services.ILegacyAuthenticationProvider.RequiresCookieAuthentication">
            <summary>
            Allows to see if the authentication provider should prioritize the cookie authentication
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Builder.Configuration.PnPCoreOptions">
            <summary>
            Options for configuring PnP Core SDK
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreOptions.DisableTelemetry">
            <summary>
            Turns on/off telemetry, can be customized via configuration. Defaults to false.
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreOptions.Environment">
            <summary>
            The Microsoft 365 cloud environment that's used
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreOptions.AADTenantId">
            <summary>
            AAD tenant id, used for telemetry purposes. Can be customized via configuration
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreOptions.HttpRequests">
            <summary>
            The global HTTP requests settings
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreOptions.PnPContext">
            <summary>
            The global PnPContext options
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreOptions.Sites">
            <summary>
            The sites options
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreOptions.DefaultAuthenticationProvider">
            <summary>
            The default Authentication Provider for the sites
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsOptions">
            <summary>
            Http request global settings
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsOptions.UserAgent">
            <summary>
            User agent value, can be customized via configuration 
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsOptions.Timeout">
            <summary>
            HTTP request timeout in seconds to use when making calls to SharePoint or Microsoft Graph
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsOptions.SharePointRest">
            <summary>
            SharePoint Online REST options
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsOptions.MicrosoftGraph">
            <summary>
            Microsoft Graph REST options
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsOptions.AzureActiveDirectory">
            <summary>
            Azure AD options
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsSharePointRestOptions">
            <summary>
            SharePoint Online REST options
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsSharePointRestOptions.UseRetryAfterHeader">
            <summary>
            Use the Retry-After header for calculating the delay in case of a retry. Defaults to false
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsSharePointRestOptions.MaxRetries">
            <summary>
            When not using retry-after, how many times can a retry be made. Defaults to 10
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsSharePointRestOptions.DelayInSeconds">
            <summary>
            How many seconds to wait for the next retry attempt. Defaults to 3
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsSharePointRestOptions.UseIncrementalDelay">
            <summary>
            Use an incremental strategy for the delay: each retry doubles the previous delay time. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsSharePointRestOptions.DefaultPageSize">
            <summary>
            Defines the default page size for querying items in SharePoint REST
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsGraphOptions">
            <summary>
            Microsoft Graph REST options
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsGraphOptions.UseRetryAfterHeader">
            <summary>
            Use the Retry-After header for calculating the delay in case of a retry. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsGraphOptions.MaxRetries">
            <summary>
            When not using retry-after, how many times can a retry be made. Defaults to 10
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsGraphOptions.DelayInSeconds">
            <summary>
            How many seconds to wait for the next retry attempt. Defaults to 3
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsGraphOptions.UseIncrementalDelay">
            <summary>
            Use an incremental strategy for the delay: each retry doubles the previous delay time. Defaults to true
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsAzureActiveDirectoryOptions">
            <summary>
            Microsoft Graph REST options
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsAzureActiveDirectoryOptions.UseRetryAfterHeader">
            <summary>
            Use the Retry-After header for calculating the delay in case of a retry. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsAzureActiveDirectoryOptions.MaxRetries">
            <summary>
            When not using retry-after, how many times can a retry be made. Defaults to 10
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsAzureActiveDirectoryOptions.DelayInSeconds">
            <summary>
            How many seconds to wait for the next retry attempt. Defaults to 3
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreHttpRequestsAzureActiveDirectoryOptions.UseIncrementalDelay">
            <summary>
            Use an incremental strategy for the delay: each retry doubles the previous delay time. Defaults to true
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Builder.Configuration.PnPCoreContextOptions">
            <summary>
            Microsoft Graph global settings
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreContextOptions.GraphFirst">
            <summary>
            Controls whether the library will try to use Microsoft Graph over REST whenever that's defined in the model
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreContextOptions.GraphCanUseBeta">
            <summary>
            If true than the Graph beta endpoint is used when there's no other option, default approach stays using the v1 endpoint
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreContextOptions.GraphAlwaysUseBeta">
            <summary>
            If true than all requests to Microsoft Graph use the beta endpoint
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Builder.Configuration.PnPCoreSitesOptions">
            <summary>
            Options for configuring PnP Core SDK
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Builder.Configuration.PnPCoreSiteOptions">
            <summary>
            Options for configuring a single site in PnP Core SDK
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreSiteOptions.SiteUrl">
            <summary>
            The URL of the target site
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.Configuration.PnPCoreSiteOptions.AuthenticationProvider">
            <summary>
            The Authentication Provider
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Builder.IPnPCoreBuilder">
            <summary>
            Used to configure PnP Core SDK
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Builder.IPnPCoreBuilder.Services">
            <summary>
            Collection of services for Dependecy Injection
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Builder.PnPCoreBuilder">
            <summary>
            Used to configure PnP Core SDK
            </summary>
        </member>
        <member name="M:PnP.Core.Services.Builder.PnPCoreBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Constructor
            </summary>
            <param name="services">The services being configured.</param>
        </member>
        <member name="P:PnP.Core.Services.Builder.PnPCoreBuilder.Services">
            <summary>
            The services being configured
            </summary>
        </member>
        <member name="T:PnP.Core.Services.ApiCall">
            <summary>
            Struct that defines the API call to make
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.Type">
            <summary>
            Defines the type of API to call: SPO Rest or Microsoft Graph
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.Request">
            <summary>
            Defines the URL of the request
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.JsonBody">
            <summary>
            Defines the JSON body of the request, if any
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.CSOMRequests">
            <summary>
            List of CSOM requests for this API call
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.ReceivingProperty">
            <summary>
            Typically the JSON response will be mapped to the current model object, but sometimes a call 
            will need to be mapped to a specific property in the current model. This for example is 
            done when a property requires it's own Graph Get request.
            
            Current this property is set automatically, no need to manually fiddle with it in API call overrides!
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.RawRequest">
            <summary>
            Is this a raw request that does not require automatic parsing of the returned json?
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.RawEnumerableResult">
            <summary>
            List containing the parsed Raw results (if a collection is returned)
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.RawSingleResult">
            <summary>
            Result object from this API call (if a single result is returned)
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.RawResultsHandler">
            <summary>
            Event handler triggered to parse raw results
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.Commit">
            <summary>
            When set to true the current model item will be committed as changes are synced with the server
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.Interactive">
            <summary>
            When set to true this request will be executed interactively, so without being wrapped in a batch request
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.BinaryBody">
            <summary>
            Binary content for this API call
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.ExpectBinaryResponse">
            <summary>
            Indicates whether the call expects a binary response
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.StreamResponse">
            <summary>
            Indicates whether the response will be streamed, meaning we'll return the first bytes before all the content was downloaded
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.RemoveFromModel">
            <summary>
            Indicates if the model instance linked to this request needs to be removed from it's model collection after successful execution of this API call
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.LoadPages">
            <summary>
            Indicates if batch should support pagination and make multiple calls
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.SkipCollectionClearing">
            <summary>
            Don't clear the current collection when data is loaded
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.ExecuteRequestApiCall">
            <summary>
            Flag that indicates this ApiCall was issued from an ExecuteRequest method
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.Headers">
            <summary>
            Optional Http-Headers for Request to make
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCall.AddedViaBatchMethod">
            <summary>
            Was this API call requested via a batch method?
            </summary>
        </member>
        <member name="T:PnP.Core.Services.ApiCallRequest">
            <summary>
            Class that will be passed along during API overrides
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCallRequest.ApiCall">
            <summary>
            The actual API call to override
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCallRequest.Cancelled">
            <summary>
            Cancel this request, if for some reason the underlying API call cannot be made or makes no sense
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCallRequest.CancellationReason">
            <summary>
            Optional reason indicating why the request was cancelled
            </summary>
        </member>
        <member name="M:PnP.Core.Services.ApiCallRequest.CancelRequest">
            <summary>
            Cancel this request
            </summary>
        </member>
        <member name="M:PnP.Core.Services.ApiCallRequest.CancelRequest(System.String)">
            <summary>
            Cancel this request with a reason
            </summary>
            <param name="cancellationReason">Update cancellation reason</param>
        </member>
        <member name="P:PnP.Core.Services.ApiCallResponse.ApiCall">
            <summary>
            The API call that issued the current response
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCallResponse.BatchRequestId">
            <summary>
            The Id of the batch used to get the current response
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCallResponse.Json">
            <summary>
            Contains the json response of the request (if any)
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCallResponse.StatusCode">
            <summary>
            Contains the request http status code
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCallResponse.Headers">
            <summary>
            Contains additional response headers (if any)
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiCallResponse.BinaryContent">
            <summary>
            Stream containing binary content of the response
            </summary>
        </member>
        <member name="T:PnP.Core.Services.ApiHelper">
            <summary>
            Helper class to manage API calls URLs
            </summary>
        </member>
        <member name="T:PnP.Core.Services.ApiRequest">
            <summary>
            Defines an API request that can be executed
            </summary>
        </member>
        <member name="M:PnP.Core.Services.ApiRequest.#ctor(System.Net.Http.HttpMethod,PnP.Core.Services.ApiRequestType,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates an API request to execute
            </summary>
            <param name="httpMethod">Http method to use</param>
            <param name="type"><see cref="T:PnP.Core.Services.ApiRequestType"/> of the request</param>
            <param name="request">Actual API call to issue</param>
            <param name="body">Optional body of the request</param>
            <param name="headers">Optional headers for the request</param>
        </member>
        <member name="M:PnP.Core.Services.ApiRequest.#ctor(PnP.Core.Services.ApiRequestType,System.String)">
            <summary>
            Creates an API request to execute
            </summary>
            <param name="type"><see cref="T:PnP.Core.Services.ApiRequestType"/> of the request</param>
            <param name="request">Actual API call to issue</param>
        </member>
        <member name="P:PnP.Core.Services.ApiRequest.HttpMethod">
            <summary>
            The Http method to use
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiRequest.Request">
            <summary>
            The REST/Graph API call to execute
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiRequest.Type">
            <summary>
            The type of API call to execute
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiRequest.Body">
            <summary>
            The optional payload/body of the API call to execute
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiRequest.Headers">
            <summary>
            The optional headers of the API call to execute - for example IF-Match for PATCH Request.
            </summary>
        </member>
        <member name="T:PnP.Core.Services.ApiRequestResponse">
            <summary>
            The response of an executed <see cref="P:PnP.Core.Services.ApiRequestResponse.ApiRequest"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiRequestResponse.ApiRequest">
            <summary>
            Gets the <see cref="P:PnP.Core.Services.ApiRequestResponse.ApiRequest"/> that resulted in this response
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiRequestResponse.StatusCode">
            <summary>
            Contains the request http status code
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiRequestResponse.Response">
            <summary>
            The JSON response
            </summary>
        </member>
        <member name="P:PnP.Core.Services.ApiRequestResponse.Headers">
            <summary>
            Contains additional response headers (if any)
            </summary>
        </member>
        <member name="T:PnP.Core.Services.ApiRequestType">
            <summary>
            Types of API requests that can be executed
            </summary>
        </member>
        <member name="F:PnP.Core.Services.ApiRequestType.SPORest">
            <summary>
            Using the SharePoint REST API
            </summary>
        </member>
        <member name="F:PnP.Core.Services.ApiRequestType.Graph">
            <summary>
            Using the production v1 Microsoft Graph REST API
            </summary>
        </member>
        <member name="F:PnP.Core.Services.ApiRequestType.GraphBeta">
            <summary>
            Using the beta Microsoft Graph REST API
            </summary>
        </member>
        <member name="T:PnP.Core.Services.ApiResponse">
            <summary>
            Defines the response of an executed API call
            </summary>
        </member>
        <member name="T:PnP.Core.Services.ApiType">
            <summary>
            Possible APIs used to talk to data stores
            </summary>
        </member>
        <member name="F:PnP.Core.Services.ApiType.SPORest">
            <summary>
            Using the SharePoint REST API
            </summary>
        </member>
        <member name="F:PnP.Core.Services.ApiType.Graph">
            <summary>
            Using the production v1 Microsoft Graph REST API
            </summary>
        </member>
        <member name="F:PnP.Core.Services.ApiType.GraphBeta">
            <summary>
            Using the beta Microsoft Graph REST API
            </summary>
        </member>
        <member name="F:PnP.Core.Services.ApiType.CSOM">
            <summary>
            Using the SharePoint CSOM API
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Batch">
            <summary>
            Defines a <see cref="T:PnP.Core.Services.Batch"/> of requests to execute
            </summary>
        </member>
        <member name="M:PnP.Core.Services.Batch.#ctor(System.Guid)">
            <summary>
            Instantiates a <see cref="T:PnP.Core.Services.Batch"/> for a given id
            </summary>
            <param name="id">Id of the batch</param>
        </member>
        <member name="M:PnP.Core.Services.Batch.#ctor">
            <summary>
            Default public constructor, instantiates a <see cref="T:PnP.Core.Services.Batch"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.Id">
            <summary>
            Id of the <see cref="T:PnP.Core.Services.Batch"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.Requests">
            <summary>
            List with requests 
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.Results">
            <summary>
            List with batch results, will be populated when <see cref="P:PnP.Core.Services.Batch.ThrowOnError"/> is set to false
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.ThrowOnError">
            <summary>
            Throw an exception when a batch request had an error. Defaults to true, if set to 
            false then a collection of batch errors will be available as output of the Execute methods
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.Executed">
            <summary>
            Was this <see cref="T:PnP.Core.Services.Batch"/> executed?
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.BatchExecuted">
            <summary>
            Event handler triggered when batch execution is done
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.HasErrors">
            <summary>
            Returns true if this batch had errors and throw on error was turned off
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.UseGraphBatch">
            <summary>
            Only use Graph batching when all requests in the batch are targeting Graph
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.UseCsomBatch">
            <summary>
            Only use Csom batching when all requests in the batch are targeting csom
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.HasMixedApiTypes">
            <summary>
            Returns true if this <see cref="T:PnP.Core.Services.Batch"/> contains both SharePoint REST as Microsoft Graph requests
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.HasInteractiveRequest">
            <summary>
            Returns true if this batch contains an interactive request
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Batch.CanFallBackToSPORest">
            <summary>
            Returns true if this <see cref="T:PnP.Core.Services.Batch"/> can be completely executed via SPO REST
            </summary>
        </member>
        <member name="M:PnP.Core.Services.Batch.Add(PnP.Core.Model.TransientObject,PnP.Core.Model.EntityInfo,System.Net.Http.HttpMethod,PnP.Core.Services.ApiCall,PnP.Core.Services.ApiCall,System.Func{PnP.Core.Services.FromJson,System.Object},System.Action{System.String},System.String,System.Collections.Generic.List{PnP.Core.Services.IRequestModule})">
            <summary>
            Add a new request to this <see cref="T:PnP.Core.Services.Batch"/>
            </summary>
            <param name="model">Entity object on for which this request was meant</param>
            <param name="entityInfo">Info about the entity object</param>
            <param name="method">Type of http method (GET/PATCH/POST/...)</param>
            <param name="apiCall">Rest/Graph call</param>
            <param name="backupApiCall">Backup rest api call, will be used in case we encounter a mixed batch</param>
            <param name="fromJsonCasting">Delegate for json type parsing</param>
            <param name="postMappingJson">Delegate for post mapping</param>
            <param name="operationName">Name of the operation, used for telemetry purposes</param>
            <param name="requestModules">List with request modules to execute</param>
            <returns>The id to created batch request</returns>
        </member>
        <member name="M:PnP.Core.Services.Batch.Add(PnP.Core.Model.TransientObject,PnP.Core.Model.EntityInfo,System.Net.Http.HttpMethod,PnP.Core.Services.ApiCall,PnP.Core.Services.ApiCall,System.Func{PnP.Core.Services.FromJson,System.Object},System.Action{System.String},System.String)">
            <summary>
            Add a new request to this <see cref="T:PnP.Core.Services.Batch"/>
            </summary>
            <param name="model">Entity object on for which this request was meant</param>
            <param name="entityInfo">Info about the entity object</param>
            <param name="method">Type of http method (GET/PATCH/POST/...)</param>
            <param name="apiCall">Rest/Graph call</param>
            <param name="backupApiCall">Backup rest api call, will be used in case we encounter a mixed batch</param>
            <param name="fromJsonCasting">Delegate for json type parsing</param>
            <param name="postMappingJson">Delegate for post mapping</param>
            <param name="operationName">Name of the operation, used for telemetry purposes</param>
            <returns>The id to created batch request</returns>
        </member>
        <member name="M:PnP.Core.Services.Batch.GetRequest(System.Int32)">
            <summary>
            Gets the request at a specific order
            </summary>
            <param name="order">Order to get the request for</param>
            <returns>The request at the given order</returns>
        </member>
        <member name="M:PnP.Core.Services.Batch.GetRequest(System.Guid)">
            <summary>
            Gets the request by id
            </summary>
            <returns>The request at the given order</returns>
        </member>
        <member name="M:PnP.Core.Services.Batch.ContainsRequest(System.Guid)">
            <summary>
            Verifies if this batch contains the given batch request
            </summary>
            <param name="id">If of the batch request to check for</param>
            <returns>True if the batch contains the request, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Services.Batch.MakeSPORestOnlyBatch">
            <summary>
            Promotes a backup rest call to be the actual api call
            </summary>
        </member>
        <member name="M:PnP.Core.Services.Batch.GetLastRequest">
            <summary>
            Gets the last request in the list of requests
            </summary>
            <returns>The last request, null if there were no requests</returns>
        </member>
        <member name="T:PnP.Core.Services.BatchClient">
            <summary>
            Client that's reponsible for creating and processing batch requests
            </summary>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.#ctor(PnP.Core.Services.PnPContext,PnP.Core.Services.PnPGlobalSettingsOptions,PnP.Core.Services.TelemetryManager)">
            <summary>
            Constructor
            </summary>
            <param name="context">PnP Context</param>
            <param name="globalOptions">Global settings to use</param>
            <param name="telemetry">Telemetry manager</param>
        </member>
        <member name="P:PnP.Core.Services.BatchClient.PnPContext">
            <summary>
            PnP Context
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchClient.MaxRequestsInSharePointRestBatch">
            <summary>
            Max requests in a single SharePointRest batch
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchClient.MaxRequestsInCsomBatch">
            <summary>
            Max requests in a single Csom batch
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchClient.MaxRequestsInGraphBatch">
            <summary>
            Max requests in a single Microsoft Graph batch
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchClient.HttpMicrosoftGraphMaxRetries">
            <summary>
            When not using retry-after, how many times can a retry be made. Defaults to 10
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchClient.HttpMicrosoftGraphDelayInSeconds">
            <summary>
            How many seconds to wait for the next retry attempt. Defaults to 3
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchClient.HttpMicrosoftGraphUseIncrementalDelay">
            <summary>
            Use an incremental strategy for the delay: each retry doubles the previous delay time. Defaults to true
            </summary>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.EnsureBatch">
            <summary>
            Creates a new batch
            </summary>
            <returns>Newly created batch</returns>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.EnsureBatch(System.Guid)">
            <summary>
            Gets or creates a new batch
            </summary>
            <param name="id">Id for the batch to get or create</param>
            <returns>Ensured batch</returns>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.ContainsBatch(System.Guid)">
            <summary>
            Checks if a given batch is still listed for this batch client
            </summary>
            <param name="id">Id of the batch to check for</param>
            <returns>True if still listed, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.GetBatchById(System.Guid)">
            <summary>
            Gets a batch via the given id
            </summary>
            <param name="id">Id of the batch to get</param>
            <returns>The found batch, null otherwise</returns>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.ExecuteBatch(PnP.Core.Services.Batch)">
            <summary>
            Executes a given batch
            </summary>
            <param name="batch">Batch to execute</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.BuildSharePointRestBatchRequestContent(PnP.Core.Services.Batch)">
            <summary>
            Constructs the content of the batch request to be sent
            </summary>
            <param name="batch">Batch to create the request content for</param>
            <returns>StringBuilder holding the created batch request content</returns>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.ProcessSharePointRestBatchResponse(PnP.Core.Services.BatchClient.SPORestBatch,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Provides initial processing of a response for a SharePoint REST batch request
            </summary>
            <param name="restBatch">The batch request to process</param>
            <param name="batchResponse">The raw content of the response</param>
            <param name="headers">Batch request response headers</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.ProcessSharePointRestBatchResponseContent(PnP.Core.Services.Batch,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Process the received batch response and connect the responses to the original requests in this batch
            </summary>
            <param name="batch">Batch that we're processing</param>
            <param name="batchResponse">Batch response received from the server</param>
            <param name="responseHeadersToPropagate">Batch request response headers</param>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.ExecuteCsomBatchAsync(PnP.Core.Services.Batch)">
            <summary>
            Execute a batch with CSOM requests.
            See https://docs.microsoft.com/en-us/openspecs/sharepoint_protocols/ms-csom/fd645da2-fa28-4daa-b3cd-8f4e506df117 for the CSOM protocol specs
            </summary>
            <param name="batch">Batch to execute</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.ProcessCsomBatchResponse(PnP.Core.Services.BatchClient.CsomBatch,System.String,System.Net.HttpStatusCode)">
            <summary>
            Provides initial processing of a response for a Csom batch request
            </summary>
            <param name="csomBatch">The batch request to process</param>
            <param name="batchResponse">The raw content of the response</param>
            <param name="statusCode">The Http status code of the request</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.CheckForUnresolvedTokens(PnP.Core.Services.Batch)">
            <summary>
            Checks if a batch contains an API call that still has unresolved tokens...no point in sending the request at that point
            </summary>
            <param name="batch"></param>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.SplitIntoBatchesPerApiType(PnP.Core.Services.Batch,System.Boolean)">
            <summary>
            Splits a batch that contains rest, graph, graph beta or csom calls in four batches, each containing the respective calls
            </summary>
            <param name="input">Batch to split</param>
            <param name="graphAlwaysUsesBeta">Indicates if all Microsoft Graph use the Graph beta endpoint</param>
            <returns>A rest batch and graph batch</returns>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.MergeBatchResultsWithModel(PnP.Core.Services.Batch)">
            <summary>
            Executing a batch might have resulted in a mismatch between the model and the data in SharePoint:
            Getting entities can result in duplicate entities (e.g. 2 lists when getting the same list twice in a single batch while using a different query)
            Adding entities can result in an entity in the model that does not have the proper key value set (as that value is only retrievable after the add in SharePoint)
            Deleting entities can result in an entity in the model that also should have been deleted
            </summary>
            <param name="batch">Batch to process</param>
        </member>
        <member name="M:PnP.Core.Services.BatchClient.RemoveProcessedBatches">
            <summary>
            Remove processed batches to avoid unneeded memory consumption
            </summary>
        </member>
        <member name="T:PnP.Core.Services.BatchRequest">
            <summary>
            Defines a request in a <see cref="T:PnP.Core.Services.Batch"/>
            </summary>
        </member>
        <member name="M:PnP.Core.Services.BatchRequest.#ctor(PnP.Core.Model.TransientObject,PnP.Core.Model.EntityInfo,System.Net.Http.HttpMethod,PnP.Core.Services.ApiCall,PnP.Core.Services.ApiCall,System.Func{PnP.Core.Services.FromJson,System.Object},System.Action{System.String},System.String,System.Int32)">
            <summary>
            Default constructor
            </summary>
            <param name="modelInstance">Entity object on for which this request was meant</param>
            <param name="entityInfo">Info about the entity object</param>
            <param name="method">Type of http method (GET/PATCH/POST/...)</param>
            <param name="apiCall">Rest call to execute</param>
            <param name="backupApiCall">Backup rest api call, will be used in case we encounter a mixed batch</param>
            <param name="fromJsonCasting">Delegate for json type parsing</param>
            <param name="postMappingJson">Delegate for post mapping</param>
            <param name="operationName">Name of the operation, used for telemetry purposes</param>
            <param name="order">Order of the request in the list of requests</param>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.Id">
            <summary>
            Id of the <see cref="T:PnP.Core.Services.BatchRequest"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.Model">
            <summary>
            Entity object on for which this request was meant
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.EntityInfo">
            <summary>
            Info about the entity object
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.FromJsonCasting">
            <summary>
            Delegate for json type parsing
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.PostMappingJson">
            <summary>
            Delegate for post mapping 
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.Method">
            <summary>
            Type of http method (GET/PATCH/POST/...)
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.ApiCall">
            <summary>
            The rest call to execute
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.BackupApiCall">
            <summary>
            Backup rest api call, will be used in case we encounter a mixed <see cref="T:PnP.Core.Services.Batch"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.OperationName">
            <summary>
            Name of the operation, used for telemetry purposes
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.Order">
            <summary>
            Order of the request in the list of requests
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.ResponseJson">
            <summary>
            Json response for this request (only populated when the <see cref="T:PnP.Core.Services.Batch"/> was executed)
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.ResponseBinaryContent">
            <summary>
            Stream containing the response binary content
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.ResponseHttpStatusCode">
            <summary>
            Http response code for this request (only populated when the <see cref="T:PnP.Core.Services.Batch"/> was executed)
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.RequestHeaders">
            <summary>
            Additional headers supplied for this request
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.ResponseHeaders">
            <summary>
            Headers returned for this request (e.g. Content header to follow-up on async server side operations)
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.ExecutionNeeded">
            <summary>
            This batch request was not executed yet or a retry is needed
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchRequest.RequestModules">
            <summary>
            Modules to be added to the request pipeline for this batch request
            </summary>
        </member>
        <member name="M:PnP.Core.Services.BatchRequest.AddResponse(System.String,System.Net.HttpStatusCode)">
            <summary>
            Records the response of a request (fired as part of the execution of a <see cref="T:PnP.Core.Services.Batch"/>)
            </summary>
            <param name="json">Json response for this request</param>
            <param name="responseHttpStatusCode">Http response status code for this request</param>
        </member>
        <member name="M:PnP.Core.Services.BatchRequest.AddResponse(System.String,System.Net.HttpStatusCode,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Records the response of a request (fired as part of the execution of a <see cref="T:PnP.Core.Services.Batch"/>)
            </summary>
            <param name="json">Json response for this request</param>
            <param name="responseHttpStatusCode">Http response status code for this request</param>
            <param name="responseHeaders">Http response headers</param>
        </member>
        <member name="M:PnP.Core.Services.BatchRequest.AddResponse(System.IO.Stream,System.Net.HttpStatusCode)">
            <summary>
            Records the response of a request (fired as part of the execution of a <see cref="T:PnP.Core.Services.Batch"/>)
            </summary>
            <param name="binaryContent">response binary content for this request</param>
            <param name="responseHttpStatusCode">Http response status code for this request</param>
        </member>
        <member name="M:PnP.Core.Services.BatchRequest.AddResponse(System.IO.Stream,System.Net.HttpStatusCode,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Records the response of a request (fired as part of the execution of a <see cref="T:PnP.Core.Services.Batch"/>)
            </summary>
            <param name="binaryContent">response binary content for this request</param>
            <param name="responseHttpStatusCode">Http response status code for this request</param>
            <param name="responseHeaders">Http response headers</param>
        </member>
        <member name="M:PnP.Core.Services.BatchRequest.FlagForRetry(System.Net.HttpStatusCode,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This batch request needs to be retried
            </summary>
            <param name="responseHttpStatusCode">Http response status code for this request</param>
            <param name="responseHeaders">Http response headers</param>
        </member>
        <member name="T:PnP.Core.Services.BatchResult">
            <summary>
            Holds information about the outcome of each batch request
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchResult.StatusCode">
            <summary>
            Status code of the request
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchResult.Error">
            <summary>
            If an error happened then the error information is stored here
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchResult.ApiResponse">
            <summary>
            The response content from the batch request
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchResult.ApiType">
            <summary>
            API call Type
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchResult.ApiRequest">
            <summary>
            API call request
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchResult.ApiMethod">
            <summary>
            API call method
            </summary>
        </member>
        <member name="P:PnP.Core.Services.BatchResult.ApiBody">
            <summary>
            API call body
            </summary>
        </member>
        <member name="T:PnP.Core.Services.BatchResultValue`1">
            <summary>
            Wraps a reference or value type in an object
            </summary>
            <typeparam name="T">Type of the value/reference type to wrap</typeparam>
        </member>
        <member name="P:PnP.Core.Services.BatchResultValue`1.Value">
            <summary>
            The wrapped reference/value type
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Core.BoolJsonConverter">
            <summary>
            Used for Attribute addedFromPersistedData in WebPartControlData as it can be bool or string
            </summary>
        </member>
        <member name="M:PnP.Core.Services.Core.CSOM.Utils.DateHelpers.FromDateTimeStrategy.ConverDate(System.String)">
            <summary>
            CSOM Date format: https://docs.microsoft.com/en-us/openspecs/sharepoint_protocols/ms-csom/2edd9d2a-2706-4703-9d27-81d1d7aca699
            Implementation is aligned with what is used inside the CSOM code base
            </summary>
            <param name="dateValue">CSOM string date format to parse</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Services.Core.EventHub">
            <summary>
            Class that allows a PnP Core SDK consumer to hookup with events being triggered from within PnP Core SDK
            </summary>
        </member>
        <member name="M:PnP.Core.Services.Core.EventHub.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Core.EventHub.RequestRetry">
            <summary>
            Event to subscribe to get notified whenever a request is getting retried due to throttling or an error
            </summary>
        </member>
        <member name="T:PnP.Core.Services.Core.RetryEvent">
            <summary>
            Event containing information about the happened retry
            </summary>
        </member>
        <member name="M:PnP.Core.Services.Core.RetryEvent.#ctor(System.Net.Http.HttpRequestMessage,System.Int32,System.Int32,System.Exception)">
            <summary>
            Retry event constructor
            </summary>
            <param name="requestMessage">Request that's retried</param>
            <param name="httpStatusCode">Http status code</param>
            <param name="waitTime">Wait before the next try in seconds</param>
            <param name="exception">Socket exception that triggered the retry</param>
        </member>
        <member name="P:PnP.Core.Services.Core.RetryEvent.Request">
            <summary>
            Request that was retried
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Core.RetryEvent.HttpStatusCode">
            <summary>
            Http status code for the retried request
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Core.RetryEvent.WaitTime">
            <summary>
            Wait before the next try in seconds
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Core.RetryEvent.Exception">
            <summary>
            SocketException that triggered the retry
            </summary>
        </member>
        <member name="P:PnP.Core.Services.Core.RetryEvent.PnpContextProperties">
            <summary>
            PnPContext properties
            </summary>
        </member>
        <member name="M:PnP.Core.Services.CloudManager.GetMicrosoftGraphAuthority(PnP.Core.Services.Microsoft365Environment)">
            <summary>
            Returns the graph authority for the in use environment. See https://docs.microsoft.com/en-us/graph/deployments for details
            </summary>
            <param name="environment"></param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Services.CloudManager.GetAzureADLoginAuthority(PnP.Core.Services.Microsoft365Environment)">
            <summary>
            Returns the Azure AD login authority. See https://docs.microsoft.com/en-us/graph/deployments for details
            </summary>
            <param name="environment"></param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Services.FromJson">
            <summary>
            Class that represents the JSON context that's being used during call outs when parsing JSON responses
            </summary>
        </member>
        <member name="M:PnP.Core.Services.HttpRequestMessageExtensions.CloneAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Create a new HTTP request by copying previous HTTP request's headers and properties from response's request message.
            Copied from: https://github.com/microsoftgraph/msgraph-sdk-dotnet-core/blob/dev/src/Microsoft.Graph.Core/Extensions/HttpRequestMessageExtensions.cs
            </summary>
            <param name="originalRequest">The previous <see cref="T:System.Net.Http.HttpRequestMessage"/> needs to be copy.</param>
            <returns>The <see cref="T:System.Net.Http.HttpRequestMessage"/>.</returns>
            <remarks>
            Re-issue a new HTTP request with the previous request's headers and properities
            </remarks>
        </member>
        <member name="T:PnP.Core.Services.MicrosoftGraphClient">
            <summary>
            Client that handles all Microsoft Graph requests
            </summary>
        </member>
        <member name="P:PnP.Core.Services.MicrosoftGraphClient.Client">
            <summary>
            Returns the configured Microsoft Graph http client
            </summary>
        </member>
        <member name="M:PnP.Core.Services.MicrosoftGraphClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger{PnP.Core.Services.MicrosoftGraphClient},Microsoft.Extensions.Options.IOptions{PnP.Core.Services.PnPGlobalSettingsOptions})">
            <summary>
            Constructs the Microsoft Graph http client
            </summary>
            <param name="client">Http client instance</param>
            <param name="log">Logger</param>
            <param name="options">Settings to configure the http client</param>
        </member>
        <member name="T:PnP.Core.Services.MicrosoftGraphRetryHandler">
            <summary>
            Retry handler for Microsoft Graph requests
            </summary>
        </member>
        <member name="T:PnP.Core.Services.RetryHandlerBase">
            <summary>
            Retry handler for http requests
            Based upon: https://github.com/microsoftgraph/msgraph-sdk-dotnet-core/blob/dev/src/Microsoft.Graph.Core/Extensions/HttpRequestMessageExtensions.cs
            </summary>
        </member>
        <member name="M:PnP.Core.Services.RetryHandlerBase.AddOrUpdateRetryAttempt(System.Net.Http.HttpRequestMessage,System.Int32)">
            <summary>
            Update Retry-Attempt header in the HTTP request
            </summary>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/>needs to be sent.</param>
            <param name="retryCount">Retry times</param>
        </member>
        <member name="T:PnP.Core.Services.SharePointRestClient">
            <summary>
            Client that handles all SharePoint REST requests
            </summary>
        </member>
        <member name="P:PnP.Core.Services.SharePointRestClient.Client">
            <summary>
            Http client which needs to be used for making a SharePoint REST call
            </summary>
        </member>
        <member name="M:PnP.Core.Services.SharePointRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger{PnP.Core.Services.SharePointRestClient},Microsoft.Extensions.Options.IOptions{PnP.Core.Services.PnPGlobalSettingsOptions})">
            <summary>
            Default Constructor
            </summary>
            <param name="client">Http Client coming from the .Net http client factory</param>
            <param name="log">Logger service</param>
            <param name="options">Options service</param>
        </member>
        <member name="T:PnP.Core.Services.SharePointRestRetryHandler">
            <summary>
            Retry handler for SharePoint REST requests
            </summary>
        </member>
        <member name="T:PnP.Core.Services.IPnPContextFactory">
            <summary>
            Public interface for the injectable service to create an PnPContext
            </summary>
        </member>
        <member name="P:PnP.Core.Services.IPnPContextFactory.EventHub">
            <summary>
            Gets the EventHub instance, can be used to tap into events like request retry (due to throttling)
            </summary>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.Uri,PnP.Core.Services.IAuthenticationProvider,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided URL and Authentication Provider instance
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.Uri,PnP.Core.Services.IAuthenticationProvider,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided URL and Authentication Provider instance
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.Uri,PnP.Core.Services.IAuthenticationProvider,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided URL and Authentication Provider instance
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.Uri,PnP.Core.Services.IAuthenticationProvider,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided URL and Authentication Provider instance
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.Uri,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided URL and using the default Authentication Provider
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.Uri,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided URL and using the default Authentication Provider
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.Uri,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided URL and using the default Authentication Provider
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.Uri,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided URL and using the default Authentication Provider
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.Guid,PnP.Core.Services.IAuthenticationProvider,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and Authentication Provider instance
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.Guid,PnP.Core.Services.IAuthenticationProvider,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and Authentication Provider instance
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.Guid,PnP.Core.Services.IAuthenticationProvider,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and Authentication Provider instance
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.Guid,PnP.Core.Services.IAuthenticationProvider,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and Authentication Provider instance
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.Guid,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and using the default Authentication Provider
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.Guid,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and using the default Authentication Provider
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.Guid,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and using the default Authentication Provider
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.Guid,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and using the default Authentication Provider
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.String,System.Action{PnP.Core.Services.IAuthenticationProvider},PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name and on a custom initialization function for the IAuthenticationProvider reference instance
            </summary>
            <param name="name">The name of the configuration to use</param>
            <param name="initializeAuthenticationProvider">The function to initialize the context</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.String,System.Action{PnP.Core.Services.IAuthenticationProvider},System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name and on a custom initialization function for the IAuthenticationProvider reference instance
            </summary>
            <param name="name">The name of the configuration to use</param>
            <param name="initializeAuthenticationProvider">The function to initialize the context</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.String,System.Action{PnP.Core.Services.IAuthenticationProvider},PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name and on a custom initialization function for the IAuthenticationProvider reference instance
            </summary>
            <param name="name">The name of the configuration to use</param>
            <param name="initializeAuthenticationProvider">The function to initialize the context</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.String,System.Action{PnP.Core.Services.IAuthenticationProvider},System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name and on a custom initialization function for the IAuthenticationProvider reference instance
            </summary>
            <param name="name">The name of the configuration to use</param>
            <param name="initializeAuthenticationProvider">The function to initialize the context</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.String,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the configuration to use</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.Create(System.String,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the configuration to use</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.String,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the configuration to use</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextFactory.CreateAsync(System.String,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the configuration to use</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="T:PnP.Core.Services.JsonMappingHelper">
            <summary>
            Internal class to help with the JSON mapping for Domain Model objects
            </summary>
        </member>
        <member name="M:PnP.Core.Services.JsonMappingHelper.MapJsonToModel(PnP.Core.Services.BatchRequest)">
            <summary>
            Maps a json string to the provided domain model object instance
            </summary>
            <param name="batchRequest">The batch request to map json from</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Services.JsonMappingHelper.FromJson(PnP.Core.Model.TransientObject,PnP.Core.Model.EntityInfo,PnP.Core.Services.ApiResponse,System.Func{PnP.Core.Services.FromJson,System.Object})">
            <summary>
            Maps JSON to model classes
            </summary>
            <param name="pnpObject">Model to populate from JSON</param>
            <param name="entity">Information about the current model</param>
            <param name="apiResponse">The REST response to process</param>
            <param name="fromJsonCasting">Delegate to be called for type conversion</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Services.JsonMappingHelper.FromJsonGraph(PnP.Core.Model.TransientObject,PnP.Core.Model.EntityInfo,PnP.Core.Services.ApiResponse,System.Func{PnP.Core.Services.FromJson,System.Object})">
            <summary>
            Maps JSON to model classes
            </summary>
            <param name="pnpObject">Model to populate from JSON</param>
            <param name="entity">Information about the current model</param>
            <param name="apiResponse">Response of the API call</param>
            <param name="fromJsonCasting">Delegate to be called for type conversion</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Services.Microsoft365Environment">
            <summary>
            Microsoft 365 environments
            </summary>
        </member>
        <member name="F:PnP.Core.Services.Microsoft365Environment.Production">
            <summary>
            Production environment
            </summary>
        </member>
        <member name="F:PnP.Core.Services.Microsoft365Environment.PreProduction">
            <summary>
            Pre-production environment
            </summary>
        </member>
        <member name="F:PnP.Core.Services.Microsoft365Environment.China">
            <summary>
            China environment, see https://docs.microsoft.com/en-us/office365/servicedescriptions/office-365-platform-service-description/office-365-operated-by-21vianet
            </summary>
        </member>
        <member name="F:PnP.Core.Services.Microsoft365Environment.Germany">
            <summary>
            German environment, see https://docs.microsoft.com/en-us/office365/servicedescriptions/office-365-platform-service-description/office-365-germany
            </summary>
        </member>
        <member name="F:PnP.Core.Services.Microsoft365Environment.USGovernment">
            <summary>
            GCC US Government environment, see https://docs.microsoft.com/en-us/office365/servicedescriptions/office-365-platform-service-description/office-365-us-government/office-365-us-government
            </summary>
        </member>
        <member name="F:PnP.Core.Services.Microsoft365Environment.USGovernmentHigh">
            <summary>
            GCC High US Government environment, see https://docs.microsoft.com/en-us/office365/servicedescriptions/office-365-platform-service-description/office-365-us-government/gcc-high-and-dod
            </summary>
        </member>
        <member name="F:PnP.Core.Services.Microsoft365Environment.USGovernmentDoD">
            <summary>
            DOD US Government environment, see https://docs.microsoft.com/en-us/office365/servicedescriptions/office-365-platform-service-description/office-365-us-government/gcc-high-and-dod
            </summary>
        </member>
        <member name="T:PnP.Core.Services.PnPContext">
            <summary>
            PnP Context class...the glue between the model and the data stores
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Uri">
            <summary>
            Uri of the SharePoint site we're working against
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Logger">
            <summary>
            Connected logger
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.AuthenticationProvider">
            <summary>
            Connected authentication provider
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.RestClient">
            <summary>
            Connected SharePoint REST client
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.GraphClient">
            <summary>
            Connected Microsoft Graph client
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Environment">
            <summary>
            Returns the used Microsoft 365 cloud environment
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Properties">
            <summary>
            Collection for custom properties that you want to attach to a <see cref="T:PnP.Core.Services.PnPContext"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.BatchClient">
            <summary>
            Connected batch client
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Id">
            <summary>
            Unique id for this <see cref="T:PnP.Core.Services.PnPContext"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.LocalContextOptions">
            <summary>
            Optional options specified during context creation, needed for context cloning
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.RequestModules">
            <summary>
            Modules to be added to the next request's execution pipeline
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.CancellationToken">
            <summary>
            The cancellation token to cancel operation
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.GraphFirst">
            <summary>
            Controls whether the library will try to use Microsoft Graph over REST whenever that's defined in the model
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.GraphAlwaysUseBeta">
            <summary>
            If true than all requests to Microsoft Graph use the beta endpoint
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.GraphCanUseBeta">
            <summary>
            If true than the Graph beta endpoint is used when there's no other option, default approach stays using the v1 endpoint
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.CurrentBatch">
            <summary>
            Current batch, used for implicit batching
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.HasPendingRequests">
            <summary>
            Are there pending requests to execute (in the case of batching)
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Web">
            <summary>
            Entry point for the Web Object
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Site">
            <summary>
            Entry point for the Site Object
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Team">
            <summary>
            Entry point for the Team Object
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Group">
            <summary>
            Entry point for the Microsoft 365 Group Object
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.TermStore">
            <summary>
            Entry point for the Microsoft 365 TermStore
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Social">
            <summary>
            Entry point for the social-related APIs
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.Me">
            <summary>
            Entry point for the Me object
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContext.ContentTypeHub">
            <summary>
            Entry point for the ContentTypeHub object
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.NewBatch">
            <summary>
            Creates a new batch
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.ExecuteAsync(System.Boolean)">
            <summary>
            Method to execute the current batch
            </summary>
            <param name="throwOnError">Throw an exception on the first encountered error in the batch</param>
            <returns>The asynchronous task that will be executed</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.ExecuteAsync(PnP.Core.Services.Batch,System.Boolean)">
            <summary>
            Method to execute a given batch
            </summary>
            <param name="batch">Batch to execute</param>
            <param name="throwOnError">Throw an exception on the first encountered error in the batch</param>
            <returns>The asynchronous task that will be executed</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.Execute(System.Boolean)">
            <summary>
            Method to execute the current batch
            </summary>
            <param name="throwOnError">Throw an exception on the first encountered error in the batch</param>
            <returns>The asynchronous task that will be executed</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.Execute(PnP.Core.Services.Batch,System.Boolean)">
            <summary>
            Method to execute a given batch
            </summary>
            <param name="batch">Batch to execute</param>
            <param name="throwOnError">Throw an exception on the first encountered error in the batch</param>
            <returns>The asynchronous task that will be executed</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.Clone">
            <summary>
            Clones this context into a new context for the same SharePoint site
            </summary>
            <returns>New <see cref="T:PnP.Core.Services.PnPContext"/></returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.CloneAsync">
            <summary>
            Clones this context into a new context for the same SharePoint site
            </summary>
            <returns>New <see cref="T:PnP.Core.Services.PnPContext"/></returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.Clone(System.String)">
            <summary>
            Clones this context for another SharePoint site provided as configuration
            </summary>
            <param name="name">The name of the SPOContext configuration to use</param>
            <returns>New <see cref="T:PnP.Core.Services.PnPContext"/> for the request config</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.CloneAsync(System.String)">
            <summary>
            Clones this context for another SharePoint site provided as configuration
            </summary>
            <param name="name">The name of the SPOContext configuration to use</param>
            <returns>New <see cref="T:PnP.Core.Services.PnPContext"/> for the request config</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.Clone(System.Uri)">
            <summary>
            Clones this context for another SharePoint site
            </summary>
            <param name="uri">Uri of the other SharePoint site</param>
            <returns>New <see cref="T:PnP.Core.Services.PnPContext"/></returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.CloneAsync(System.Uri)">
            <summary>
            Clones this context for another SharePoint site
            </summary>
            <param name="uri">Uri of the other SharePoint site</param>
            <returns>New <see cref="T:PnP.Core.Services.PnPContext"/></returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.Clone(System.Guid)">
            <summary>
            Clones this context for another SharePoint site
            </summary>
            <param name="groupId">Id of the other Microsoft 365 group to create a <see cref="T:PnP.Core.Services.PnPContext"/> for</param>
            <returns>New <see cref="T:PnP.Core.Services.PnPContext"/></returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.CloneAsync(System.Guid)">
            <summary>
            Clones this context for another SharePoint site
            </summary>
            <param name="groupId">Id of the other Microsoft 365 group to create a <see cref="T:PnP.Core.Services.PnPContext"/> for</param>
            <returns>New <see cref="T:PnP.Core.Services.PnPContext"/></returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.Dispose">
            <summary>
            Disposes this <see cref="T:PnP.Core.Services.PnPContext"/>
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.Dispose(System.Boolean)">
            <summary>
            Disposes this <see cref="T:PnP.Core.Services.PnPContext"/>
            </summary>
            <param name="disposing">Do we need to dispose resources</param>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.SetAADTenantId(System.Boolean)">
            <summary>
            Gets the Azure Active Directory tenant id. Using the client.svc endpoint approach as that one will also work with vanity SharePoint domains
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PnPContext.IsSubSite(System.Uri)">
            <summary>
            Simple is sub site check based upon the url pattern
            </summary>
            <param name="site">Uri to check</param>
            <returns>True if sub site, false otherwise</returns>
        </member>
        <member name="T:PnP.Core.Services.PnPContextFactory">
            <summary>
            Public factory service to create PnPContext object instances
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.#ctor(Microsoft.Extensions.Logging.ILogger{PnP.Core.Services.PnPContext},PnP.Core.Services.SharePointRestClient,PnP.Core.Services.MicrosoftGraphClient,Microsoft.Extensions.Options.IOptions{PnP.Core.Services.PnPContextFactoryOptions},Microsoft.Extensions.Options.IOptions{PnP.Core.Services.PnPGlobalSettingsOptions},PnP.Core.Services.Core.EventHub)">
            <summary>
            Default constructor for <see cref="T:PnP.Core.Services.PnPContextFactory"/>
            </summary>
            <param name="logger">Connected logger</param>
            <param name="sharePointRestClient">SharePoint REST http client to use</param>
            <param name="microsoftGraphClient">Microsoft Graph http client to use</param>
            <param name="contextOptions"><see cref="T:PnP.Core.Services.PnPContextFactory"/> options</param>
            <param name="globalOptions">Global options to use</param>
            <param name="eventHub">EventHub instance</param>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactory.EventHub">
            <summary>
            Gets the EventHub instance, can be used to tap into events like request retry (due to throttling)
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactory.Log">
            <summary>
            Connected logger
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactory.SharePointRestClient">
            <summary>
            Connected SharePoint REST http client
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactory.MicrosoftGraphClient">
            <summary>
            Connected Microsoft Graph http client
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactory.TelemetryManager">
            <summary>
            Connected Telemetry client
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactory.ContextOptions">
            <summary>
            Options used to configure this <see cref="T:PnP.Core.Services.PnPContext"/>
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactory.GlobalOptions">
            <summary>
            Options used to configure this <see cref="T:PnP.Core.Services.PnPContext"/>
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.String,System.Action{PnP.Core.Services.IAuthenticationProvider},PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the PnPContext configuration to use</param>
            <param name="initializeAuthenticationProvider">The function to initialize the authentication provider</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.String,System.Action{PnP.Core.Services.IAuthenticationProvider},System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the PnPContext configuration to use</param>
            <param name="initializeAuthenticationProvider">The function to initialize the authentication provider</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.String,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the PnPContext configuration to use</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.String,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the PnPContext configuration to use</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.String,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the PnPContext configuration to use</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.String,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the PnPContext configuration to use</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.String,System.Action{PnP.Core.Services.IAuthenticationProvider},PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the PnPContext configuration to use</param>
            <param name="initializeAuthenticationProvider">The function to initialize the authentication provider</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.String,System.Action{PnP.Core.Services.IAuthenticationProvider},System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="name">The name of the PnPContext configuration to use</param>
            <param name="initializeAuthenticationProvider">The function to initialize the authentication provider</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.Uri,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.Uri,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.Uri,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.Uri,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.Uri,PnP.Core.Services.IAuthenticationProvider,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.Uri,PnP.Core.Services.IAuthenticationProvider,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.Uri,PnP.Core.Services.IAuthenticationProvider,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.Uri,PnP.Core.Services.IAuthenticationProvider,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided configuration name
            </summary>
            <param name="url">The URL of the PnPContext as a URI</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.Guid,PnP.Core.Services.IAuthenticationProvider,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and Authentication Provider instance
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.Guid,PnP.Core.Services.IAuthenticationProvider,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and Authentication Provider instance
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.Guid,PnP.Core.Services.IAuthenticationProvider,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and Authentication Provider instance
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.Guid,PnP.Core.Services.IAuthenticationProvider,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and Authentication Provider instance
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="authenticationProvider">The Authentication Provider to use to authenticate within the PnPContext</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.Guid,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and using the default Authentication Provider
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.Create(System.Guid,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and using the default Authentication Provider
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.Guid,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and using the default Authentication Provider
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.CreateAsync(System.Guid,System.Threading.CancellationToken,PnP.Core.Services.PnPContextOptions)">
            <summary>
            Creates a new instance of PnPContext based on a provided group and using the default Authentication Provider
            </summary>
            <param name="groupId">The id of an Microsoft 365 group</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <param name="options">Options used to configure the created context</param>
            <returns>A PnPContext object based on the provided configuration name</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactory.InitializeContextAsync(PnP.Core.Services.PnPContext,PnP.Core.Services.PnPContextOptions)">
            <summary>
            When using REST batch requests the URL needs to be correctly cased, so we're loading the web url while doing an interactive request.
            Also loading the default needed properties to save additional loads for missing key properties
            </summary>
            <param name="context">PnPContext being initialized</param>
            <param name="options">Options for the initialization of this context</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Services.PnPContextFactoryCollectionExtensions">
            <summary>
            Extension class for the IServiceCollection type to provide supporting methods for the PnPContextFactory service
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactoryCollectionExtensions.AddPnPContextFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the <see cref="T:PnP.Core.Services.PnPContextFactory"/> to the collection of services
            </summary>
            <param name="collection">Collection of loaded services</param>
            <returns>Collection of loaded services</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextFactoryCollectionExtensions.AddPnPContextFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{PnP.Core.Services.PnPContextFactoryOptions})">
            <summary>
            Adds the <see cref="T:PnP.Core.Services.PnPContextFactory"/> to the collection of services with options
            </summary>
            <param name="collection">Collection of loaded services</param>
            <param name="options"><see cref="T:PnP.Core.Services.PnPContextFactory"/> configuration options</param>
            <returns>Collection of loaded services</returns>
        </member>
        <member name="T:PnP.Core.Services.PnPContextFactoryOptions">
            <summary>
            Defines the options to configure the PnPContextFactory object
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactoryOptions.GraphFirst">
            <summary>
            Controls whether the library will try to use Microsoft Graph over REST whenever that's defined in the model
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactoryOptions.GraphCanUseBeta">
            <summary>
            If true than the Graph beta endpoint is used when there's no other option, default approach stays using the v1 endpoint
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactoryOptions.GraphAlwaysUseBeta">
            <summary>
            If true than all requests to Microsoft Graph use the beta endpoint
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactoryOptions.DefaultAuthenticationProvider">
            <summary>
            The Default Authentication Provider configuration
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactoryOptions.Configurations">
            <summary>
            Collection of configurations for PnPContextFactory
            </summary>
        </member>
        <member name="T:PnP.Core.Services.PnPContextFactoryOptionsConfiguration">
            <summary>
            PnPContext configuration options
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactoryOptionsConfiguration.Name">
            <summary>
            The Name of the configuration
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactoryOptionsConfiguration.SiteUrl">
            <summary>
            The URL of the target SPO Site
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextFactoryOptionsConfiguration.AuthenticationProvider">
            <summary>
            The Authentication Provider configuration
            </summary>
        </member>
        <member name="T:PnP.Core.Services.PnPContextOptions">
            <summary>
            Options used when a <see cref="T:PnP.Core.Services.PnPContext"/> is created
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextOptions.AdditionalSitePropertiesOnCreate">
            <summary>
            Additional <seealso cref="T:PnP.Core.Model.SharePoint.ISite"/> properties to load when creating a new <seealso cref="T:PnP.Core.Services.PnPContext"/>.
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextOptions.AdditionalWebPropertiesOnCreate">
            <summary>
            Additional <seealso cref="T:PnP.Core.Model.SharePoint.IWeb"/> properties to load when creating a new <seealso cref="T:PnP.Core.Services.PnPContext"/>.
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextOptions.Properties">
            <summary>
            Properties to set on the context during creation
            </summary>
        </member>
        <member name="T:PnP.Core.Services.PnPGlobalSettingsOptions">
            <summary>
            PnP Core SDK settings class
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.DisableTelemetry">
            <summary>
            Turns on/off telemetry, can be customized via configuration. Defaults to false.
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.Environment">
            <summary>
            The Microsoft 365 cloud environment that's used
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpUserAgent">
            <summary>
            User agent value, can be customized via configuration 
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpTimeout">
            <summary>
            Max duration of a http request in seconds. Defaults to 100 seconds, set to value -1 for an infinite timeout
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpSharePointRestUseRetryAfterHeader">
            <summary>
            Use the Retry-After header for calculating the delay in case of a retry. Defaults to false
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpSharePointRestDefaultPageSize">
            <summary>
            Defines the default page size for querying items in SharePoint REST
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpSharePointRestMaxRetries">
            <summary>
            When not using retry-after, how many times can a retry be made. Defaults to 10
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpSharePointRestDelayInSeconds">
            <summary>
            How many seconds to wait for the next retry attempt. Defaults to 3
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpSharePointRestUseIncrementalDelay">
            <summary>
            Use an incremental strategy for the delay: each retry doubles the previous delay time. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpMicrosoftGraphUseRetryAfterHeader">
            <summary>
            Use the Retry-After header for calculating the delay in case of a retry. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpMicrosoftGraphMaxRetries">
            <summary>
            When not using retry-after, how many times can a retry be made. Defaults to 10
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpMicrosoftGraphDelayInSeconds">
            <summary>
            How many seconds to wait for the next retry attempt. Defaults to 3
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpMicrosoftGraphUseIncrementalDelay">
            <summary>
            Use an incremental strategy for the delay: each retry doubles the previous delay time. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpAzureActiveDirectoryUseRetryAfterHeader">
            <summary>
            Use the Retry-After header for calculating the delay in case of a retry. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpAzureActiveDirectoryMaxRetries">
            <summary>
            When not using retry-after, how many times can a retry be made. Defaults to 10
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpAzureActiveDirectoryDelayInSeconds">
            <summary>
            How many seconds to wait for the next retry attempt. Defaults to 3
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.HttpAzureActiveDirectoryUseIncrementalDelay">
            <summary>
            Use an incremental strategy for the delay: each retry doubles the previous delay time. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.Logger">
            <summary>
            Connected logger
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.VersionTag">
            <summary>
            Version tag used in telemetry
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPGlobalSettingsOptions.AADTenantId">
            <summary>
            AAD tenant id, used for telemetry purposes. Can be customized via configuration
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PnPGlobalSettingsOptions.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:PnP.Core.Services.PropertyUpdateRequest">
            <summary>
            Class used to provide information on a field update request
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PropertyUpdateRequest.PropertyName">
            <summary>
            Information about the property being updated
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PropertyUpdateRequest.Value">
            <summary>
            Value being set to the property
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PropertyUpdateRequest.Cancelled">
            <summary>
            Cancel this update, if for some reason the property update should not continue
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PropertyUpdateRequest.CancellationReason">
            <summary>
            Optional reason indicating why the update was cancelled
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PropertyUpdateRequest.CancelUpdate">
            <summary>
            Cancel this update
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PropertyUpdateRequest.CancelUpdate(System.String)">
            <summary>
            Cancel this update with a reason
            </summary>
            <param name="cancellationReason">Update cancellation reason</param>
        </member>
        <member name="T:PnP.Core.Services.TokenHandler">
            <summary>
            Handler class to help managing tokens replacement
            </summary>
        </member>
        <member name="M:PnP.Core.Services.TokenHandler.ResolveTokensAsync(PnP.Core.Model.IMetadataExtensible,System.String,PnP.Core.Services.PnPContext)">
            <summary>
            Method to resolve a set of tokens in a provided tokenized string
            </summary>
            <param name="tokenizedValue">A string with tokens</param>
            <param name="pnpObject">The domain model object to use as the target reference</param>
            <param name="context"><see cref="T:PnP.Core.Services.PnPContext"/> to get information from needed for token resolving</param>
            <returns>The string with tokens resolved</returns>
        </member>
        <member name="T:PnP.Core.Services.CustomHeadersRequestModule">
            <summary>
            Request module that inserts custom headers into the HTTP requests being made
            </summary>
        </member>
        <member name="M:PnP.Core.Services.CustomHeadersRequestModule.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},System.Action{System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            Default constructor, configures the custom header module. If provided header was already defined then it will be overwritten
            </summary>
            <param name="headers">Custom request headers to be added.</param>
            <param name="responseHeaders">Delegate that can be invoked to pass along the response headers</param>
        </member>
        <member name="P:PnP.Core.Services.CustomHeadersRequestModule.Id">
            <summary>
            Unique ID of this request module
            </summary>
        </member>
        <member name="P:PnP.Core.Services.CustomHeadersRequestModule.Headers">
            <summary>
            The headers that will be added to the requests via this module
            </summary>
        </member>
        <member name="T:PnP.Core.Services.GenericRequestModule">
            <summary>
            Generic module that can be used to plug in custom logic to the request pipeline
            </summary>
        </member>
        <member name="M:PnP.Core.Services.GenericRequestModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:PnP.Core.Services.GenericRequestModule.Id">
            <summary>
            Unique ID of this request module
            </summary>
        </member>
        <member name="T:PnP.Core.Services.IRequestModule">
            <summary>
            Interface defining a request module
            </summary>
        </member>
        <member name="P:PnP.Core.Services.IRequestModule.Id">
            <summary>
            Id of the request module
            </summary>
        </member>
        <member name="P:PnP.Core.Services.IRequestModule.ExecuteForSpoRest">
            <summary>
            Defines if the request module is applied when invoking SPO REST requests. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.IRequestModule.ExecuteForMicrosoftGraph">
            <summary>
            Defines if the request module is applied when invoking Microsoft Graph requests. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.IRequestModule.ExecuteForSpoCsom">
            <summary>
            Defines if the request module is applied when invoking SPO CSOM requests. Defaults to false
            </summary>
        </member>
        <member name="P:PnP.Core.Services.IRequestModule.RequestHeaderHandler">
            <summary>
            Delegate that can be implemented to manipulate the request headers
            </summary>
        </member>
        <member name="P:PnP.Core.Services.IRequestModule.RequestUrlHandler">
            <summary>
            Delegate that can be implemented to manipulate the request url before it gets send to the server
            </summary>
        </member>
        <member name="P:PnP.Core.Services.IRequestModule.RequestBodyHandler">
            <summary>
            Delegate that can be implemented to manipulate the request body before it gets send to the server
            </summary>
        </member>
        <member name="P:PnP.Core.Services.IRequestModule.ResponseHandler">
            <summary>
            Delegate that can be implemented to manipulate the request response before it gets processed
            </summary>
        </member>
        <member name="T:PnP.Core.Services.RequestModuleBase">
            <summary>
            Base class for request modules
            </summary>
        </member>
        <member name="P:PnP.Core.Services.RequestModuleBase.Id">
            <summary>
            Each request module must have a unique id, override this property in your request module
            </summary>
        </member>
        <member name="P:PnP.Core.Services.RequestModuleBase.ExecuteForSpoRest">
            <summary>
            Defines if the request module is applied when invoking SPO REST requests. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.RequestModuleBase.ExecuteForMicrosoftGraph">
            <summary>
            Defines if the request module is applied when invoking Microsoft Graph requests. Defaults to true
            </summary>
        </member>
        <member name="P:PnP.Core.Services.RequestModuleBase.ExecuteForSpoCsom">
            <summary>
            Defines if the request module is applied when invoking SPO CSOM requests. Defaults to false
            </summary>
        </member>
        <member name="P:PnP.Core.Services.RequestModuleBase.RequestHeaderHandler">
            <summary>
            Delegate that can be implemented to manipulate the request headers before the request is send to the server
            </summary>
        </member>
        <member name="P:PnP.Core.Services.RequestModuleBase.RequestUrlHandler">
            <summary>
            Delegate that can be implemented to manipulate the request url before the request is send to the server
            </summary>
        </member>
        <member name="P:PnP.Core.Services.RequestModuleBase.RequestBodyHandler">
            <summary>
            Delegate that can be implemented to manipulate the request body before the request is send to the server
            </summary>
        </member>
        <member name="P:PnP.Core.Services.RequestModuleBase.ResponseHandler">
            <summary>
            Delegate that can be implemented to manipulate the request response before it gets processed
            </summary>
        </member>
        <member name="T:PnP.Core.Services.TelemetryClientFactory">
            <summary>
            Class that instantiates a telemetry client and configuration once per process
            </summary>
        </member>
        <member name="P:PnP.Core.Services.TelemetryManager.TelemetryConfiguration">
            <summary>
            Telemetry configuration
            </summary>
        </member>
        <member name="P:PnP.Core.Services.TelemetryManager.TelemetryClient">
            <summary>
            Azure AppInsights Telemetry client
            </summary>
        </member>
        <member name="P:PnP.Core.Services.TelemetryManager.GlobalOptions">
            <summary>
            Settings client
            </summary>
        </member>
        <member name="P:PnP.Core.Services.TelemetryManager.Version">
            <summary>
            File version of the PnP Core SDK
            </summary>
        </member>
        <member name="M:PnP.Core.Utilities.DriveHelper.EncodeSharingUrl(System.String)">
            <summary>
            Translates a URL to a SharePoint item to id value that can be used with the /shares endpoint (GET /shares/{shareIdOrEncodedSharingUrl})
            </summary>
            <param name="url">Url to item in SharePoint</param>
            <returns>Encoded sharing url</returns>
        </member>
        <member name="T:PnP.Core.Utilities.HtmlToText">
            <summary>
            This class contains code copied from Microsoft.SharePoint.Utilities.SPHttpUtility 
            </summary>
        </member>
        <member name="M:PnP.Core.Utilities.HtmlToText.ConvertSimpleHtmlToText(System.String,System.Int32)">
            <summary>
            Converts an HTML string from a Windows SharePoint Services rich text field to plain text.
            </summary>
            <param name="html">An HTML string that contains the contents of a Windows SharePoint Services rich text field.</param>
            <param name="maxLength">A 32-bit integer representing the maximum desired length of the returned string, or -1 to specify no maximum length.</param>
            <returns>A plain-text string version of the string.</returns>        
        </member>
        <member name="T:PnP.Core.Utilities.MimeTypeMap">
            <summary>
            Class MimeTypeMap.
            
            Code copied from https://github.com/samuelneff/MimeTypeMap, created by @samuelneff 
            
            </summary>
        </member>
        <member name="M:PnP.Core.Utilities.MimeTypeMap.TryGetMimeType(System.String,System.String@)">
            <summary>
            Tries to get the type of the MIME from the provided string.
            </summary>
            <param name="str">The filename or extension.</param>
            <param name="mimeType">The variable to store the MIME type.</param>
            <returns>The MIME type.</returns>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="T:PnP.Core.ExpandoObjectExtensions">
            <summary>
            Extension type for the ExpandObject type
            </summary>
        </member>
        <member name="M:PnP.Core.ExpandoObjectExtensions.MergeWith(System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject[])">
            <summary>
            Merge several expando objects together
            The same properties are overridden with the value of the last specified expando
            </summary>
            <param name="expando">The initial expando</param>
            <param name="others">All the expando to merge</param>
            <returns>A new expando instance resulting from the merge of all specified expandos</returns>
        </member>
        <member name="T:PnP.Core.JsonExtensions">
            <summary>
            Conversion to object extensions
            </summary>
        </member>
        <member name="M:PnP.Core.JsonExtensions.ToObject``1(System.Text.Json.JsonElement,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JsonElement to an Object
            </summary>
        </member>
        <member name="M:PnP.Core.JsonExtensions.ToObject(System.Text.Json.JsonElement,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JsonElement to an Object based on the provided type
            </summary>
        </member>
        <member name="M:PnP.Core.JsonExtensions.Get(System.Text.Json.JsonElement,System.String)">
            <summary>
            Gets child JsonElement by it's name. If there is no child element with such name, returns <see cref="T:System.Nullable`1" />
            </summary>
        </member>
        <member name="M:PnP.Core.JsonExtensions.Get(System.Text.Json.JsonElement,System.Int32)">
            <summary>
            Gets child JsonElement by it's index. If there is no child element with such name, returns <see cref="T:System.Nullable`1" />
            </summary>
        </member>
        <member name="T:PnP.Core.NameValueCollectionExtensions">
            <summary>
            ToString() on NameValueCollection is differently implemented for .NET Framework causing encoding issues. To work around
            this is a custom ToString() method which ensures the .NET Core/.NET 5 logic is always followed
            See https://github.com/aspnet/AspNetWebStack/blob/42991b3d2537b702736463f76a10a4fcf2ea44c9/src/System.Net.Http.Formatting/Internal/HttpValueCollection.cs for
            the original source code
            </summary>
        </member>
        <member name="M:PnP.Core.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)">
            <summary>
            Retrieves the value of a public, instance property 
            </summary>
            <param name="source">The source object</param>
            <param name="propertyName">The property name, case insensitive</param>
            <returns>The property value, if any</returns>
        </member>
        <member name="M:PnP.Core.StreamExtensions.CopyAsString(System.IO.Stream)">
            <summary>
            Create a string from a copy of the stream
            Does not affect the state of the original stream
            </summary>
            <param name="stream">The stream to get a string from</param>
            <returns>The value of the stream as string</returns>
        </member>
        <member name="M:PnP.Core.StringExtensions.AsGraphEtag(System.String)">
            <summary>
            Used to alter a SharePoint eTag for Graph
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.UrlUtility">
            <summary>
            Static methods to modify URL paths.
            </summary>
        </member>
        <member name="M:PnP.Core.UrlUtility.Combine(System.Uri,System.String[])">
            <summary>
            Combines a path and a relative path.
            </summary>
            <param name="path">A SharePoint URL</param>
            <param name="relativePaths">SharePoint relative URLs</param>
            <returns>Returns combined path with a relative paths</returns>
        </member>
        <member name="M:PnP.Core.UrlUtility.Combine(System.String,System.String[])">
            <summary>
            Combines a path and a relative path.
            </summary>
            <param name="path">A SharePoint URL</param>
            <param name="relativePaths">SharePoint relative URLs</param>
            <returns>Returns combined path with a relative paths</returns>
        </member>
        <member name="M:PnP.Core.UrlUtility.Combine(System.String,System.String)">
            <summary>
            Combines a path and a relative path.
            </summary>
            <param name="path">A SharePoint URL</param>
            <param name="relative">SharePoint relative URL</param>
            <returns>Returns comibed path with a relative path</returns>
        </member>
        <member name="M:PnP.Core.UrlUtility.MakeAbsoluteUrl(System.Uri,System.String)">
            <summary>
            Returns absolute URL of a resource located in a SharePoint site.
            </summary>
            <param name="webUrl">The URL of a SharePoint site (Web).</param>
            <param name="serverRelativeUrl">Any server relative URL of a resource.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.UrlUtility.EnsureAbsoluteUrl(System.Uri,System.String,System.Boolean)">
            <summary>
            Ensure the absolute URL from a specified resource URL
            </summary>
            <param name="webUrl">The URL of a SharePoint site (Web).</param>
            <param name="resourceUrl">The absolute or server relative URL of a resource.</param>
            <param name="checkIfWebContainedResource">Indicates if the resource URL must belong to the specified web (default = false)</param>
            <returns>The absolute URL of the specified resource.</returns>
        </member>
        <member name="M:PnP.Core.UrlUtility.IsSameSite(System.Uri,System.String)">
            <summary>
            Checks wether the resource absolute or relative URL is located in specified site (Web).
            </summary>
            <param name="webUrl">The URL of the SharePoint site (Web).</param>
            <param name="resourceUrl">The absolute or relative URL of a resource.</param>
            <returns><c>true</c> if the resource is in the same site, <c>false</c> otherwise</returns>
        </member>
        <member name="M:PnP.Core.UrlUtility.EnsureTrailingSlash(System.String)">
            <summary>
            Ensures that there is a trailing slash at the end of the URL.
            </summary>
            <param name="urlToProcess">The URL to ensure to have a trailing slash.</param>
            <returns>The ensured trailing slash URL.</returns>
        </member>
        <member name="M:PnP.Core.UrlUtility.EnsureTrailingSlash(System.Uri)">
            <summary>
            Ensures that there is a trailing slash at the end of the URL.
            </summary>
            <param name="uri">The URL to ensure to have a trailing slash.</param>
            <returns>The ensured trailing slash URI.</returns>
        </member>
        <member name="M:PnP.Core.UrlUtility.CombineRelativeUrlWithUrlParameters(System.String,System.String)">
            <summary>
            Combines provided url parameters with an url that has url parameters as wel
            </summary>
            <param name="baseRelativeUri">Base relative url (with url parameters)</param>
            <param name="urlParameters">Url parameters to combine</param>
            <returns>Relative url with combined url parameters</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.PnPCoreServiceCollectionExtensions">
            <summary>
            Extension methods for setting up PnP Core SDK services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.PnPCoreServiceCollectionExtensions.AddPnPCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures PnP Core SDK with default options
            </summary>
            <param name="services">The collection of services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></param>
            <returns>A PnPCoreBuilder instance</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.PnPCoreServiceCollectionExtensions.AddPnPCore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{PnP.Core.Services.Builder.Configuration.PnPCoreOptions})">
            <summary>
            Configures PnP Core SDK with custom options
            </summary>
            <param name="services">The collection of services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></param>
            <param name="options">An Action to configure the PnP Core options</param>
            <returns>A PnPCoreBuilder instance</returns>
        </member>
    </members>
</doc>
