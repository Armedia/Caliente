# CMSMF application uses Apache Commons Configuration libraries to read 
# the following properties file. Read following api documentation for more info.
# http://commons.apache.org/configuration/apidocs/index.html

# cmsmf.app.importexport.mode determines whether you are importing previously
# exported content into the target repository or exporting out of source
# repository. Valid values are Export or Import
cmsmf.app.importexport.mode=Export
#cmsmf.app.importexport.mode=Import

# Value of cmsmf.app.export.query.predicate properties determine what objects will be exported
# during export operation. The select clause requires specific attributes hence they will be 
# added by the application.
# NOTE: A Long query string can be separated into multiple lines using "\" characters 
cmsmf.app.export.query.predicate=from dm_document where folder('/Website', descend) \
								 and r_content_size < 20000000

# cmsmf.app.importexport.directory property specifies the filesystem location where the export
# process will create various object files and where the import process will read the object files from.
cmsmf.app.importexport.directory=C://CMSMF_Streams

# cmsmf.app.importexport.content.directory property specifies the filesystem location where the export
# process will create content files and where the import process will read the content files from.
cmsmf.app.importexport.content.directory=C://CMSMF_Streams//ContentFiles

# cmsmf.app.passwords.encrypted.flag specifies whether the passwords mentioned below in connections
# settings are encrypted or not. If the value of this flag is set to 'yes', 'Yes' or 'Y', cmsmf app
# will decrypt the password using dfc utility and use the decrypted password to create a session
# with appropriate repository. If this flag is set to 'no', 'No' or 'N', the password entered below
# will be taken as it is.
# NOTE use run_encrypt_password.bat to generate encrypted password and set it to the password field.
cmsmf.app.passwords.encrypted.flag=yes

# Source repository connection settings
source.repository.name=cobtest
source.repository.userName=dmadmin
source.repository.password=dmadmin

# Target repository connection settings
target.repository.name=cobtest
target.repository.userName=dmadmin
target.repository.password=dmadmin

# cmsmf.app.inlinepassworduser.passwordvalue determines what password value will be set when
# a user is created in the repository. If the value of this property is set to 'sameasloginid'
# then loginid is copied in the password field. If value is other than 'sameasloginid' then the
# password for inline password user will be set to that value.
cmsmf.app.inlinepassworduser.passwordvalue=sameasloginid

# cmsmf.app.repositoryowner.attributestocheck contains the list of attributes that will be inspected
# by the cmsmf application. If value of any of these attributes equals to the name of repository owner
# during the export process, the value will be updated to dm_dbo. During the import process if the value 
# of any of these attributes equals to dm_dbo, the value will be updated to the name of the repository
# owner of the target repository.
# NOTE: The list of attributes should be comma separated
cmsmf.app.repositoryowner.attributestocheck=group_admin,owner_name,users_names,owner,r_creator_name,r_modifier_name,acl_domain

# cmsmf.app.import.errorcount.threshold property is used during the import process. If total nbr of errors
# exceeds this threshold, the import process is halted.
cmsmf.app.import.errorcount.threshold = 50

# content_read_buffer_size is used in determining buffer size that will
# be used in reading content from repository streams
content_read_buffer_size=4096

# cmsmf.app.compressdata.flag determines during export step whether to compress the data. Also during
# import step it will try to uncompress the data if this flag is set to 'yes', 'Yes', or 'Y'.
# Set this property to 'No', 'no' or 'n' if the data should not be compressed.
cmsmf.app.compressdata.flag=yes

#When following property value is set to TEST, during import time, it will create
#folders in /Replications cabinet and it will append 1 at the end of user, group
#and acl names.
cmsmf.app.run_mode=TESTAA

