<?xml version="1.1" encoding="UTF-8"?>
<type-mapper xmlns="http://www.armedia.com/ns/caliente/engine/transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.armedia.com/ns/caliente/engine/transform platform:/resource/caliente-engine/src/main/resources/transform.xsd">

	<include>xml-resource-url-or-path</include>

	<type-mapping name="xxx" extends="zzzz">
		<!-- TODO: Should we allow archetype changes? What about VDocs, then? -->
		<type>ssss</type>
		<subtype>ssss</subtype>
		<decorators clear-existing="true">
			<remove-decorator></remove-decorator>

			<add-decorator lang="(constant|bsf|beanshell|js|...)">
				<!-- source object attributes are available via ${object.attribute[attributeName]} -->
				<!-- source object supplementary properties are available via ${object.property[propertyName]} -->
				<!-- source object type is available via ${object.type} -->
				<!-- source object subtype is available via ${object.subtype} -->
				<!-- source object decorators are available via the array ${object.decorator} -->
					<![CDATA[
					a > b < c ....
					]]>
			</add-decorator>
		</decorators>
	</type-mapping>

	<attribute-mapping name="xxxxx" includes="am-1 am-2 am-3 ... am-X">
		<attribute>
			<name lang="(constant|copy|bsf|beanshell|js|...)">
				<!-- source object attributes are available via ${object.attribute[attributeName]} -->
				<!-- source object supplementary properties are available via ${object.property[propertyName]} -->
				<!-- source object type is available via ${object.type} -->
				<!-- source object subtype is available via ${object.subtype} -->
				<!-- source object decorators are available via the array ${object.decorator} -->
				<![CDATA[
				a > b < c ....
				]]>
			</name>
			<!-- for calculation -->
			<value lang="(constant|copy|bsf|beanshell|js|...)">
				<!-- source object attributes are available via ${object.attribute[attributeName]} -->
				<!-- source object supplementary properties are available via ${object.property[propertyName]} -->
				<!-- source object type is available via ${object.type} -->
				<!-- source object subtype is available via ${object.subtype} -->
				<!-- source object decorators are available via the array ${object.decorator} -->
				<![CDATA[
				a > b < c ....
				]]>
			</value>
		</attribute>
	</attribute-mapping>

	<include>xml-resource-url-or-path</include>

	<transformation>
		<condition>
			<and>
				<!-- Compare the source object's archetype -->
				<type>DOCUMENT|FOLDER|USER|GROUP|ACL|....</type>

				<!-- Compare the source object's subtype -->
				<subtype>dm_document|cmis:document|....</subtype>

				<!-- Only evaluates to true if the source object is a reference -->
				<is-reference />

				<!-- Check for the existence of a decorator (i.e. aspect) on the source object -->
				<check-decorator comparison="globi">xxx</check-decorator>

				<!-- Check for the value in an attribute (or any, in the case of repeating attribute-set) name = the name of the attribute to check 
					against value = the value to use for the comparison comparison = the comparison to execute (default = "eq"): eq : equals gt : greater 
					than ge : greater than or equal lt : less than le : less than or equal sw : starts with ew : ends with re : regular expression match 
					i = case insensitive (default is case sensitive) -->
				<check-object-attribute>
					<name>xxxx</name>
					<comparison>eqi</comparison>
					<value lang="bsf">
						<!-- source object attributes are available via ${object.attribute[attributeName]} -->
						<!-- source object supplementary properties are available via ${object.property[propertyName]} -->
						<!-- source object type is available via ${object.type} -->
						<!-- source object subtype is available via ${object.subtype} -->
						<!-- source object decorators are available via the array ${object.decorator} -->
						<![CDATA[
						a > b < c ....
						]]>
					</value>
				</check-object-attribute>
				<check-caliente-property>
					<name>xxxx</name>
					<comparison>swi</comparison>
					<value lang="(constant|copy|bsf|beanshell|js|...)">
						<!-- source object attributes are available via ${object.attribute[attributeName]} -->
						<!-- source object supplementary properties are available via ${object.property[propertyName]} -->
						<!-- source object type is available via ${object.type} -->
						<!-- source object subtype is available via ${object.subtype} -->
						<!-- source object decorators are available via the array ${object.decorator} -->
						<![CDATA[
						a > b < c ....
						]]>
					</value>
				</check-caliente-property>

				<check-expression>
					<source lang="(constant|copy|bsf|beanshell|js|...)">
						<!-- source object attributes are available via ${object.attribute[attributeName]} -->
						<!-- source object supplementary properties are available via ${object.property[propertyName]} -->
						<!-- source object type is available via ${object.type} -->
						<!-- source object subtype is available via ${object.subtype} -->
						<!-- source object decorators are available via the array ${object.decorator} -->
						<![CDATA[
						a > b < c ....
						]]>
					</source>
					<comparison>ge</comparison>
					<value lang="(constant|copy|bsf|beanshell|js|...)">
						<!-- source object attributes are available via ${object.attribute[attributeName]} -->
						<!-- source object supplementary properties are available via ${object.property[propertyName]} -->
						<!-- source object type is available via ${object.type} -->
						<!-- source object subtype is available via ${object.subtype} -->
						<!-- source object decorators are available via the array ${object.decorator} -->
						<![CDATA[
						a > b < c ....
						]]>
					</value>
				</check-expression>

				<or>
					<not>
						<and>
						</and>
					</not>
					<and></and>
					<or></or>
					<xor></xor>
					<not>
						<and>
						</and>
					</not>
				</or>
			</and>
		</condition>

		<!-- Override the "default" type mapping, above. Must declare at least one of "type" or "decorators". -->
		<type-mapping extends=".....">
			<!-- TODO: Should we allow archetype changes? What about VDocs, then? -->
			<type>ddd</type>
			<subtype>xxx</subtype>
			<decorators clear-existing="false">
				<remove-decorator lang="(constant|bsf|beanshell|js|...)">
					<!-- source object attributes are available via ${object.attribute[attributeName]} -->
					<!-- source object supplementary properties are available via ${object.property[propertyName]} -->
					<!-- source object type is available via ${object.type} -->
					<!-- source object subtype is available via ${object.subtype} -->
					<!-- source object decorators are available via the array ${object.decorator} -->
						<![CDATA[
						a > b < c ....
						]]>
				</remove-decorator>

				<add-decorator lang="(constant|bsf|beanshell|js|...)">
					<!-- source object attributes are available via ${object.attribute[attributeName]} -->
					<!-- source object supplementary properties are available via ${object.property[propertyName]} -->
					<!-- source object type is available via ${object.type} -->
					<!-- source object subtype is available via ${object.subtype} -->
					<!-- source object decorators are available via the array ${object.decorator} -->
						<![CDATA[
						a > b < c ....
						]]>
				</add-decorator>
			</decorators>
		</type-mapping>
 
		<attribute-mapping includes="....">
			<attribute>
				<name></name>
				<!-- for calculation -->
				<value lang="(constant|copy|bsf|beanshell|js|...)">
					<!-- source object attributes are available via ${object.attribute[attributeName]} -->
					<!-- source object supplementary properties are available via ${object.property[propertyName]} -->
					<!-- source object type is available via ${object.type} -->
					<!-- source object subtype is available via ${object.subtype} -->
					<!-- source object decorators are available via the array ${object.decorator} -->
					<![CDATA[
					a > b < c ....
					]]>
				</value>
			</attribute>
		</attribute-mapping>
	</transformation>
</type-mapper>