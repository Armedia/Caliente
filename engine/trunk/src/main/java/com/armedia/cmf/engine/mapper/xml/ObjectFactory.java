//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.06.24 at 10:52:07 AM CST
//

package com.armedia.cmf.engine.mapper.xml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface
 * generated in the com.armedia.cmf.engine.mapper.xml package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the Java representation
 * for XML content. The Java representation of XML content can consist of schema derived interfaces
 * and classes representing the binding of schema type definitions, element declarations and model
 * groups. Factory methods for each of these are provided in this class.
 *
 */
@XmlRegistry
public class ObjectFactory {

	public static final String NAMESPACE = "http://www.armedia.com/ns/cmf/engine/mappings";

	private final static QName _Mappings_QNAME = new QName(ObjectFactory.NAMESPACE, "mappings");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of schema derived classes
	 * for package: com.armedia.cmf.engine.mapper.xml
	 *
	 */
	public ObjectFactory() {
	}

	/**
	 * Create an instance of {@link MappingsT }
	 *
	 */
	public MappingsT createMappingsT() {
		return new MappingsT();
	}

	/**
	 * Create an instance of {@link MappingT }
	 *
	 */
	public MappingT createMappingT() {
		return new MappingT();
	}

	/**
	 * Create an instance of {@link BaseTypeT }
	 *
	 */
	public BaseTypeT createBaseTypeT() {
		return new BaseTypeT();
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link MappingsT }{@code >}
	 *
	 */
	@XmlElementDecl(namespace = ObjectFactory.NAMESPACE, name = "mappings")
	public JAXBElement<MappingsT> createMappings(MappingsT value) {
		return new JAXBElement<MappingsT>(ObjectFactory._Mappings_QNAME, MappingsT.class, null, value);
	}

}
