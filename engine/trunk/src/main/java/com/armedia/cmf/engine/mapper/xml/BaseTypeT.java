//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.06.24 at 10:52:07 AM CST
//

package com.armedia.cmf.engine.mapper.xml;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import javax.xml.bind.Unmarshaller;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;

import com.armedia.cmf.storage.CmfType;

/**
 * <p>
 * Java class for baseType.t complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="baseType.t">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="mapping" type="{http://www.armedia.com/ns/cmf/stores}mapping.t" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{http://www.armedia.com/ns/cmf/stores}typeName.t" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "baseType.t", propOrder = {
	"mapping"
})
public class BaseTypeT {

	protected List<MappingT> mapping;

	@XmlAttribute(required = true)
	protected String name;

	@XmlTransient
	private CmfType baseType = null;

	@XmlTransient
	private final Map<String, String> mappings = new TreeMap<String, String>();

	protected void afterUnmarshal(Unmarshaller u, Object parent) {
		if (this.mapping != null) {
			for (MappingT m : this.mapping) {
				String old = this.mappings.put(m.getFrom(), m.getTo());
				if (old != null) { throw new RuntimeException(String.format(
					"Duplicate subtype mapping for [%s]: maps to [%s] and [%s]", m.getFrom(), m.getTo(), old)); }
			}
		}
		this.baseType = CmfType.valueOf(this.name);
	}

	protected void beforeMarshal(Object source) {
		this.mapping = new ArrayList<MappingT>(this.mappings.size());
		for (Map.Entry<String, String> e : this.mappings.entrySet()) {
			MappingT m = new MappingT();
			m.setFrom(e.getKey());
			m.setTo(e.getValue());
			this.mapping.add(m);
		}
		this.name = this.baseType.name();
	}

	public Map<String, String> getMappings() {
		return this.mappings;
	}

	public CmfType getBaseType() {
		return this.baseType;
	}

	public void setBaseType(CmfType baseType) {
		this.baseType = baseType;
	}

}