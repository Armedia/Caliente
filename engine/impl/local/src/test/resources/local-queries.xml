<?xml version="1.0" encoding="UTF-8"?>
<local-queries xmlns="http://www.armedia.com/ns/caliente/engine/local" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.armedia.com/ns/caliente/engine/local ../../main/resources/local.xsd">

	<!-- All paths given are expected to be relative to this directory -->
	<root-path>....</root-path>

	<data-sources>
		<data-source name="dsName">
			<url>jdbc-url</url>
			<driver>jdbc.driver.Class</driver>
			<user>jdbc-user</user>
			<password>encryptable-jdbc-pass</password>
			<setting name="setting.1">value.1</setting>
			<setting name="setting.2">value.2</setting>
			<!-- ... -->
			<setting name="setting.N">value.N</setting>
		</data-source>
	</data-sources>

	<common-post-processors>
		<post-processors id="ppId">
		</post-processors>
	</common-post-processors>

	<!-- One or more SQL queries can be run to obtain path information -->
	<searches>

		<!-- Returned paths are expected to be relative to a single base location -->
		<search id="targetId" dataSource="dsName">
			<!-- The un-parameterized query to execute -->
			<sql><![CDATA[ SQL QUERY]]></sql>

			<!-- How many rows to skip from the top -->
			<skip>1</skip>

			<!-- How many rows to return, total -->
			<count>2</count>

			<!-- TODO: Support a filter clause like <post-process>? -->

			<!-- Which column(s) to explore when looking for the path to return -->
			<path-columns>
				<path-column>option1</path-column>
				<path-column>option2</path-column>
				<path-column>option3</path-column>
			</path-columns>

			<!-- One or more post-processor scripts that will be applied, in turn, to each found path -->
			<!-- (the first non-null, non-empty value *after post-processing*, will be returned per record) -->
			<post-processors>
				<post-processor type="jexl3"><![CDATA[
					// JEXL or other script that consumes ${path} and returns the post-processed value
				]]></post-processor>
				<post-processor type="class">com.canonical.class.Name::methodName</post-processor>
			</post-processors>
		</search>

		<!-- More searches, they'll be executed in order, and the results concatenated -->
		<!-- <search>...</search> -->
	</searches>

	<!-- A list of historyId queries. The first one to return a value, wins -->
	<history-ids>
		<!-- A query that accepts the documentId as a parameter for lookups, and returns the string -->
		<!-- that can be used as a historyId for the given object -->
		<history-id id="kaka" dataSource="dsName">
			<![CDATA[... query to obtain the history ID, using only a single "?" marker]]>
		</history-id>

		<!-- more <history-id> -->
	</history-ids>

	<!-- A list of version-list queries. The first one to return non-empty history, wins -->
	<version-lists>
		<!-- A query that accepts the historyId as a parameter for lookups, and returns a list of key-value pairs -->
		<!-- containing the versionLabel and path for each version in the given history, in proper order -->
		<version-list id="kaka" dataSource="dsName">
			<sql>
				<![CDATA[... query to obtain the history ID, including ${historyId} parameter]]>
			</sql>
			<post-processors>
				<post-processor ref="ppId" />
			</post-processors>
		</version-list>

		<!-- more <version-list> -->
	</version-lists>

</local-queries>